// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgUserMonster.proto

package com.felania.msldb;

public final class MsgUserMonsterOuterClass {
  private MsgUserMonsterOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MsgUserMonsterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:msggamedata.MsgUserMonster)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 id = 1;</code>
     */
    long getId();

    /**
     * <code>uint64 user_id = 2;</code>
     */
    long getUserId();

    /**
     * <code>fixed32 monster_uid = 3;</code>
     */
    int getMonsterUid();

    /**
     * <code>uint32 lev = 4;</code>
     */
    int getLev();

    /**
     * <code>float attack = 5;</code>
     */
    float getAttack();

    /**
     * <code>float defence = 6;</code>
     */
    float getDefence();

    /**
     * <code>float heal = 7;</code>
     */
    float getHeal();

    /**
     * <code>double hp = 8;</code>
     */
    double getHp();

    /**
     * <code>.msggamedata.MonsterStatType stat_type = 9;</code>
     */
    int getStatTypeValue();
    /**
     * <code>.msggamedata.MonsterStatType stat_type = 9;</code>
     */
    com.felania.msldb.MonsterStatTypeOuterClass.MonsterStatType getStatType();

    /**
     * <code>.msggamedata.MonsterStatWeightType stat_weight_type = 10;</code>
     */
    int getStatWeightTypeValue();
    /**
     * <code>.msggamedata.MonsterStatWeightType stat_weight_type = 10;</code>
     */
    com.felania.msldb.MonsterStatWeightTypeOuterClass.MonsterStatWeightType getStatWeightType();

    /**
     * <code>uint32 exp = 12;</code>
     */
    int getExp();

    /**
     * <code>uint32 rune_slot_shape1 = 13;</code>
     */
    int getRuneSlotShape1();

    /**
     * <code>uint32 rune_slot_shape2 = 14;</code>
     */
    int getRuneSlotShape2();

    /**
     * <code>uint32 rune_slot_shape3 = 15;</code>
     */
    int getRuneSlotShape3();

    /**
     * <code>uint64 rune_slot_id1 = 16;</code>
     */
    long getRuneSlotId1();

    /**
     * <code>uint64 rune_slot_id2 = 17;</code>
     */
    long getRuneSlotId2();

    /**
     * <code>uint64 rune_slot_id3 = 18;</code>
     */
    long getRuneSlotId3();

    /**
     * <code>.msggamedata.MonsterGrade grade = 19;</code>
     */
    int getGradeValue();
    /**
     * <code>.msggamedata.MonsterGrade grade = 19;</code>
     */
    com.felania.msldb.MonsterGradeOuterClass.MonsterGrade getGrade();

    /**
     * <code>bool locked = 21;</code>
     */
    boolean getLocked();

    /**
     * <code>uint64 create_date = 22;</code>
     */
    long getCreateDate();

    /**
     * <code>uint64 last_battle_date = 23;</code>
     */
    long getLastBattleDate();

    /**
     * <code>bool is_friend = 24;</code>
     */
    boolean getIsFriend();

    /**
     * <code>bool is_support = 25;</code>
     */
    boolean getIsSupport();

    /**
     * <code>fixed32 support_monster_uid = 26;</code>
     */
    int getSupportMonsterUid();

    /**
     * <code>uint32 leader_skill_grade = 27;</code>
     */
    int getLeaderSkillGrade();

    /**
     * <code>uint64 pasted_user_monster_id = 28;</code>
     */
    long getPastedUserMonsterId();

    /**
     * <code>uint32 pasted_count = 29;</code>
     */
    int getPastedCount();

    /**
     * <code>uint32 update_timestamp = 30;</code>
     */
    int getUpdateTimestamp();

    /**
     * <code>.msggamedata.MonsterStorageType storage_type = 31;</code>
     */
    int getStorageTypeValue();
    /**
     * <code>.msggamedata.MonsterStorageType storage_type = 31;</code>
     */
    com.felania.msldb.MonsterStorageTypeOuterClass.MonsterStorageType getStorageType();

    /**
     * <code>uint32 default_skill_level = 32;</code>
     */
    int getDefaultSkillLevel();

    /**
     * <code>uint32 active_skill_level = 33;</code>
     */
    int getActiveSkillLevel();

    /**
     * <code>fixed32 costume_uid = 34;</code>
     */
    int getCostumeUid();
  }
  /**
   * Protobuf type {@code msggamedata.MsgUserMonster}
   */
  public  static final class MsgUserMonster extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:msggamedata.MsgUserMonster)
      MsgUserMonsterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgUserMonster.newBuilder() to construct.
    private MsgUserMonster(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgUserMonster() {
      id_ = 0L;
      userId_ = 0L;
      monsterUid_ = 0;
      lev_ = 0;
      attack_ = 0F;
      defence_ = 0F;
      heal_ = 0F;
      hp_ = 0D;
      statType_ = 0;
      statWeightType_ = 0;
      exp_ = 0;
      runeSlotShape1_ = 0;
      runeSlotShape2_ = 0;
      runeSlotShape3_ = 0;
      runeSlotId1_ = 0L;
      runeSlotId2_ = 0L;
      runeSlotId3_ = 0L;
      grade_ = 0;
      locked_ = false;
      createDate_ = 0L;
      lastBattleDate_ = 0L;
      isFriend_ = false;
      isSupport_ = false;
      supportMonsterUid_ = 0;
      leaderSkillGrade_ = 0;
      pastedUserMonsterId_ = 0L;
      pastedCount_ = 0;
      updateTimestamp_ = 0;
      storageType_ = 0;
      defaultSkillLevel_ = 0;
      activeSkillLevel_ = 0;
      costumeUid_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgUserMonster(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readUInt64();
              break;
            }
            case 16: {

              userId_ = input.readUInt64();
              break;
            }
            case 29: {

              monsterUid_ = input.readFixed32();
              break;
            }
            case 32: {

              lev_ = input.readUInt32();
              break;
            }
            case 45: {

              attack_ = input.readFloat();
              break;
            }
            case 53: {

              defence_ = input.readFloat();
              break;
            }
            case 61: {

              heal_ = input.readFloat();
              break;
            }
            case 65: {

              hp_ = input.readDouble();
              break;
            }
            case 72: {
              int rawValue = input.readEnum();

              statType_ = rawValue;
              break;
            }
            case 80: {
              int rawValue = input.readEnum();

              statWeightType_ = rawValue;
              break;
            }
            case 96: {

              exp_ = input.readUInt32();
              break;
            }
            case 104: {

              runeSlotShape1_ = input.readUInt32();
              break;
            }
            case 112: {

              runeSlotShape2_ = input.readUInt32();
              break;
            }
            case 120: {

              runeSlotShape3_ = input.readUInt32();
              break;
            }
            case 128: {

              runeSlotId1_ = input.readUInt64();
              break;
            }
            case 136: {

              runeSlotId2_ = input.readUInt64();
              break;
            }
            case 144: {

              runeSlotId3_ = input.readUInt64();
              break;
            }
            case 152: {
              int rawValue = input.readEnum();

              grade_ = rawValue;
              break;
            }
            case 168: {

              locked_ = input.readBool();
              break;
            }
            case 176: {

              createDate_ = input.readUInt64();
              break;
            }
            case 184: {

              lastBattleDate_ = input.readUInt64();
              break;
            }
            case 192: {

              isFriend_ = input.readBool();
              break;
            }
            case 200: {

              isSupport_ = input.readBool();
              break;
            }
            case 213: {

              supportMonsterUid_ = input.readFixed32();
              break;
            }
            case 216: {

              leaderSkillGrade_ = input.readUInt32();
              break;
            }
            case 224: {

              pastedUserMonsterId_ = input.readUInt64();
              break;
            }
            case 232: {

              pastedCount_ = input.readUInt32();
              break;
            }
            case 240: {

              updateTimestamp_ = input.readUInt32();
              break;
            }
            case 248: {
              int rawValue = input.readEnum();

              storageType_ = rawValue;
              break;
            }
            case 256: {

              defaultSkillLevel_ = input.readUInt32();
              break;
            }
            case 264: {

              activeSkillLevel_ = input.readUInt32();
              break;
            }
            case 277: {

              costumeUid_ = input.readFixed32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.felania.msldb.MsgUserMonsterOuterClass.internal_static_msggamedata_MsgUserMonster_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.felania.msldb.MsgUserMonsterOuterClass.internal_static_msggamedata_MsgUserMonster_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster.class, com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>uint64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int USER_ID_FIELD_NUMBER = 2;
    private long userId_;
    /**
     * <code>uint64 user_id = 2;</code>
     */
    public long getUserId() {
      return userId_;
    }

    public static final int MONSTER_UID_FIELD_NUMBER = 3;
    private int monsterUid_;
    /**
     * <code>fixed32 monster_uid = 3;</code>
     */
    public int getMonsterUid() {
      return monsterUid_;
    }

    public static final int LEV_FIELD_NUMBER = 4;
    private int lev_;
    /**
     * <code>uint32 lev = 4;</code>
     */
    public int getLev() {
      return lev_;
    }

    public static final int ATTACK_FIELD_NUMBER = 5;
    private float attack_;
    /**
     * <code>float attack = 5;</code>
     */
    public float getAttack() {
      return attack_;
    }

    public static final int DEFENCE_FIELD_NUMBER = 6;
    private float defence_;
    /**
     * <code>float defence = 6;</code>
     */
    public float getDefence() {
      return defence_;
    }

    public static final int HEAL_FIELD_NUMBER = 7;
    private float heal_;
    /**
     * <code>float heal = 7;</code>
     */
    public float getHeal() {
      return heal_;
    }

    public static final int HP_FIELD_NUMBER = 8;
    private double hp_;
    /**
     * <code>double hp = 8;</code>
     */
    public double getHp() {
      return hp_;
    }

    public static final int STAT_TYPE_FIELD_NUMBER = 9;
    private int statType_;
    /**
     * <code>.msggamedata.MonsterStatType stat_type = 9;</code>
     */
    public int getStatTypeValue() {
      return statType_;
    }
    /**
     * <code>.msggamedata.MonsterStatType stat_type = 9;</code>
     */
    public com.felania.msldb.MonsterStatTypeOuterClass.MonsterStatType getStatType() {
      com.felania.msldb.MonsterStatTypeOuterClass.MonsterStatType result = com.felania.msldb.MonsterStatTypeOuterClass.MonsterStatType.valueOf(statType_);
      return result == null ? com.felania.msldb.MonsterStatTypeOuterClass.MonsterStatType.UNRECOGNIZED : result;
    }

    public static final int STAT_WEIGHT_TYPE_FIELD_NUMBER = 10;
    private int statWeightType_;
    /**
     * <code>.msggamedata.MonsterStatWeightType stat_weight_type = 10;</code>
     */
    public int getStatWeightTypeValue() {
      return statWeightType_;
    }
    /**
     * <code>.msggamedata.MonsterStatWeightType stat_weight_type = 10;</code>
     */
    public com.felania.msldb.MonsterStatWeightTypeOuterClass.MonsterStatWeightType getStatWeightType() {
      com.felania.msldb.MonsterStatWeightTypeOuterClass.MonsterStatWeightType result = com.felania.msldb.MonsterStatWeightTypeOuterClass.MonsterStatWeightType.valueOf(statWeightType_);
      return result == null ? com.felania.msldb.MonsterStatWeightTypeOuterClass.MonsterStatWeightType.UNRECOGNIZED : result;
    }

    public static final int EXP_FIELD_NUMBER = 12;
    private int exp_;
    /**
     * <code>uint32 exp = 12;</code>
     */
    public int getExp() {
      return exp_;
    }

    public static final int RUNE_SLOT_SHAPE1_FIELD_NUMBER = 13;
    private int runeSlotShape1_;
    /**
     * <code>uint32 rune_slot_shape1 = 13;</code>
     */
    public int getRuneSlotShape1() {
      return runeSlotShape1_;
    }

    public static final int RUNE_SLOT_SHAPE2_FIELD_NUMBER = 14;
    private int runeSlotShape2_;
    /**
     * <code>uint32 rune_slot_shape2 = 14;</code>
     */
    public int getRuneSlotShape2() {
      return runeSlotShape2_;
    }

    public static final int RUNE_SLOT_SHAPE3_FIELD_NUMBER = 15;
    private int runeSlotShape3_;
    /**
     * <code>uint32 rune_slot_shape3 = 15;</code>
     */
    public int getRuneSlotShape3() {
      return runeSlotShape3_;
    }

    public static final int RUNE_SLOT_ID1_FIELD_NUMBER = 16;
    private long runeSlotId1_;
    /**
     * <code>uint64 rune_slot_id1 = 16;</code>
     */
    public long getRuneSlotId1() {
      return runeSlotId1_;
    }

    public static final int RUNE_SLOT_ID2_FIELD_NUMBER = 17;
    private long runeSlotId2_;
    /**
     * <code>uint64 rune_slot_id2 = 17;</code>
     */
    public long getRuneSlotId2() {
      return runeSlotId2_;
    }

    public static final int RUNE_SLOT_ID3_FIELD_NUMBER = 18;
    private long runeSlotId3_;
    /**
     * <code>uint64 rune_slot_id3 = 18;</code>
     */
    public long getRuneSlotId3() {
      return runeSlotId3_;
    }

    public static final int GRADE_FIELD_NUMBER = 19;
    private int grade_;
    /**
     * <code>.msggamedata.MonsterGrade grade = 19;</code>
     */
    public int getGradeValue() {
      return grade_;
    }
    /**
     * <code>.msggamedata.MonsterGrade grade = 19;</code>
     */
    public com.felania.msldb.MonsterGradeOuterClass.MonsterGrade getGrade() {
      com.felania.msldb.MonsterGradeOuterClass.MonsterGrade result = com.felania.msldb.MonsterGradeOuterClass.MonsterGrade.valueOf(grade_);
      return result == null ? com.felania.msldb.MonsterGradeOuterClass.MonsterGrade.UNRECOGNIZED : result;
    }

    public static final int LOCKED_FIELD_NUMBER = 21;
    private boolean locked_;
    /**
     * <code>bool locked = 21;</code>
     */
    public boolean getLocked() {
      return locked_;
    }

    public static final int CREATE_DATE_FIELD_NUMBER = 22;
    private long createDate_;
    /**
     * <code>uint64 create_date = 22;</code>
     */
    public long getCreateDate() {
      return createDate_;
    }

    public static final int LAST_BATTLE_DATE_FIELD_NUMBER = 23;
    private long lastBattleDate_;
    /**
     * <code>uint64 last_battle_date = 23;</code>
     */
    public long getLastBattleDate() {
      return lastBattleDate_;
    }

    public static final int IS_FRIEND_FIELD_NUMBER = 24;
    private boolean isFriend_;
    /**
     * <code>bool is_friend = 24;</code>
     */
    public boolean getIsFriend() {
      return isFriend_;
    }

    public static final int IS_SUPPORT_FIELD_NUMBER = 25;
    private boolean isSupport_;
    /**
     * <code>bool is_support = 25;</code>
     */
    public boolean getIsSupport() {
      return isSupport_;
    }

    public static final int SUPPORT_MONSTER_UID_FIELD_NUMBER = 26;
    private int supportMonsterUid_;
    /**
     * <code>fixed32 support_monster_uid = 26;</code>
     */
    public int getSupportMonsterUid() {
      return supportMonsterUid_;
    }

    public static final int LEADER_SKILL_GRADE_FIELD_NUMBER = 27;
    private int leaderSkillGrade_;
    /**
     * <code>uint32 leader_skill_grade = 27;</code>
     */
    public int getLeaderSkillGrade() {
      return leaderSkillGrade_;
    }

    public static final int PASTED_USER_MONSTER_ID_FIELD_NUMBER = 28;
    private long pastedUserMonsterId_;
    /**
     * <code>uint64 pasted_user_monster_id = 28;</code>
     */
    public long getPastedUserMonsterId() {
      return pastedUserMonsterId_;
    }

    public static final int PASTED_COUNT_FIELD_NUMBER = 29;
    private int pastedCount_;
    /**
     * <code>uint32 pasted_count = 29;</code>
     */
    public int getPastedCount() {
      return pastedCount_;
    }

    public static final int UPDATE_TIMESTAMP_FIELD_NUMBER = 30;
    private int updateTimestamp_;
    /**
     * <code>uint32 update_timestamp = 30;</code>
     */
    public int getUpdateTimestamp() {
      return updateTimestamp_;
    }

    public static final int STORAGE_TYPE_FIELD_NUMBER = 31;
    private int storageType_;
    /**
     * <code>.msggamedata.MonsterStorageType storage_type = 31;</code>
     */
    public int getStorageTypeValue() {
      return storageType_;
    }
    /**
     * <code>.msggamedata.MonsterStorageType storage_type = 31;</code>
     */
    public com.felania.msldb.MonsterStorageTypeOuterClass.MonsterStorageType getStorageType() {
      com.felania.msldb.MonsterStorageTypeOuterClass.MonsterStorageType result = com.felania.msldb.MonsterStorageTypeOuterClass.MonsterStorageType.valueOf(storageType_);
      return result == null ? com.felania.msldb.MonsterStorageTypeOuterClass.MonsterStorageType.UNRECOGNIZED : result;
    }

    public static final int DEFAULT_SKILL_LEVEL_FIELD_NUMBER = 32;
    private int defaultSkillLevel_;
    /**
     * <code>uint32 default_skill_level = 32;</code>
     */
    public int getDefaultSkillLevel() {
      return defaultSkillLevel_;
    }

    public static final int ACTIVE_SKILL_LEVEL_FIELD_NUMBER = 33;
    private int activeSkillLevel_;
    /**
     * <code>uint32 active_skill_level = 33;</code>
     */
    public int getActiveSkillLevel() {
      return activeSkillLevel_;
    }

    public static final int COSTUME_UID_FIELD_NUMBER = 34;
    private int costumeUid_;
    /**
     * <code>fixed32 costume_uid = 34;</code>
     */
    public int getCostumeUid() {
      return costumeUid_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeUInt64(1, id_);
      }
      if (userId_ != 0L) {
        output.writeUInt64(2, userId_);
      }
      if (monsterUid_ != 0) {
        output.writeFixed32(3, monsterUid_);
      }
      if (lev_ != 0) {
        output.writeUInt32(4, lev_);
      }
      if (attack_ != 0F) {
        output.writeFloat(5, attack_);
      }
      if (defence_ != 0F) {
        output.writeFloat(6, defence_);
      }
      if (heal_ != 0F) {
        output.writeFloat(7, heal_);
      }
      if (hp_ != 0D) {
        output.writeDouble(8, hp_);
      }
      if (statType_ != com.felania.msldb.MonsterStatTypeOuterClass.MonsterStatType.MS_None.getNumber()) {
        output.writeEnum(9, statType_);
      }
      if (statWeightType_ != com.felania.msldb.MonsterStatWeightTypeOuterClass.MonsterStatWeightType.MonsterStatWeightTypeNULL.getNumber()) {
        output.writeEnum(10, statWeightType_);
      }
      if (exp_ != 0) {
        output.writeUInt32(12, exp_);
      }
      if (runeSlotShape1_ != 0) {
        output.writeUInt32(13, runeSlotShape1_);
      }
      if (runeSlotShape2_ != 0) {
        output.writeUInt32(14, runeSlotShape2_);
      }
      if (runeSlotShape3_ != 0) {
        output.writeUInt32(15, runeSlotShape3_);
      }
      if (runeSlotId1_ != 0L) {
        output.writeUInt64(16, runeSlotId1_);
      }
      if (runeSlotId2_ != 0L) {
        output.writeUInt64(17, runeSlotId2_);
      }
      if (runeSlotId3_ != 0L) {
        output.writeUInt64(18, runeSlotId3_);
      }
      if (grade_ != com.felania.msldb.MonsterGradeOuterClass.MonsterGrade.MonsterGradeNULL.getNumber()) {
        output.writeEnum(19, grade_);
      }
      if (locked_ != false) {
        output.writeBool(21, locked_);
      }
      if (createDate_ != 0L) {
        output.writeUInt64(22, createDate_);
      }
      if (lastBattleDate_ != 0L) {
        output.writeUInt64(23, lastBattleDate_);
      }
      if (isFriend_ != false) {
        output.writeBool(24, isFriend_);
      }
      if (isSupport_ != false) {
        output.writeBool(25, isSupport_);
      }
      if (supportMonsterUid_ != 0) {
        output.writeFixed32(26, supportMonsterUid_);
      }
      if (leaderSkillGrade_ != 0) {
        output.writeUInt32(27, leaderSkillGrade_);
      }
      if (pastedUserMonsterId_ != 0L) {
        output.writeUInt64(28, pastedUserMonsterId_);
      }
      if (pastedCount_ != 0) {
        output.writeUInt32(29, pastedCount_);
      }
      if (updateTimestamp_ != 0) {
        output.writeUInt32(30, updateTimestamp_);
      }
      if (storageType_ != com.felania.msldb.MonsterStorageTypeOuterClass.MonsterStorageType.MST_USER_INVEN.getNumber()) {
        output.writeEnum(31, storageType_);
      }
      if (defaultSkillLevel_ != 0) {
        output.writeUInt32(32, defaultSkillLevel_);
      }
      if (activeSkillLevel_ != 0) {
        output.writeUInt32(33, activeSkillLevel_);
      }
      if (costumeUid_ != 0) {
        output.writeFixed32(34, costumeUid_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, id_);
      }
      if (userId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, userId_);
      }
      if (monsterUid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, monsterUid_);
      }
      if (lev_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, lev_);
      }
      if (attack_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, attack_);
      }
      if (defence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, defence_);
      }
      if (heal_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, heal_);
      }
      if (hp_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, hp_);
      }
      if (statType_ != com.felania.msldb.MonsterStatTypeOuterClass.MonsterStatType.MS_None.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, statType_);
      }
      if (statWeightType_ != com.felania.msldb.MonsterStatWeightTypeOuterClass.MonsterStatWeightType.MonsterStatWeightTypeNULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, statWeightType_);
      }
      if (exp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, exp_);
      }
      if (runeSlotShape1_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, runeSlotShape1_);
      }
      if (runeSlotShape2_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, runeSlotShape2_);
      }
      if (runeSlotShape3_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, runeSlotShape3_);
      }
      if (runeSlotId1_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(16, runeSlotId1_);
      }
      if (runeSlotId2_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(17, runeSlotId2_);
      }
      if (runeSlotId3_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(18, runeSlotId3_);
      }
      if (grade_ != com.felania.msldb.MonsterGradeOuterClass.MonsterGrade.MonsterGradeNULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(19, grade_);
      }
      if (locked_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, locked_);
      }
      if (createDate_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(22, createDate_);
      }
      if (lastBattleDate_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(23, lastBattleDate_);
      }
      if (isFriend_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(24, isFriend_);
      }
      if (isSupport_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(25, isSupport_);
      }
      if (supportMonsterUid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(26, supportMonsterUid_);
      }
      if (leaderSkillGrade_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(27, leaderSkillGrade_);
      }
      if (pastedUserMonsterId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(28, pastedUserMonsterId_);
      }
      if (pastedCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(29, pastedCount_);
      }
      if (updateTimestamp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(30, updateTimestamp_);
      }
      if (storageType_ != com.felania.msldb.MonsterStorageTypeOuterClass.MonsterStorageType.MST_USER_INVEN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(31, storageType_);
      }
      if (defaultSkillLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(32, defaultSkillLevel_);
      }
      if (activeSkillLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(33, activeSkillLevel_);
      }
      if (costumeUid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(34, costumeUid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster)) {
        return super.equals(obj);
      }
      com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster other = (com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && (getUserId()
          == other.getUserId());
      result = result && (getMonsterUid()
          == other.getMonsterUid());
      result = result && (getLev()
          == other.getLev());
      result = result && (
          java.lang.Float.floatToIntBits(getAttack())
          == java.lang.Float.floatToIntBits(
              other.getAttack()));
      result = result && (
          java.lang.Float.floatToIntBits(getDefence())
          == java.lang.Float.floatToIntBits(
              other.getDefence()));
      result = result && (
          java.lang.Float.floatToIntBits(getHeal())
          == java.lang.Float.floatToIntBits(
              other.getHeal()));
      result = result && (
          java.lang.Double.doubleToLongBits(getHp())
          == java.lang.Double.doubleToLongBits(
              other.getHp()));
      result = result && statType_ == other.statType_;
      result = result && statWeightType_ == other.statWeightType_;
      result = result && (getExp()
          == other.getExp());
      result = result && (getRuneSlotShape1()
          == other.getRuneSlotShape1());
      result = result && (getRuneSlotShape2()
          == other.getRuneSlotShape2());
      result = result && (getRuneSlotShape3()
          == other.getRuneSlotShape3());
      result = result && (getRuneSlotId1()
          == other.getRuneSlotId1());
      result = result && (getRuneSlotId2()
          == other.getRuneSlotId2());
      result = result && (getRuneSlotId3()
          == other.getRuneSlotId3());
      result = result && grade_ == other.grade_;
      result = result && (getLocked()
          == other.getLocked());
      result = result && (getCreateDate()
          == other.getCreateDate());
      result = result && (getLastBattleDate()
          == other.getLastBattleDate());
      result = result && (getIsFriend()
          == other.getIsFriend());
      result = result && (getIsSupport()
          == other.getIsSupport());
      result = result && (getSupportMonsterUid()
          == other.getSupportMonsterUid());
      result = result && (getLeaderSkillGrade()
          == other.getLeaderSkillGrade());
      result = result && (getPastedUserMonsterId()
          == other.getPastedUserMonsterId());
      result = result && (getPastedCount()
          == other.getPastedCount());
      result = result && (getUpdateTimestamp()
          == other.getUpdateTimestamp());
      result = result && storageType_ == other.storageType_;
      result = result && (getDefaultSkillLevel()
          == other.getDefaultSkillLevel());
      result = result && (getActiveSkillLevel()
          == other.getActiveSkillLevel());
      result = result && (getCostumeUid()
          == other.getCostumeUid());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + USER_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUserId());
      hash = (37 * hash) + MONSTER_UID_FIELD_NUMBER;
      hash = (53 * hash) + getMonsterUid();
      hash = (37 * hash) + LEV_FIELD_NUMBER;
      hash = (53 * hash) + getLev();
      hash = (37 * hash) + ATTACK_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAttack());
      hash = (37 * hash) + DEFENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDefence());
      hash = (37 * hash) + HEAL_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getHeal());
      hash = (37 * hash) + HP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getHp()));
      hash = (37 * hash) + STAT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + statType_;
      hash = (37 * hash) + STAT_WEIGHT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + statWeightType_;
      hash = (37 * hash) + EXP_FIELD_NUMBER;
      hash = (53 * hash) + getExp();
      hash = (37 * hash) + RUNE_SLOT_SHAPE1_FIELD_NUMBER;
      hash = (53 * hash) + getRuneSlotShape1();
      hash = (37 * hash) + RUNE_SLOT_SHAPE2_FIELD_NUMBER;
      hash = (53 * hash) + getRuneSlotShape2();
      hash = (37 * hash) + RUNE_SLOT_SHAPE3_FIELD_NUMBER;
      hash = (53 * hash) + getRuneSlotShape3();
      hash = (37 * hash) + RUNE_SLOT_ID1_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRuneSlotId1());
      hash = (37 * hash) + RUNE_SLOT_ID2_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRuneSlotId2());
      hash = (37 * hash) + RUNE_SLOT_ID3_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRuneSlotId3());
      hash = (37 * hash) + GRADE_FIELD_NUMBER;
      hash = (53 * hash) + grade_;
      hash = (37 * hash) + LOCKED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLocked());
      hash = (37 * hash) + CREATE_DATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCreateDate());
      hash = (37 * hash) + LAST_BATTLE_DATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLastBattleDate());
      hash = (37 * hash) + IS_FRIEND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsFriend());
      hash = (37 * hash) + IS_SUPPORT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsSupport());
      hash = (37 * hash) + SUPPORT_MONSTER_UID_FIELD_NUMBER;
      hash = (53 * hash) + getSupportMonsterUid();
      hash = (37 * hash) + LEADER_SKILL_GRADE_FIELD_NUMBER;
      hash = (53 * hash) + getLeaderSkillGrade();
      hash = (37 * hash) + PASTED_USER_MONSTER_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPastedUserMonsterId());
      hash = (37 * hash) + PASTED_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getPastedCount();
      hash = (37 * hash) + UPDATE_TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + getUpdateTimestamp();
      hash = (37 * hash) + STORAGE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + storageType_;
      hash = (37 * hash) + DEFAULT_SKILL_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getDefaultSkillLevel();
      hash = (37 * hash) + ACTIVE_SKILL_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getActiveSkillLevel();
      hash = (37 * hash) + COSTUME_UID_FIELD_NUMBER;
      hash = (53 * hash) + getCostumeUid();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code msggamedata.MsgUserMonster}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:msggamedata.MsgUserMonster)
        com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonsterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.felania.msldb.MsgUserMonsterOuterClass.internal_static_msggamedata_MsgUserMonster_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.felania.msldb.MsgUserMonsterOuterClass.internal_static_msggamedata_MsgUserMonster_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster.class, com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster.Builder.class);
      }

      // Construct using com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0L;

        userId_ = 0L;

        monsterUid_ = 0;

        lev_ = 0;

        attack_ = 0F;

        defence_ = 0F;

        heal_ = 0F;

        hp_ = 0D;

        statType_ = 0;

        statWeightType_ = 0;

        exp_ = 0;

        runeSlotShape1_ = 0;

        runeSlotShape2_ = 0;

        runeSlotShape3_ = 0;

        runeSlotId1_ = 0L;

        runeSlotId2_ = 0L;

        runeSlotId3_ = 0L;

        grade_ = 0;

        locked_ = false;

        createDate_ = 0L;

        lastBattleDate_ = 0L;

        isFriend_ = false;

        isSupport_ = false;

        supportMonsterUid_ = 0;

        leaderSkillGrade_ = 0;

        pastedUserMonsterId_ = 0L;

        pastedCount_ = 0;

        updateTimestamp_ = 0;

        storageType_ = 0;

        defaultSkillLevel_ = 0;

        activeSkillLevel_ = 0;

        costumeUid_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.felania.msldb.MsgUserMonsterOuterClass.internal_static_msggamedata_MsgUserMonster_descriptor;
      }

      public com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster getDefaultInstanceForType() {
        return com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster.getDefaultInstance();
      }

      public com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster build() {
        com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster buildPartial() {
        com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster result = new com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster(this);
        result.id_ = id_;
        result.userId_ = userId_;
        result.monsterUid_ = monsterUid_;
        result.lev_ = lev_;
        result.attack_ = attack_;
        result.defence_ = defence_;
        result.heal_ = heal_;
        result.hp_ = hp_;
        result.statType_ = statType_;
        result.statWeightType_ = statWeightType_;
        result.exp_ = exp_;
        result.runeSlotShape1_ = runeSlotShape1_;
        result.runeSlotShape2_ = runeSlotShape2_;
        result.runeSlotShape3_ = runeSlotShape3_;
        result.runeSlotId1_ = runeSlotId1_;
        result.runeSlotId2_ = runeSlotId2_;
        result.runeSlotId3_ = runeSlotId3_;
        result.grade_ = grade_;
        result.locked_ = locked_;
        result.createDate_ = createDate_;
        result.lastBattleDate_ = lastBattleDate_;
        result.isFriend_ = isFriend_;
        result.isSupport_ = isSupport_;
        result.supportMonsterUid_ = supportMonsterUid_;
        result.leaderSkillGrade_ = leaderSkillGrade_;
        result.pastedUserMonsterId_ = pastedUserMonsterId_;
        result.pastedCount_ = pastedCount_;
        result.updateTimestamp_ = updateTimestamp_;
        result.storageType_ = storageType_;
        result.defaultSkillLevel_ = defaultSkillLevel_;
        result.activeSkillLevel_ = activeSkillLevel_;
        result.costumeUid_ = costumeUid_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster) {
          return mergeFrom((com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster other) {
        if (other == com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.getUserId() != 0L) {
          setUserId(other.getUserId());
        }
        if (other.getMonsterUid() != 0) {
          setMonsterUid(other.getMonsterUid());
        }
        if (other.getLev() != 0) {
          setLev(other.getLev());
        }
        if (other.getAttack() != 0F) {
          setAttack(other.getAttack());
        }
        if (other.getDefence() != 0F) {
          setDefence(other.getDefence());
        }
        if (other.getHeal() != 0F) {
          setHeal(other.getHeal());
        }
        if (other.getHp() != 0D) {
          setHp(other.getHp());
        }
        if (other.statType_ != 0) {
          setStatTypeValue(other.getStatTypeValue());
        }
        if (other.statWeightType_ != 0) {
          setStatWeightTypeValue(other.getStatWeightTypeValue());
        }
        if (other.getExp() != 0) {
          setExp(other.getExp());
        }
        if (other.getRuneSlotShape1() != 0) {
          setRuneSlotShape1(other.getRuneSlotShape1());
        }
        if (other.getRuneSlotShape2() != 0) {
          setRuneSlotShape2(other.getRuneSlotShape2());
        }
        if (other.getRuneSlotShape3() != 0) {
          setRuneSlotShape3(other.getRuneSlotShape3());
        }
        if (other.getRuneSlotId1() != 0L) {
          setRuneSlotId1(other.getRuneSlotId1());
        }
        if (other.getRuneSlotId2() != 0L) {
          setRuneSlotId2(other.getRuneSlotId2());
        }
        if (other.getRuneSlotId3() != 0L) {
          setRuneSlotId3(other.getRuneSlotId3());
        }
        if (other.grade_ != 0) {
          setGradeValue(other.getGradeValue());
        }
        if (other.getLocked() != false) {
          setLocked(other.getLocked());
        }
        if (other.getCreateDate() != 0L) {
          setCreateDate(other.getCreateDate());
        }
        if (other.getLastBattleDate() != 0L) {
          setLastBattleDate(other.getLastBattleDate());
        }
        if (other.getIsFriend() != false) {
          setIsFriend(other.getIsFriend());
        }
        if (other.getIsSupport() != false) {
          setIsSupport(other.getIsSupport());
        }
        if (other.getSupportMonsterUid() != 0) {
          setSupportMonsterUid(other.getSupportMonsterUid());
        }
        if (other.getLeaderSkillGrade() != 0) {
          setLeaderSkillGrade(other.getLeaderSkillGrade());
        }
        if (other.getPastedUserMonsterId() != 0L) {
          setPastedUserMonsterId(other.getPastedUserMonsterId());
        }
        if (other.getPastedCount() != 0) {
          setPastedCount(other.getPastedCount());
        }
        if (other.getUpdateTimestamp() != 0) {
          setUpdateTimestamp(other.getUpdateTimestamp());
        }
        if (other.storageType_ != 0) {
          setStorageTypeValue(other.getStorageTypeValue());
        }
        if (other.getDefaultSkillLevel() != 0) {
          setDefaultSkillLevel(other.getDefaultSkillLevel());
        }
        if (other.getActiveSkillLevel() != 0) {
          setActiveSkillLevel(other.getActiveSkillLevel());
        }
        if (other.getCostumeUid() != 0) {
          setCostumeUid(other.getCostumeUid());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long id_ ;
      /**
       * <code>uint64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>uint64 id = 1;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private long userId_ ;
      /**
       * <code>uint64 user_id = 2;</code>
       */
      public long getUserId() {
        return userId_;
      }
      /**
       * <code>uint64 user_id = 2;</code>
       */
      public Builder setUserId(long value) {
        
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 user_id = 2;</code>
       */
      public Builder clearUserId() {
        
        userId_ = 0L;
        onChanged();
        return this;
      }

      private int monsterUid_ ;
      /**
       * <code>fixed32 monster_uid = 3;</code>
       */
      public int getMonsterUid() {
        return monsterUid_;
      }
      /**
       * <code>fixed32 monster_uid = 3;</code>
       */
      public Builder setMonsterUid(int value) {
        
        monsterUid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed32 monster_uid = 3;</code>
       */
      public Builder clearMonsterUid() {
        
        monsterUid_ = 0;
        onChanged();
        return this;
      }

      private int lev_ ;
      /**
       * <code>uint32 lev = 4;</code>
       */
      public int getLev() {
        return lev_;
      }
      /**
       * <code>uint32 lev = 4;</code>
       */
      public Builder setLev(int value) {
        
        lev_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 lev = 4;</code>
       */
      public Builder clearLev() {
        
        lev_ = 0;
        onChanged();
        return this;
      }

      private float attack_ ;
      /**
       * <code>float attack = 5;</code>
       */
      public float getAttack() {
        return attack_;
      }
      /**
       * <code>float attack = 5;</code>
       */
      public Builder setAttack(float value) {
        
        attack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float attack = 5;</code>
       */
      public Builder clearAttack() {
        
        attack_ = 0F;
        onChanged();
        return this;
      }

      private float defence_ ;
      /**
       * <code>float defence = 6;</code>
       */
      public float getDefence() {
        return defence_;
      }
      /**
       * <code>float defence = 6;</code>
       */
      public Builder setDefence(float value) {
        
        defence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float defence = 6;</code>
       */
      public Builder clearDefence() {
        
        defence_ = 0F;
        onChanged();
        return this;
      }

      private float heal_ ;
      /**
       * <code>float heal = 7;</code>
       */
      public float getHeal() {
        return heal_;
      }
      /**
       * <code>float heal = 7;</code>
       */
      public Builder setHeal(float value) {
        
        heal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float heal = 7;</code>
       */
      public Builder clearHeal() {
        
        heal_ = 0F;
        onChanged();
        return this;
      }

      private double hp_ ;
      /**
       * <code>double hp = 8;</code>
       */
      public double getHp() {
        return hp_;
      }
      /**
       * <code>double hp = 8;</code>
       */
      public Builder setHp(double value) {
        
        hp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double hp = 8;</code>
       */
      public Builder clearHp() {
        
        hp_ = 0D;
        onChanged();
        return this;
      }

      private int statType_ = 0;
      /**
       * <code>.msggamedata.MonsterStatType stat_type = 9;</code>
       */
      public int getStatTypeValue() {
        return statType_;
      }
      /**
       * <code>.msggamedata.MonsterStatType stat_type = 9;</code>
       */
      public Builder setStatTypeValue(int value) {
        statType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.msggamedata.MonsterStatType stat_type = 9;</code>
       */
      public com.felania.msldb.MonsterStatTypeOuterClass.MonsterStatType getStatType() {
        com.felania.msldb.MonsterStatTypeOuterClass.MonsterStatType result = com.felania.msldb.MonsterStatTypeOuterClass.MonsterStatType.valueOf(statType_);
        return result == null ? com.felania.msldb.MonsterStatTypeOuterClass.MonsterStatType.UNRECOGNIZED : result;
      }
      /**
       * <code>.msggamedata.MonsterStatType stat_type = 9;</code>
       */
      public Builder setStatType(com.felania.msldb.MonsterStatTypeOuterClass.MonsterStatType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        statType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.msggamedata.MonsterStatType stat_type = 9;</code>
       */
      public Builder clearStatType() {
        
        statType_ = 0;
        onChanged();
        return this;
      }

      private int statWeightType_ = 0;
      /**
       * <code>.msggamedata.MonsterStatWeightType stat_weight_type = 10;</code>
       */
      public int getStatWeightTypeValue() {
        return statWeightType_;
      }
      /**
       * <code>.msggamedata.MonsterStatWeightType stat_weight_type = 10;</code>
       */
      public Builder setStatWeightTypeValue(int value) {
        statWeightType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.msggamedata.MonsterStatWeightType stat_weight_type = 10;</code>
       */
      public com.felania.msldb.MonsterStatWeightTypeOuterClass.MonsterStatWeightType getStatWeightType() {
        com.felania.msldb.MonsterStatWeightTypeOuterClass.MonsterStatWeightType result = com.felania.msldb.MonsterStatWeightTypeOuterClass.MonsterStatWeightType.valueOf(statWeightType_);
        return result == null ? com.felania.msldb.MonsterStatWeightTypeOuterClass.MonsterStatWeightType.UNRECOGNIZED : result;
      }
      /**
       * <code>.msggamedata.MonsterStatWeightType stat_weight_type = 10;</code>
       */
      public Builder setStatWeightType(com.felania.msldb.MonsterStatWeightTypeOuterClass.MonsterStatWeightType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        statWeightType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.msggamedata.MonsterStatWeightType stat_weight_type = 10;</code>
       */
      public Builder clearStatWeightType() {
        
        statWeightType_ = 0;
        onChanged();
        return this;
      }

      private int exp_ ;
      /**
       * <code>uint32 exp = 12;</code>
       */
      public int getExp() {
        return exp_;
      }
      /**
       * <code>uint32 exp = 12;</code>
       */
      public Builder setExp(int value) {
        
        exp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 exp = 12;</code>
       */
      public Builder clearExp() {
        
        exp_ = 0;
        onChanged();
        return this;
      }

      private int runeSlotShape1_ ;
      /**
       * <code>uint32 rune_slot_shape1 = 13;</code>
       */
      public int getRuneSlotShape1() {
        return runeSlotShape1_;
      }
      /**
       * <code>uint32 rune_slot_shape1 = 13;</code>
       */
      public Builder setRuneSlotShape1(int value) {
        
        runeSlotShape1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 rune_slot_shape1 = 13;</code>
       */
      public Builder clearRuneSlotShape1() {
        
        runeSlotShape1_ = 0;
        onChanged();
        return this;
      }

      private int runeSlotShape2_ ;
      /**
       * <code>uint32 rune_slot_shape2 = 14;</code>
       */
      public int getRuneSlotShape2() {
        return runeSlotShape2_;
      }
      /**
       * <code>uint32 rune_slot_shape2 = 14;</code>
       */
      public Builder setRuneSlotShape2(int value) {
        
        runeSlotShape2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 rune_slot_shape2 = 14;</code>
       */
      public Builder clearRuneSlotShape2() {
        
        runeSlotShape2_ = 0;
        onChanged();
        return this;
      }

      private int runeSlotShape3_ ;
      /**
       * <code>uint32 rune_slot_shape3 = 15;</code>
       */
      public int getRuneSlotShape3() {
        return runeSlotShape3_;
      }
      /**
       * <code>uint32 rune_slot_shape3 = 15;</code>
       */
      public Builder setRuneSlotShape3(int value) {
        
        runeSlotShape3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 rune_slot_shape3 = 15;</code>
       */
      public Builder clearRuneSlotShape3() {
        
        runeSlotShape3_ = 0;
        onChanged();
        return this;
      }

      private long runeSlotId1_ ;
      /**
       * <code>uint64 rune_slot_id1 = 16;</code>
       */
      public long getRuneSlotId1() {
        return runeSlotId1_;
      }
      /**
       * <code>uint64 rune_slot_id1 = 16;</code>
       */
      public Builder setRuneSlotId1(long value) {
        
        runeSlotId1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 rune_slot_id1 = 16;</code>
       */
      public Builder clearRuneSlotId1() {
        
        runeSlotId1_ = 0L;
        onChanged();
        return this;
      }

      private long runeSlotId2_ ;
      /**
       * <code>uint64 rune_slot_id2 = 17;</code>
       */
      public long getRuneSlotId2() {
        return runeSlotId2_;
      }
      /**
       * <code>uint64 rune_slot_id2 = 17;</code>
       */
      public Builder setRuneSlotId2(long value) {
        
        runeSlotId2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 rune_slot_id2 = 17;</code>
       */
      public Builder clearRuneSlotId2() {
        
        runeSlotId2_ = 0L;
        onChanged();
        return this;
      }

      private long runeSlotId3_ ;
      /**
       * <code>uint64 rune_slot_id3 = 18;</code>
       */
      public long getRuneSlotId3() {
        return runeSlotId3_;
      }
      /**
       * <code>uint64 rune_slot_id3 = 18;</code>
       */
      public Builder setRuneSlotId3(long value) {
        
        runeSlotId3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 rune_slot_id3 = 18;</code>
       */
      public Builder clearRuneSlotId3() {
        
        runeSlotId3_ = 0L;
        onChanged();
        return this;
      }

      private int grade_ = 0;
      /**
       * <code>.msggamedata.MonsterGrade grade = 19;</code>
       */
      public int getGradeValue() {
        return grade_;
      }
      /**
       * <code>.msggamedata.MonsterGrade grade = 19;</code>
       */
      public Builder setGradeValue(int value) {
        grade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.msggamedata.MonsterGrade grade = 19;</code>
       */
      public com.felania.msldb.MonsterGradeOuterClass.MonsterGrade getGrade() {
        com.felania.msldb.MonsterGradeOuterClass.MonsterGrade result = com.felania.msldb.MonsterGradeOuterClass.MonsterGrade.valueOf(grade_);
        return result == null ? com.felania.msldb.MonsterGradeOuterClass.MonsterGrade.UNRECOGNIZED : result;
      }
      /**
       * <code>.msggamedata.MonsterGrade grade = 19;</code>
       */
      public Builder setGrade(com.felania.msldb.MonsterGradeOuterClass.MonsterGrade value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        grade_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.msggamedata.MonsterGrade grade = 19;</code>
       */
      public Builder clearGrade() {
        
        grade_ = 0;
        onChanged();
        return this;
      }

      private boolean locked_ ;
      /**
       * <code>bool locked = 21;</code>
       */
      public boolean getLocked() {
        return locked_;
      }
      /**
       * <code>bool locked = 21;</code>
       */
      public Builder setLocked(boolean value) {
        
        locked_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool locked = 21;</code>
       */
      public Builder clearLocked() {
        
        locked_ = false;
        onChanged();
        return this;
      }

      private long createDate_ ;
      /**
       * <code>uint64 create_date = 22;</code>
       */
      public long getCreateDate() {
        return createDate_;
      }
      /**
       * <code>uint64 create_date = 22;</code>
       */
      public Builder setCreateDate(long value) {
        
        createDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 create_date = 22;</code>
       */
      public Builder clearCreateDate() {
        
        createDate_ = 0L;
        onChanged();
        return this;
      }

      private long lastBattleDate_ ;
      /**
       * <code>uint64 last_battle_date = 23;</code>
       */
      public long getLastBattleDate() {
        return lastBattleDate_;
      }
      /**
       * <code>uint64 last_battle_date = 23;</code>
       */
      public Builder setLastBattleDate(long value) {
        
        lastBattleDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 last_battle_date = 23;</code>
       */
      public Builder clearLastBattleDate() {
        
        lastBattleDate_ = 0L;
        onChanged();
        return this;
      }

      private boolean isFriend_ ;
      /**
       * <code>bool is_friend = 24;</code>
       */
      public boolean getIsFriend() {
        return isFriend_;
      }
      /**
       * <code>bool is_friend = 24;</code>
       */
      public Builder setIsFriend(boolean value) {
        
        isFriend_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_friend = 24;</code>
       */
      public Builder clearIsFriend() {
        
        isFriend_ = false;
        onChanged();
        return this;
      }

      private boolean isSupport_ ;
      /**
       * <code>bool is_support = 25;</code>
       */
      public boolean getIsSupport() {
        return isSupport_;
      }
      /**
       * <code>bool is_support = 25;</code>
       */
      public Builder setIsSupport(boolean value) {
        
        isSupport_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_support = 25;</code>
       */
      public Builder clearIsSupport() {
        
        isSupport_ = false;
        onChanged();
        return this;
      }

      private int supportMonsterUid_ ;
      /**
       * <code>fixed32 support_monster_uid = 26;</code>
       */
      public int getSupportMonsterUid() {
        return supportMonsterUid_;
      }
      /**
       * <code>fixed32 support_monster_uid = 26;</code>
       */
      public Builder setSupportMonsterUid(int value) {
        
        supportMonsterUid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed32 support_monster_uid = 26;</code>
       */
      public Builder clearSupportMonsterUid() {
        
        supportMonsterUid_ = 0;
        onChanged();
        return this;
      }

      private int leaderSkillGrade_ ;
      /**
       * <code>uint32 leader_skill_grade = 27;</code>
       */
      public int getLeaderSkillGrade() {
        return leaderSkillGrade_;
      }
      /**
       * <code>uint32 leader_skill_grade = 27;</code>
       */
      public Builder setLeaderSkillGrade(int value) {
        
        leaderSkillGrade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 leader_skill_grade = 27;</code>
       */
      public Builder clearLeaderSkillGrade() {
        
        leaderSkillGrade_ = 0;
        onChanged();
        return this;
      }

      private long pastedUserMonsterId_ ;
      /**
       * <code>uint64 pasted_user_monster_id = 28;</code>
       */
      public long getPastedUserMonsterId() {
        return pastedUserMonsterId_;
      }
      /**
       * <code>uint64 pasted_user_monster_id = 28;</code>
       */
      public Builder setPastedUserMonsterId(long value) {
        
        pastedUserMonsterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 pasted_user_monster_id = 28;</code>
       */
      public Builder clearPastedUserMonsterId() {
        
        pastedUserMonsterId_ = 0L;
        onChanged();
        return this;
      }

      private int pastedCount_ ;
      /**
       * <code>uint32 pasted_count = 29;</code>
       */
      public int getPastedCount() {
        return pastedCount_;
      }
      /**
       * <code>uint32 pasted_count = 29;</code>
       */
      public Builder setPastedCount(int value) {
        
        pastedCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 pasted_count = 29;</code>
       */
      public Builder clearPastedCount() {
        
        pastedCount_ = 0;
        onChanged();
        return this;
      }

      private int updateTimestamp_ ;
      /**
       * <code>uint32 update_timestamp = 30;</code>
       */
      public int getUpdateTimestamp() {
        return updateTimestamp_;
      }
      /**
       * <code>uint32 update_timestamp = 30;</code>
       */
      public Builder setUpdateTimestamp(int value) {
        
        updateTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 update_timestamp = 30;</code>
       */
      public Builder clearUpdateTimestamp() {
        
        updateTimestamp_ = 0;
        onChanged();
        return this;
      }

      private int storageType_ = 0;
      /**
       * <code>.msggamedata.MonsterStorageType storage_type = 31;</code>
       */
      public int getStorageTypeValue() {
        return storageType_;
      }
      /**
       * <code>.msggamedata.MonsterStorageType storage_type = 31;</code>
       */
      public Builder setStorageTypeValue(int value) {
        storageType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.msggamedata.MonsterStorageType storage_type = 31;</code>
       */
      public com.felania.msldb.MonsterStorageTypeOuterClass.MonsterStorageType getStorageType() {
        com.felania.msldb.MonsterStorageTypeOuterClass.MonsterStorageType result = com.felania.msldb.MonsterStorageTypeOuterClass.MonsterStorageType.valueOf(storageType_);
        return result == null ? com.felania.msldb.MonsterStorageTypeOuterClass.MonsterStorageType.UNRECOGNIZED : result;
      }
      /**
       * <code>.msggamedata.MonsterStorageType storage_type = 31;</code>
       */
      public Builder setStorageType(com.felania.msldb.MonsterStorageTypeOuterClass.MonsterStorageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        storageType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.msggamedata.MonsterStorageType storage_type = 31;</code>
       */
      public Builder clearStorageType() {
        
        storageType_ = 0;
        onChanged();
        return this;
      }

      private int defaultSkillLevel_ ;
      /**
       * <code>uint32 default_skill_level = 32;</code>
       */
      public int getDefaultSkillLevel() {
        return defaultSkillLevel_;
      }
      /**
       * <code>uint32 default_skill_level = 32;</code>
       */
      public Builder setDefaultSkillLevel(int value) {
        
        defaultSkillLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 default_skill_level = 32;</code>
       */
      public Builder clearDefaultSkillLevel() {
        
        defaultSkillLevel_ = 0;
        onChanged();
        return this;
      }

      private int activeSkillLevel_ ;
      /**
       * <code>uint32 active_skill_level = 33;</code>
       */
      public int getActiveSkillLevel() {
        return activeSkillLevel_;
      }
      /**
       * <code>uint32 active_skill_level = 33;</code>
       */
      public Builder setActiveSkillLevel(int value) {
        
        activeSkillLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 active_skill_level = 33;</code>
       */
      public Builder clearActiveSkillLevel() {
        
        activeSkillLevel_ = 0;
        onChanged();
        return this;
      }

      private int costumeUid_ ;
      /**
       * <code>fixed32 costume_uid = 34;</code>
       */
      public int getCostumeUid() {
        return costumeUid_;
      }
      /**
       * <code>fixed32 costume_uid = 34;</code>
       */
      public Builder setCostumeUid(int value) {
        
        costumeUid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed32 costume_uid = 34;</code>
       */
      public Builder clearCostumeUid() {
        
        costumeUid_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:msggamedata.MsgUserMonster)
    }

    // @@protoc_insertion_point(class_scope:msggamedata.MsgUserMonster)
    private static final com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster();
    }

    public static com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgUserMonster>
        PARSER = new com.google.protobuf.AbstractParser<MsgUserMonster>() {
      public MsgUserMonster parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgUserMonster(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgUserMonster> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MsgUserMonster> getParserForType() {
      return PARSER;
    }

    public com.felania.msldb.MsgUserMonsterOuterClass.MsgUserMonster getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_msggamedata_MsgUserMonster_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_msggamedata_MsgUserMonster_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024MsgUserMonster.proto\022\013msggamedata\032\025Mon" +
      "sterStatType.proto\032\033MonsterStatWeightTyp" +
      "e.proto\032\022MonsterGrade.proto\032\030MonsterStor" +
      "ageType.proto\"\267\006\n\016MsgUserMonster\022\n\n\002id\030\001" +
      " \001(\004\022\017\n\007user_id\030\002 \001(\004\022\023\n\013monster_uid\030\003 \001" +
      "(\007\022\013\n\003lev\030\004 \001(\r\022\016\n\006attack\030\005 \001(\002\022\017\n\007defen" +
      "ce\030\006 \001(\002\022\014\n\004heal\030\007 \001(\002\022\n\n\002hp\030\010 \001(\001\022/\n\tst" +
      "at_type\030\t \001(\0162\034.msggamedata.MonsterStatT" +
      "ype\022<\n\020stat_weight_type\030\n \001(\0162\".msggamed" +
      "ata.MonsterStatWeightType\022\013\n\003exp\030\014 \001(\r\022\030" +
      "\n\020rune_slot_shape1\030\r \001(\r\022\030\n\020rune_slot_sh" +
      "ape2\030\016 \001(\r\022\030\n\020rune_slot_shape3\030\017 \001(\r\022\025\n\r" +
      "rune_slot_id1\030\020 \001(\004\022\025\n\rrune_slot_id2\030\021 \001" +
      "(\004\022\025\n\rrune_slot_id3\030\022 \001(\004\022(\n\005grade\030\023 \001(\016" +
      "2\031.msggamedata.MonsterGrade\022\016\n\006locked\030\025 " +
      "\001(\010\022\023\n\013create_date\030\026 \001(\004\022\030\n\020last_battle_" +
      "date\030\027 \001(\004\022\021\n\tis_friend\030\030 \001(\010\022\022\n\nis_supp" +
      "ort\030\031 \001(\010\022\033\n\023support_monster_uid\030\032 \001(\007\022\032" +
      "\n\022leader_skill_grade\030\033 \001(\r\022\036\n\026pasted_use" +
      "r_monster_id\030\034 \001(\004\022\024\n\014pasted_count\030\035 \001(\r" +
      "\022\030\n\020update_timestamp\030\036 \001(\r\0225\n\014storage_ty" +
      "pe\030\037 \001(\0162\037.msggamedata.MonsterStorageTyp" +
      "e\022\033\n\023default_skill_level\030  \001(\r\022\032\n\022active" +
      "_skill_level\030! \001(\r\022\023\n\013costume_uid\030\" \001(\007B" +
      "\023\n\021com.felania.msldbb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.felania.msldb.MonsterStatTypeOuterClass.getDescriptor(),
          com.felania.msldb.MonsterStatWeightTypeOuterClass.getDescriptor(),
          com.felania.msldb.MonsterGradeOuterClass.getDescriptor(),
          com.felania.msldb.MonsterStorageTypeOuterClass.getDescriptor(),
        }, assigner);
    internal_static_msggamedata_MsgUserMonster_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_msggamedata_MsgUserMonster_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_msggamedata_MsgUserMonster_descriptor,
        new java.lang.String[] { "Id", "UserId", "MonsterUid", "Lev", "Attack", "Defence", "Heal", "Hp", "StatType", "StatWeightType", "Exp", "RuneSlotShape1", "RuneSlotShape2", "RuneSlotShape3", "RuneSlotId1", "RuneSlotId2", "RuneSlotId3", "Grade", "Locked", "CreateDate", "LastBattleDate", "IsFriend", "IsSupport", "SupportMonsterUid", "LeaderSkillGrade", "PastedUserMonsterId", "PastedCount", "UpdateTimestamp", "StorageType", "DefaultSkillLevel", "ActiveSkillLevel", "CostumeUid", });
    com.felania.msldb.MonsterStatTypeOuterClass.getDescriptor();
    com.felania.msldb.MonsterStatWeightTypeOuterClass.getDescriptor();
    com.felania.msldb.MonsterGradeOuterClass.getDescriptor();
    com.felania.msldb.MonsterStorageTypeOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
