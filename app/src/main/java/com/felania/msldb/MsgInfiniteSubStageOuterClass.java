// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgInfiniteSubStage.proto

package com.felania.msldb;

public final class MsgInfiniteSubStageOuterClass {
  private MsgInfiniteSubStageOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MsgInfiniteSubStageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:msggamedata.MsgInfiniteSubStage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 uid = 1;</code>
     */
    int getUid();

    /**
     * <code>uint32 stage_uid = 2;</code>
     */
    int getStageUid();

    /**
     * <code>fixed32 floor = 3;</code>
     */
    int getFloor();

    /**
     * <code>bool boss_stage = 4;</code>
     */
    boolean getBossStage();

    /**
     * <code>string boss_start_scene = 5;</code>
     */
    java.lang.String getBossStartScene();
    /**
     * <code>string boss_start_scene = 5;</code>
     */
    com.google.protobuf.ByteString
        getBossStartSceneBytes();

    /**
     * <code>repeated uint32 exps = 6;</code>
     */
    java.util.List<java.lang.Integer> getExpsList();
    /**
     * <code>repeated uint32 exps = 6;</code>
     */
    int getExpsCount();
    /**
     * <code>repeated uint32 exps = 6;</code>
     */
    int getExps(int index);

    /**
     * <code>repeated uint32 monster_exps = 7;</code>
     */
    java.util.List<java.lang.Integer> getMonsterExpsList();
    /**
     * <code>repeated uint32 monster_exps = 7;</code>
     */
    int getMonsterExpsCount();
    /**
     * <code>repeated uint32 monster_exps = 7;</code>
     */
    int getMonsterExps(int index);

    /**
     * <code>repeated uint32 required_energies = 9;</code>
     */
    java.util.List<java.lang.Integer> getRequiredEnergiesList();
    /**
     * <code>repeated uint32 required_energies = 9;</code>
     */
    int getRequiredEnergiesCount();
    /**
     * <code>repeated uint32 required_energies = 9;</code>
     */
    int getRequiredEnergies(int index);

    /**
     * <code>repeated fixed32 normal_display_mons = 10;</code>
     */
    java.util.List<java.lang.Integer> getNormalDisplayMonsList();
    /**
     * <code>repeated fixed32 normal_display_mons = 10;</code>
     */
    int getNormalDisplayMonsCount();
    /**
     * <code>repeated fixed32 normal_display_mons = 10;</code>
     */
    int getNormalDisplayMons(int index);

    /**
     * <code>repeated fixed32 hard_display_mons = 11;</code>
     */
    java.util.List<java.lang.Integer> getHardDisplayMonsList();
    /**
     * <code>repeated fixed32 hard_display_mons = 11;</code>
     */
    int getHardDisplayMonsCount();
    /**
     * <code>repeated fixed32 hard_display_mons = 11;</code>
     */
    int getHardDisplayMons(int index);

    /**
     * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
     */
    java.util.List<com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle> 
        getNormalBattlesList();
    /**
     * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
     */
    com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle getNormalBattles(int index);
    /**
     * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
     */
    int getNormalBattlesCount();
    /**
     * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
     */
    java.util.List<? extends com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder> 
        getNormalBattlesOrBuilderList();
    /**
     * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
     */
    com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder getNormalBattlesOrBuilder(
        int index);

    /**
     * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
     */
    java.util.List<com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle> 
        getHardBattlesList();
    /**
     * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
     */
    com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle getHardBattles(int index);
    /**
     * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
     */
    int getHardBattlesCount();
    /**
     * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
     */
    java.util.List<? extends com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder> 
        getHardBattlesOrBuilderList();
    /**
     * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
     */
    com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder getHardBattlesOrBuilder(
        int index);

    /**
     * <code>repeated uint32 tip_uids = 14;</code>
     */
    java.util.List<java.lang.Integer> getTipUidsList();
    /**
     * <code>repeated uint32 tip_uids = 14;</code>
     */
    int getTipUidsCount();
    /**
     * <code>repeated uint32 tip_uids = 14;</code>
     */
    int getTipUids(int index);

    /**
     * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
     */
    java.util.List<com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb> 
        getRewardProbsList();
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
     */
    com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb getRewardProbs(int index);
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
     */
    int getRewardProbsCount();
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
     */
    java.util.List<? extends com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProbOrBuilder> 
        getRewardProbsOrBuilderList();
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
     */
    com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProbOrBuilder getRewardProbsOrBuilder(
        int index);

    /**
     * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
     */
    java.util.List<com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty> 
        getRewardMustsList();
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
     */
    com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty getRewardMusts(int index);
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
     */
    int getRewardMustsCount();
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
     */
    java.util.List<? extends com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficultyOrBuilder> 
        getRewardMustsOrBuilderList();
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
     */
    com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficultyOrBuilder getRewardMustsOrBuilder(
        int index);

    /**
     * <code>uint32 reward_general = 17;</code>
     */
    int getRewardGeneral();
  }
  /**
   * Protobuf type {@code msggamedata.MsgInfiniteSubStage}
   */
  public  static final class MsgInfiniteSubStage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:msggamedata.MsgInfiniteSubStage)
      MsgInfiniteSubStageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgInfiniteSubStage.newBuilder() to construct.
    private MsgInfiniteSubStage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgInfiniteSubStage() {
      uid_ = 0;
      stageUid_ = 0;
      floor_ = 0;
      bossStage_ = false;
      bossStartScene_ = "";
      exps_ = java.util.Collections.emptyList();
      monsterExps_ = java.util.Collections.emptyList();
      requiredEnergies_ = java.util.Collections.emptyList();
      normalDisplayMons_ = java.util.Collections.emptyList();
      hardDisplayMons_ = java.util.Collections.emptyList();
      normalBattles_ = java.util.Collections.emptyList();
      hardBattles_ = java.util.Collections.emptyList();
      tipUids_ = java.util.Collections.emptyList();
      rewardProbs_ = java.util.Collections.emptyList();
      rewardMusts_ = java.util.Collections.emptyList();
      rewardGeneral_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgInfiniteSubStage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              uid_ = input.readUInt32();
              break;
            }
            case 16: {

              stageUid_ = input.readUInt32();
              break;
            }
            case 29: {

              floor_ = input.readFixed32();
              break;
            }
            case 32: {

              bossStage_ = input.readBool();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              bossStartScene_ = s;
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                exps_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              exps_.add(input.readUInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                exps_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                exps_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                monsterExps_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              monsterExps_.add(input.readUInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                monsterExps_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                monsterExps_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                requiredEnergies_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              requiredEnergies_.add(input.readUInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                requiredEnergies_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                requiredEnergies_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 85: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                normalDisplayMons_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              normalDisplayMons_.add(input.readFixed32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                normalDisplayMons_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                normalDisplayMons_.add(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 93: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                hardDisplayMons_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              hardDisplayMons_.add(input.readFixed32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                hardDisplayMons_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                hardDisplayMons_.add(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                normalBattles_ = new java.util.ArrayList<com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle>();
                mutable_bitField0_ |= 0x00000400;
              }
              normalBattles_.add(
                  input.readMessage(com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.parser(), extensionRegistry));
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                hardBattles_ = new java.util.ArrayList<com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle>();
                mutable_bitField0_ |= 0x00000800;
              }
              hardBattles_.add(
                  input.readMessage(com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.parser(), extensionRegistry));
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                tipUids_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              tipUids_.add(input.readUInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                tipUids_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                tipUids_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                rewardProbs_ = new java.util.ArrayList<com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb>();
                mutable_bitField0_ |= 0x00002000;
              }
              rewardProbs_.add(
                  input.readMessage(com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb.parser(), extensionRegistry));
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                rewardMusts_ = new java.util.ArrayList<com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty>();
                mutable_bitField0_ |= 0x00004000;
              }
              rewardMusts_.add(
                  input.readMessage(com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty.parser(), extensionRegistry));
              break;
            }
            case 136: {

              rewardGeneral_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          exps_ = java.util.Collections.unmodifiableList(exps_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          monsterExps_ = java.util.Collections.unmodifiableList(monsterExps_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          requiredEnergies_ = java.util.Collections.unmodifiableList(requiredEnergies_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          normalDisplayMons_ = java.util.Collections.unmodifiableList(normalDisplayMons_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          hardDisplayMons_ = java.util.Collections.unmodifiableList(hardDisplayMons_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          normalBattles_ = java.util.Collections.unmodifiableList(normalBattles_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          hardBattles_ = java.util.Collections.unmodifiableList(hardBattles_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          tipUids_ = java.util.Collections.unmodifiableList(tipUids_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          rewardProbs_ = java.util.Collections.unmodifiableList(rewardProbs_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          rewardMusts_ = java.util.Collections.unmodifiableList(rewardMusts_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.felania.msldb.MsgInfiniteSubStageOuterClass.internal_static_msggamedata_MsgInfiniteSubStage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.felania.msldb.MsgInfiniteSubStageOuterClass.internal_static_msggamedata_MsgInfiniteSubStage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage.class, com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage.Builder.class);
    }

    private int bitField0_;
    public static final int UID_FIELD_NUMBER = 1;
    private int uid_;
    /**
     * <code>uint32 uid = 1;</code>
     */
    public int getUid() {
      return uid_;
    }

    public static final int STAGE_UID_FIELD_NUMBER = 2;
    private int stageUid_;
    /**
     * <code>uint32 stage_uid = 2;</code>
     */
    public int getStageUid() {
      return stageUid_;
    }

    public static final int FLOOR_FIELD_NUMBER = 3;
    private int floor_;
    /**
     * <code>fixed32 floor = 3;</code>
     */
    public int getFloor() {
      return floor_;
    }

    public static final int BOSS_STAGE_FIELD_NUMBER = 4;
    private boolean bossStage_;
    /**
     * <code>bool boss_stage = 4;</code>
     */
    public boolean getBossStage() {
      return bossStage_;
    }

    public static final int BOSS_START_SCENE_FIELD_NUMBER = 5;
    private volatile java.lang.Object bossStartScene_;
    /**
     * <code>string boss_start_scene = 5;</code>
     */
    public java.lang.String getBossStartScene() {
      java.lang.Object ref = bossStartScene_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        bossStartScene_ = s;
        return s;
      }
    }
    /**
     * <code>string boss_start_scene = 5;</code>
     */
    public com.google.protobuf.ByteString
        getBossStartSceneBytes() {
      java.lang.Object ref = bossStartScene_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bossStartScene_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXPS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> exps_;
    /**
     * <code>repeated uint32 exps = 6;</code>
     */
    public java.util.List<java.lang.Integer>
        getExpsList() {
      return exps_;
    }
    /**
     * <code>repeated uint32 exps = 6;</code>
     */
    public int getExpsCount() {
      return exps_.size();
    }
    /**
     * <code>repeated uint32 exps = 6;</code>
     */
    public int getExps(int index) {
      return exps_.get(index);
    }
    private int expsMemoizedSerializedSize = -1;

    public static final int MONSTER_EXPS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> monsterExps_;
    /**
     * <code>repeated uint32 monster_exps = 7;</code>
     */
    public java.util.List<java.lang.Integer>
        getMonsterExpsList() {
      return monsterExps_;
    }
    /**
     * <code>repeated uint32 monster_exps = 7;</code>
     */
    public int getMonsterExpsCount() {
      return monsterExps_.size();
    }
    /**
     * <code>repeated uint32 monster_exps = 7;</code>
     */
    public int getMonsterExps(int index) {
      return monsterExps_.get(index);
    }
    private int monsterExpsMemoizedSerializedSize = -1;

    public static final int REQUIRED_ENERGIES_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> requiredEnergies_;
    /**
     * <code>repeated uint32 required_energies = 9;</code>
     */
    public java.util.List<java.lang.Integer>
        getRequiredEnergiesList() {
      return requiredEnergies_;
    }
    /**
     * <code>repeated uint32 required_energies = 9;</code>
     */
    public int getRequiredEnergiesCount() {
      return requiredEnergies_.size();
    }
    /**
     * <code>repeated uint32 required_energies = 9;</code>
     */
    public int getRequiredEnergies(int index) {
      return requiredEnergies_.get(index);
    }
    private int requiredEnergiesMemoizedSerializedSize = -1;

    public static final int NORMAL_DISPLAY_MONS_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> normalDisplayMons_;
    /**
     * <code>repeated fixed32 normal_display_mons = 10;</code>
     */
    public java.util.List<java.lang.Integer>
        getNormalDisplayMonsList() {
      return normalDisplayMons_;
    }
    /**
     * <code>repeated fixed32 normal_display_mons = 10;</code>
     */
    public int getNormalDisplayMonsCount() {
      return normalDisplayMons_.size();
    }
    /**
     * <code>repeated fixed32 normal_display_mons = 10;</code>
     */
    public int getNormalDisplayMons(int index) {
      return normalDisplayMons_.get(index);
    }
    private int normalDisplayMonsMemoizedSerializedSize = -1;

    public static final int HARD_DISPLAY_MONS_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> hardDisplayMons_;
    /**
     * <code>repeated fixed32 hard_display_mons = 11;</code>
     */
    public java.util.List<java.lang.Integer>
        getHardDisplayMonsList() {
      return hardDisplayMons_;
    }
    /**
     * <code>repeated fixed32 hard_display_mons = 11;</code>
     */
    public int getHardDisplayMonsCount() {
      return hardDisplayMons_.size();
    }
    /**
     * <code>repeated fixed32 hard_display_mons = 11;</code>
     */
    public int getHardDisplayMons(int index) {
      return hardDisplayMons_.get(index);
    }
    private int hardDisplayMonsMemoizedSerializedSize = -1;

    public static final int NORMAL_BATTLES_FIELD_NUMBER = 12;
    private java.util.List<com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle> normalBattles_;
    /**
     * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
     */
    public java.util.List<com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle> getNormalBattlesList() {
      return normalBattles_;
    }
    /**
     * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
     */
    public java.util.List<? extends com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder> 
        getNormalBattlesOrBuilderList() {
      return normalBattles_;
    }
    /**
     * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
     */
    public int getNormalBattlesCount() {
      return normalBattles_.size();
    }
    /**
     * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
     */
    public com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle getNormalBattles(int index) {
      return normalBattles_.get(index);
    }
    /**
     * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
     */
    public com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder getNormalBattlesOrBuilder(
        int index) {
      return normalBattles_.get(index);
    }

    public static final int HARD_BATTLES_FIELD_NUMBER = 13;
    private java.util.List<com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle> hardBattles_;
    /**
     * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
     */
    public java.util.List<com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle> getHardBattlesList() {
      return hardBattles_;
    }
    /**
     * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
     */
    public java.util.List<? extends com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder> 
        getHardBattlesOrBuilderList() {
      return hardBattles_;
    }
    /**
     * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
     */
    public int getHardBattlesCount() {
      return hardBattles_.size();
    }
    /**
     * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
     */
    public com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle getHardBattles(int index) {
      return hardBattles_.get(index);
    }
    /**
     * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
     */
    public com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder getHardBattlesOrBuilder(
        int index) {
      return hardBattles_.get(index);
    }

    public static final int TIP_UIDS_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> tipUids_;
    /**
     * <code>repeated uint32 tip_uids = 14;</code>
     */
    public java.util.List<java.lang.Integer>
        getTipUidsList() {
      return tipUids_;
    }
    /**
     * <code>repeated uint32 tip_uids = 14;</code>
     */
    public int getTipUidsCount() {
      return tipUids_.size();
    }
    /**
     * <code>repeated uint32 tip_uids = 14;</code>
     */
    public int getTipUids(int index) {
      return tipUids_.get(index);
    }
    private int tipUidsMemoizedSerializedSize = -1;

    public static final int REWARD_PROBS_FIELD_NUMBER = 15;
    private java.util.List<com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb> rewardProbs_;
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
     */
    public java.util.List<com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb> getRewardProbsList() {
      return rewardProbs_;
    }
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
     */
    public java.util.List<? extends com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProbOrBuilder> 
        getRewardProbsOrBuilderList() {
      return rewardProbs_;
    }
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
     */
    public int getRewardProbsCount() {
      return rewardProbs_.size();
    }
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
     */
    public com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb getRewardProbs(int index) {
      return rewardProbs_.get(index);
    }
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
     */
    public com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProbOrBuilder getRewardProbsOrBuilder(
        int index) {
      return rewardProbs_.get(index);
    }

    public static final int REWARD_MUSTS_FIELD_NUMBER = 16;
    private java.util.List<com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty> rewardMusts_;
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
     */
    public java.util.List<com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty> getRewardMustsList() {
      return rewardMusts_;
    }
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
     */
    public java.util.List<? extends com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficultyOrBuilder> 
        getRewardMustsOrBuilderList() {
      return rewardMusts_;
    }
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
     */
    public int getRewardMustsCount() {
      return rewardMusts_.size();
    }
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
     */
    public com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty getRewardMusts(int index) {
      return rewardMusts_.get(index);
    }
    /**
     * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
     */
    public com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficultyOrBuilder getRewardMustsOrBuilder(
        int index) {
      return rewardMusts_.get(index);
    }

    public static final int REWARD_GENERAL_FIELD_NUMBER = 17;
    private int rewardGeneral_;
    /**
     * <code>uint32 reward_general = 17;</code>
     */
    public int getRewardGeneral() {
      return rewardGeneral_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (uid_ != 0) {
        output.writeUInt32(1, uid_);
      }
      if (stageUid_ != 0) {
        output.writeUInt32(2, stageUid_);
      }
      if (floor_ != 0) {
        output.writeFixed32(3, floor_);
      }
      if (bossStage_ != false) {
        output.writeBool(4, bossStage_);
      }
      if (!getBossStartSceneBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, bossStartScene_);
      }
      if (getExpsList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(expsMemoizedSerializedSize);
      }
      for (int i = 0; i < exps_.size(); i++) {
        output.writeUInt32NoTag(exps_.get(i));
      }
      if (getMonsterExpsList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(monsterExpsMemoizedSerializedSize);
      }
      for (int i = 0; i < monsterExps_.size(); i++) {
        output.writeUInt32NoTag(monsterExps_.get(i));
      }
      if (getRequiredEnergiesList().size() > 0) {
        output.writeUInt32NoTag(74);
        output.writeUInt32NoTag(requiredEnergiesMemoizedSerializedSize);
      }
      for (int i = 0; i < requiredEnergies_.size(); i++) {
        output.writeUInt32NoTag(requiredEnergies_.get(i));
      }
      if (getNormalDisplayMonsList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(normalDisplayMonsMemoizedSerializedSize);
      }
      for (int i = 0; i < normalDisplayMons_.size(); i++) {
        output.writeFixed32NoTag(normalDisplayMons_.get(i));
      }
      if (getHardDisplayMonsList().size() > 0) {
        output.writeUInt32NoTag(90);
        output.writeUInt32NoTag(hardDisplayMonsMemoizedSerializedSize);
      }
      for (int i = 0; i < hardDisplayMons_.size(); i++) {
        output.writeFixed32NoTag(hardDisplayMons_.get(i));
      }
      for (int i = 0; i < normalBattles_.size(); i++) {
        output.writeMessage(12, normalBattles_.get(i));
      }
      for (int i = 0; i < hardBattles_.size(); i++) {
        output.writeMessage(13, hardBattles_.get(i));
      }
      if (getTipUidsList().size() > 0) {
        output.writeUInt32NoTag(114);
        output.writeUInt32NoTag(tipUidsMemoizedSerializedSize);
      }
      for (int i = 0; i < tipUids_.size(); i++) {
        output.writeUInt32NoTag(tipUids_.get(i));
      }
      for (int i = 0; i < rewardProbs_.size(); i++) {
        output.writeMessage(15, rewardProbs_.get(i));
      }
      for (int i = 0; i < rewardMusts_.size(); i++) {
        output.writeMessage(16, rewardMusts_.get(i));
      }
      if (rewardGeneral_ != 0) {
        output.writeUInt32(17, rewardGeneral_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (uid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, uid_);
      }
      if (stageUid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, stageUid_);
      }
      if (floor_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, floor_);
      }
      if (bossStage_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, bossStage_);
      }
      if (!getBossStartSceneBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, bossStartScene_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < exps_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(exps_.get(i));
        }
        size += dataSize;
        if (!getExpsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        expsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < monsterExps_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(monsterExps_.get(i));
        }
        size += dataSize;
        if (!getMonsterExpsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        monsterExpsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < requiredEnergies_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(requiredEnergies_.get(i));
        }
        size += dataSize;
        if (!getRequiredEnergiesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        requiredEnergiesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getNormalDisplayMonsList().size();
        size += dataSize;
        if (!getNormalDisplayMonsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        normalDisplayMonsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getHardDisplayMonsList().size();
        size += dataSize;
        if (!getHardDisplayMonsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        hardDisplayMonsMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < normalBattles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, normalBattles_.get(i));
      }
      for (int i = 0; i < hardBattles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, hardBattles_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tipUids_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(tipUids_.get(i));
        }
        size += dataSize;
        if (!getTipUidsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        tipUidsMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < rewardProbs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, rewardProbs_.get(i));
      }
      for (int i = 0; i < rewardMusts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, rewardMusts_.get(i));
      }
      if (rewardGeneral_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, rewardGeneral_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage)) {
        return super.equals(obj);
      }
      com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage other = (com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage) obj;

      boolean result = true;
      result = result && (getUid()
          == other.getUid());
      result = result && (getStageUid()
          == other.getStageUid());
      result = result && (getFloor()
          == other.getFloor());
      result = result && (getBossStage()
          == other.getBossStage());
      result = result && getBossStartScene()
          .equals(other.getBossStartScene());
      result = result && getExpsList()
          .equals(other.getExpsList());
      result = result && getMonsterExpsList()
          .equals(other.getMonsterExpsList());
      result = result && getRequiredEnergiesList()
          .equals(other.getRequiredEnergiesList());
      result = result && getNormalDisplayMonsList()
          .equals(other.getNormalDisplayMonsList());
      result = result && getHardDisplayMonsList()
          .equals(other.getHardDisplayMonsList());
      result = result && getNormalBattlesList()
          .equals(other.getNormalBattlesList());
      result = result && getHardBattlesList()
          .equals(other.getHardBattlesList());
      result = result && getTipUidsList()
          .equals(other.getTipUidsList());
      result = result && getRewardProbsList()
          .equals(other.getRewardProbsList());
      result = result && getRewardMustsList()
          .equals(other.getRewardMustsList());
      result = result && (getRewardGeneral()
          == other.getRewardGeneral());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + UID_FIELD_NUMBER;
      hash = (53 * hash) + getUid();
      hash = (37 * hash) + STAGE_UID_FIELD_NUMBER;
      hash = (53 * hash) + getStageUid();
      hash = (37 * hash) + FLOOR_FIELD_NUMBER;
      hash = (53 * hash) + getFloor();
      hash = (37 * hash) + BOSS_STAGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBossStage());
      hash = (37 * hash) + BOSS_START_SCENE_FIELD_NUMBER;
      hash = (53 * hash) + getBossStartScene().hashCode();
      if (getExpsCount() > 0) {
        hash = (37 * hash) + EXPS_FIELD_NUMBER;
        hash = (53 * hash) + getExpsList().hashCode();
      }
      if (getMonsterExpsCount() > 0) {
        hash = (37 * hash) + MONSTER_EXPS_FIELD_NUMBER;
        hash = (53 * hash) + getMonsterExpsList().hashCode();
      }
      if (getRequiredEnergiesCount() > 0) {
        hash = (37 * hash) + REQUIRED_ENERGIES_FIELD_NUMBER;
        hash = (53 * hash) + getRequiredEnergiesList().hashCode();
      }
      if (getNormalDisplayMonsCount() > 0) {
        hash = (37 * hash) + NORMAL_DISPLAY_MONS_FIELD_NUMBER;
        hash = (53 * hash) + getNormalDisplayMonsList().hashCode();
      }
      if (getHardDisplayMonsCount() > 0) {
        hash = (37 * hash) + HARD_DISPLAY_MONS_FIELD_NUMBER;
        hash = (53 * hash) + getHardDisplayMonsList().hashCode();
      }
      if (getNormalBattlesCount() > 0) {
        hash = (37 * hash) + NORMAL_BATTLES_FIELD_NUMBER;
        hash = (53 * hash) + getNormalBattlesList().hashCode();
      }
      if (getHardBattlesCount() > 0) {
        hash = (37 * hash) + HARD_BATTLES_FIELD_NUMBER;
        hash = (53 * hash) + getHardBattlesList().hashCode();
      }
      if (getTipUidsCount() > 0) {
        hash = (37 * hash) + TIP_UIDS_FIELD_NUMBER;
        hash = (53 * hash) + getTipUidsList().hashCode();
      }
      if (getRewardProbsCount() > 0) {
        hash = (37 * hash) + REWARD_PROBS_FIELD_NUMBER;
        hash = (53 * hash) + getRewardProbsList().hashCode();
      }
      if (getRewardMustsCount() > 0) {
        hash = (37 * hash) + REWARD_MUSTS_FIELD_NUMBER;
        hash = (53 * hash) + getRewardMustsList().hashCode();
      }
      hash = (37 * hash) + REWARD_GENERAL_FIELD_NUMBER;
      hash = (53 * hash) + getRewardGeneral();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code msggamedata.MsgInfiniteSubStage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:msggamedata.MsgInfiniteSubStage)
        com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.felania.msldb.MsgInfiniteSubStageOuterClass.internal_static_msggamedata_MsgInfiniteSubStage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.felania.msldb.MsgInfiniteSubStageOuterClass.internal_static_msggamedata_MsgInfiniteSubStage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage.class, com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage.Builder.class);
      }

      // Construct using com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNormalBattlesFieldBuilder();
          getHardBattlesFieldBuilder();
          getRewardProbsFieldBuilder();
          getRewardMustsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        uid_ = 0;

        stageUid_ = 0;

        floor_ = 0;

        bossStage_ = false;

        bossStartScene_ = "";

        exps_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        monsterExps_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        requiredEnergies_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        normalDisplayMons_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        hardDisplayMons_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        if (normalBattlesBuilder_ == null) {
          normalBattles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          normalBattlesBuilder_.clear();
        }
        if (hardBattlesBuilder_ == null) {
          hardBattles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          hardBattlesBuilder_.clear();
        }
        tipUids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        if (rewardProbsBuilder_ == null) {
          rewardProbs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          rewardProbsBuilder_.clear();
        }
        if (rewardMustsBuilder_ == null) {
          rewardMusts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          rewardMustsBuilder_.clear();
        }
        rewardGeneral_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.felania.msldb.MsgInfiniteSubStageOuterClass.internal_static_msggamedata_MsgInfiniteSubStage_descriptor;
      }

      public com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage getDefaultInstanceForType() {
        return com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage.getDefaultInstance();
      }

      public com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage build() {
        com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage buildPartial() {
        com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage result = new com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.uid_ = uid_;
        result.stageUid_ = stageUid_;
        result.floor_ = floor_;
        result.bossStage_ = bossStage_;
        result.bossStartScene_ = bossStartScene_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          exps_ = java.util.Collections.unmodifiableList(exps_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.exps_ = exps_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          monsterExps_ = java.util.Collections.unmodifiableList(monsterExps_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.monsterExps_ = monsterExps_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          requiredEnergies_ = java.util.Collections.unmodifiableList(requiredEnergies_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.requiredEnergies_ = requiredEnergies_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          normalDisplayMons_ = java.util.Collections.unmodifiableList(normalDisplayMons_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.normalDisplayMons_ = normalDisplayMons_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          hardDisplayMons_ = java.util.Collections.unmodifiableList(hardDisplayMons_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.hardDisplayMons_ = hardDisplayMons_;
        if (normalBattlesBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            normalBattles_ = java.util.Collections.unmodifiableList(normalBattles_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.normalBattles_ = normalBattles_;
        } else {
          result.normalBattles_ = normalBattlesBuilder_.build();
        }
        if (hardBattlesBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            hardBattles_ = java.util.Collections.unmodifiableList(hardBattles_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.hardBattles_ = hardBattles_;
        } else {
          result.hardBattles_ = hardBattlesBuilder_.build();
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          tipUids_ = java.util.Collections.unmodifiableList(tipUids_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.tipUids_ = tipUids_;
        if (rewardProbsBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            rewardProbs_ = java.util.Collections.unmodifiableList(rewardProbs_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.rewardProbs_ = rewardProbs_;
        } else {
          result.rewardProbs_ = rewardProbsBuilder_.build();
        }
        if (rewardMustsBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            rewardMusts_ = java.util.Collections.unmodifiableList(rewardMusts_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.rewardMusts_ = rewardMusts_;
        } else {
          result.rewardMusts_ = rewardMustsBuilder_.build();
        }
        result.rewardGeneral_ = rewardGeneral_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage) {
          return mergeFrom((com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage other) {
        if (other == com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage.getDefaultInstance()) return this;
        if (other.getUid() != 0) {
          setUid(other.getUid());
        }
        if (other.getStageUid() != 0) {
          setStageUid(other.getStageUid());
        }
        if (other.getFloor() != 0) {
          setFloor(other.getFloor());
        }
        if (other.getBossStage() != false) {
          setBossStage(other.getBossStage());
        }
        if (!other.getBossStartScene().isEmpty()) {
          bossStartScene_ = other.bossStartScene_;
          onChanged();
        }
        if (!other.exps_.isEmpty()) {
          if (exps_.isEmpty()) {
            exps_ = other.exps_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureExpsIsMutable();
            exps_.addAll(other.exps_);
          }
          onChanged();
        }
        if (!other.monsterExps_.isEmpty()) {
          if (monsterExps_.isEmpty()) {
            monsterExps_ = other.monsterExps_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureMonsterExpsIsMutable();
            monsterExps_.addAll(other.monsterExps_);
          }
          onChanged();
        }
        if (!other.requiredEnergies_.isEmpty()) {
          if (requiredEnergies_.isEmpty()) {
            requiredEnergies_ = other.requiredEnergies_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureRequiredEnergiesIsMutable();
            requiredEnergies_.addAll(other.requiredEnergies_);
          }
          onChanged();
        }
        if (!other.normalDisplayMons_.isEmpty()) {
          if (normalDisplayMons_.isEmpty()) {
            normalDisplayMons_ = other.normalDisplayMons_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureNormalDisplayMonsIsMutable();
            normalDisplayMons_.addAll(other.normalDisplayMons_);
          }
          onChanged();
        }
        if (!other.hardDisplayMons_.isEmpty()) {
          if (hardDisplayMons_.isEmpty()) {
            hardDisplayMons_ = other.hardDisplayMons_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureHardDisplayMonsIsMutable();
            hardDisplayMons_.addAll(other.hardDisplayMons_);
          }
          onChanged();
        }
        if (normalBattlesBuilder_ == null) {
          if (!other.normalBattles_.isEmpty()) {
            if (normalBattles_.isEmpty()) {
              normalBattles_ = other.normalBattles_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureNormalBattlesIsMutable();
              normalBattles_.addAll(other.normalBattles_);
            }
            onChanged();
          }
        } else {
          if (!other.normalBattles_.isEmpty()) {
            if (normalBattlesBuilder_.isEmpty()) {
              normalBattlesBuilder_.dispose();
              normalBattlesBuilder_ = null;
              normalBattles_ = other.normalBattles_;
              bitField0_ = (bitField0_ & ~0x00000400);
              normalBattlesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNormalBattlesFieldBuilder() : null;
            } else {
              normalBattlesBuilder_.addAllMessages(other.normalBattles_);
            }
          }
        }
        if (hardBattlesBuilder_ == null) {
          if (!other.hardBattles_.isEmpty()) {
            if (hardBattles_.isEmpty()) {
              hardBattles_ = other.hardBattles_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureHardBattlesIsMutable();
              hardBattles_.addAll(other.hardBattles_);
            }
            onChanged();
          }
        } else {
          if (!other.hardBattles_.isEmpty()) {
            if (hardBattlesBuilder_.isEmpty()) {
              hardBattlesBuilder_.dispose();
              hardBattlesBuilder_ = null;
              hardBattles_ = other.hardBattles_;
              bitField0_ = (bitField0_ & ~0x00000800);
              hardBattlesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHardBattlesFieldBuilder() : null;
            } else {
              hardBattlesBuilder_.addAllMessages(other.hardBattles_);
            }
          }
        }
        if (!other.tipUids_.isEmpty()) {
          if (tipUids_.isEmpty()) {
            tipUids_ = other.tipUids_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureTipUidsIsMutable();
            tipUids_.addAll(other.tipUids_);
          }
          onChanged();
        }
        if (rewardProbsBuilder_ == null) {
          if (!other.rewardProbs_.isEmpty()) {
            if (rewardProbs_.isEmpty()) {
              rewardProbs_ = other.rewardProbs_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureRewardProbsIsMutable();
              rewardProbs_.addAll(other.rewardProbs_);
            }
            onChanged();
          }
        } else {
          if (!other.rewardProbs_.isEmpty()) {
            if (rewardProbsBuilder_.isEmpty()) {
              rewardProbsBuilder_.dispose();
              rewardProbsBuilder_ = null;
              rewardProbs_ = other.rewardProbs_;
              bitField0_ = (bitField0_ & ~0x00002000);
              rewardProbsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRewardProbsFieldBuilder() : null;
            } else {
              rewardProbsBuilder_.addAllMessages(other.rewardProbs_);
            }
          }
        }
        if (rewardMustsBuilder_ == null) {
          if (!other.rewardMusts_.isEmpty()) {
            if (rewardMusts_.isEmpty()) {
              rewardMusts_ = other.rewardMusts_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureRewardMustsIsMutable();
              rewardMusts_.addAll(other.rewardMusts_);
            }
            onChanged();
          }
        } else {
          if (!other.rewardMusts_.isEmpty()) {
            if (rewardMustsBuilder_.isEmpty()) {
              rewardMustsBuilder_.dispose();
              rewardMustsBuilder_ = null;
              rewardMusts_ = other.rewardMusts_;
              bitField0_ = (bitField0_ & ~0x00004000);
              rewardMustsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRewardMustsFieldBuilder() : null;
            } else {
              rewardMustsBuilder_.addAllMessages(other.rewardMusts_);
            }
          }
        }
        if (other.getRewardGeneral() != 0) {
          setRewardGeneral(other.getRewardGeneral());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int uid_ ;
      /**
       * <code>uint32 uid = 1;</code>
       */
      public int getUid() {
        return uid_;
      }
      /**
       * <code>uint32 uid = 1;</code>
       */
      public Builder setUid(int value) {
        
        uid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 uid = 1;</code>
       */
      public Builder clearUid() {
        
        uid_ = 0;
        onChanged();
        return this;
      }

      private int stageUid_ ;
      /**
       * <code>uint32 stage_uid = 2;</code>
       */
      public int getStageUid() {
        return stageUid_;
      }
      /**
       * <code>uint32 stage_uid = 2;</code>
       */
      public Builder setStageUid(int value) {
        
        stageUid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 stage_uid = 2;</code>
       */
      public Builder clearStageUid() {
        
        stageUid_ = 0;
        onChanged();
        return this;
      }

      private int floor_ ;
      /**
       * <code>fixed32 floor = 3;</code>
       */
      public int getFloor() {
        return floor_;
      }
      /**
       * <code>fixed32 floor = 3;</code>
       */
      public Builder setFloor(int value) {
        
        floor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed32 floor = 3;</code>
       */
      public Builder clearFloor() {
        
        floor_ = 0;
        onChanged();
        return this;
      }

      private boolean bossStage_ ;
      /**
       * <code>bool boss_stage = 4;</code>
       */
      public boolean getBossStage() {
        return bossStage_;
      }
      /**
       * <code>bool boss_stage = 4;</code>
       */
      public Builder setBossStage(boolean value) {
        
        bossStage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool boss_stage = 4;</code>
       */
      public Builder clearBossStage() {
        
        bossStage_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object bossStartScene_ = "";
      /**
       * <code>string boss_start_scene = 5;</code>
       */
      public java.lang.String getBossStartScene() {
        java.lang.Object ref = bossStartScene_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          bossStartScene_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string boss_start_scene = 5;</code>
       */
      public com.google.protobuf.ByteString
          getBossStartSceneBytes() {
        java.lang.Object ref = bossStartScene_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bossStartScene_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string boss_start_scene = 5;</code>
       */
      public Builder setBossStartScene(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bossStartScene_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string boss_start_scene = 5;</code>
       */
      public Builder clearBossStartScene() {
        
        bossStartScene_ = getDefaultInstance().getBossStartScene();
        onChanged();
        return this;
      }
      /**
       * <code>string boss_start_scene = 5;</code>
       */
      public Builder setBossStartSceneBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        bossStartScene_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> exps_ = java.util.Collections.emptyList();
      private void ensureExpsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          exps_ = new java.util.ArrayList<java.lang.Integer>(exps_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated uint32 exps = 6;</code>
       */
      public java.util.List<java.lang.Integer>
          getExpsList() {
        return java.util.Collections.unmodifiableList(exps_);
      }
      /**
       * <code>repeated uint32 exps = 6;</code>
       */
      public int getExpsCount() {
        return exps_.size();
      }
      /**
       * <code>repeated uint32 exps = 6;</code>
       */
      public int getExps(int index) {
        return exps_.get(index);
      }
      /**
       * <code>repeated uint32 exps = 6;</code>
       */
      public Builder setExps(
          int index, int value) {
        ensureExpsIsMutable();
        exps_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 exps = 6;</code>
       */
      public Builder addExps(int value) {
        ensureExpsIsMutable();
        exps_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 exps = 6;</code>
       */
      public Builder addAllExps(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureExpsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, exps_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 exps = 6;</code>
       */
      public Builder clearExps() {
        exps_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> monsterExps_ = java.util.Collections.emptyList();
      private void ensureMonsterExpsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          monsterExps_ = new java.util.ArrayList<java.lang.Integer>(monsterExps_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated uint32 monster_exps = 7;</code>
       */
      public java.util.List<java.lang.Integer>
          getMonsterExpsList() {
        return java.util.Collections.unmodifiableList(monsterExps_);
      }
      /**
       * <code>repeated uint32 monster_exps = 7;</code>
       */
      public int getMonsterExpsCount() {
        return monsterExps_.size();
      }
      /**
       * <code>repeated uint32 monster_exps = 7;</code>
       */
      public int getMonsterExps(int index) {
        return monsterExps_.get(index);
      }
      /**
       * <code>repeated uint32 monster_exps = 7;</code>
       */
      public Builder setMonsterExps(
          int index, int value) {
        ensureMonsterExpsIsMutable();
        monsterExps_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 monster_exps = 7;</code>
       */
      public Builder addMonsterExps(int value) {
        ensureMonsterExpsIsMutable();
        monsterExps_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 monster_exps = 7;</code>
       */
      public Builder addAllMonsterExps(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMonsterExpsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, monsterExps_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 monster_exps = 7;</code>
       */
      public Builder clearMonsterExps() {
        monsterExps_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> requiredEnergies_ = java.util.Collections.emptyList();
      private void ensureRequiredEnergiesIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          requiredEnergies_ = new java.util.ArrayList<java.lang.Integer>(requiredEnergies_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated uint32 required_energies = 9;</code>
       */
      public java.util.List<java.lang.Integer>
          getRequiredEnergiesList() {
        return java.util.Collections.unmodifiableList(requiredEnergies_);
      }
      /**
       * <code>repeated uint32 required_energies = 9;</code>
       */
      public int getRequiredEnergiesCount() {
        return requiredEnergies_.size();
      }
      /**
       * <code>repeated uint32 required_energies = 9;</code>
       */
      public int getRequiredEnergies(int index) {
        return requiredEnergies_.get(index);
      }
      /**
       * <code>repeated uint32 required_energies = 9;</code>
       */
      public Builder setRequiredEnergies(
          int index, int value) {
        ensureRequiredEnergiesIsMutable();
        requiredEnergies_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 required_energies = 9;</code>
       */
      public Builder addRequiredEnergies(int value) {
        ensureRequiredEnergiesIsMutable();
        requiredEnergies_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 required_energies = 9;</code>
       */
      public Builder addAllRequiredEnergies(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRequiredEnergiesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, requiredEnergies_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 required_energies = 9;</code>
       */
      public Builder clearRequiredEnergies() {
        requiredEnergies_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> normalDisplayMons_ = java.util.Collections.emptyList();
      private void ensureNormalDisplayMonsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          normalDisplayMons_ = new java.util.ArrayList<java.lang.Integer>(normalDisplayMons_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated fixed32 normal_display_mons = 10;</code>
       */
      public java.util.List<java.lang.Integer>
          getNormalDisplayMonsList() {
        return java.util.Collections.unmodifiableList(normalDisplayMons_);
      }
      /**
       * <code>repeated fixed32 normal_display_mons = 10;</code>
       */
      public int getNormalDisplayMonsCount() {
        return normalDisplayMons_.size();
      }
      /**
       * <code>repeated fixed32 normal_display_mons = 10;</code>
       */
      public int getNormalDisplayMons(int index) {
        return normalDisplayMons_.get(index);
      }
      /**
       * <code>repeated fixed32 normal_display_mons = 10;</code>
       */
      public Builder setNormalDisplayMons(
          int index, int value) {
        ensureNormalDisplayMonsIsMutable();
        normalDisplayMons_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 normal_display_mons = 10;</code>
       */
      public Builder addNormalDisplayMons(int value) {
        ensureNormalDisplayMonsIsMutable();
        normalDisplayMons_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 normal_display_mons = 10;</code>
       */
      public Builder addAllNormalDisplayMons(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNormalDisplayMonsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, normalDisplayMons_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 normal_display_mons = 10;</code>
       */
      public Builder clearNormalDisplayMons() {
        normalDisplayMons_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> hardDisplayMons_ = java.util.Collections.emptyList();
      private void ensureHardDisplayMonsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          hardDisplayMons_ = new java.util.ArrayList<java.lang.Integer>(hardDisplayMons_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated fixed32 hard_display_mons = 11;</code>
       */
      public java.util.List<java.lang.Integer>
          getHardDisplayMonsList() {
        return java.util.Collections.unmodifiableList(hardDisplayMons_);
      }
      /**
       * <code>repeated fixed32 hard_display_mons = 11;</code>
       */
      public int getHardDisplayMonsCount() {
        return hardDisplayMons_.size();
      }
      /**
       * <code>repeated fixed32 hard_display_mons = 11;</code>
       */
      public int getHardDisplayMons(int index) {
        return hardDisplayMons_.get(index);
      }
      /**
       * <code>repeated fixed32 hard_display_mons = 11;</code>
       */
      public Builder setHardDisplayMons(
          int index, int value) {
        ensureHardDisplayMonsIsMutable();
        hardDisplayMons_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 hard_display_mons = 11;</code>
       */
      public Builder addHardDisplayMons(int value) {
        ensureHardDisplayMonsIsMutable();
        hardDisplayMons_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 hard_display_mons = 11;</code>
       */
      public Builder addAllHardDisplayMons(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHardDisplayMonsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hardDisplayMons_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 hard_display_mons = 11;</code>
       */
      public Builder clearHardDisplayMons() {
        hardDisplayMons_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      private java.util.List<com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle> normalBattles_ =
        java.util.Collections.emptyList();
      private void ensureNormalBattlesIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          normalBattles_ = new java.util.ArrayList<com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle>(normalBattles_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder> normalBattlesBuilder_;

      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public java.util.List<com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle> getNormalBattlesList() {
        if (normalBattlesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(normalBattles_);
        } else {
          return normalBattlesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public int getNormalBattlesCount() {
        if (normalBattlesBuilder_ == null) {
          return normalBattles_.size();
        } else {
          return normalBattlesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle getNormalBattles(int index) {
        if (normalBattlesBuilder_ == null) {
          return normalBattles_.get(index);
        } else {
          return normalBattlesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public Builder setNormalBattles(
          int index, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle value) {
        if (normalBattlesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNormalBattlesIsMutable();
          normalBattles_.set(index, value);
          onChanged();
        } else {
          normalBattlesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public Builder setNormalBattles(
          int index, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder builderForValue) {
        if (normalBattlesBuilder_ == null) {
          ensureNormalBattlesIsMutable();
          normalBattles_.set(index, builderForValue.build());
          onChanged();
        } else {
          normalBattlesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public Builder addNormalBattles(com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle value) {
        if (normalBattlesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNormalBattlesIsMutable();
          normalBattles_.add(value);
          onChanged();
        } else {
          normalBattlesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public Builder addNormalBattles(
          int index, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle value) {
        if (normalBattlesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNormalBattlesIsMutable();
          normalBattles_.add(index, value);
          onChanged();
        } else {
          normalBattlesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public Builder addNormalBattles(
          com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder builderForValue) {
        if (normalBattlesBuilder_ == null) {
          ensureNormalBattlesIsMutable();
          normalBattles_.add(builderForValue.build());
          onChanged();
        } else {
          normalBattlesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public Builder addNormalBattles(
          int index, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder builderForValue) {
        if (normalBattlesBuilder_ == null) {
          ensureNormalBattlesIsMutable();
          normalBattles_.add(index, builderForValue.build());
          onChanged();
        } else {
          normalBattlesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public Builder addAllNormalBattles(
          java.lang.Iterable<? extends com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle> values) {
        if (normalBattlesBuilder_ == null) {
          ensureNormalBattlesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, normalBattles_);
          onChanged();
        } else {
          normalBattlesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public Builder clearNormalBattles() {
        if (normalBattlesBuilder_ == null) {
          normalBattles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          normalBattlesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public Builder removeNormalBattles(int index) {
        if (normalBattlesBuilder_ == null) {
          ensureNormalBattlesIsMutable();
          normalBattles_.remove(index);
          onChanged();
        } else {
          normalBattlesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder getNormalBattlesBuilder(
          int index) {
        return getNormalBattlesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder getNormalBattlesOrBuilder(
          int index) {
        if (normalBattlesBuilder_ == null) {
          return normalBattles_.get(index);  } else {
          return normalBattlesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public java.util.List<? extends com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder> 
           getNormalBattlesOrBuilderList() {
        if (normalBattlesBuilder_ != null) {
          return normalBattlesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(normalBattles_);
        }
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder addNormalBattlesBuilder() {
        return getNormalBattlesFieldBuilder().addBuilder(
            com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.getDefaultInstance());
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder addNormalBattlesBuilder(
          int index) {
        return getNormalBattlesFieldBuilder().addBuilder(
            index, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.getDefaultInstance());
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle normal_battles = 12;</code>
       */
      public java.util.List<com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder> 
           getNormalBattlesBuilderList() {
        return getNormalBattlesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder> 
          getNormalBattlesFieldBuilder() {
        if (normalBattlesBuilder_ == null) {
          normalBattlesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder>(
                  normalBattles_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          normalBattles_ = null;
        }
        return normalBattlesBuilder_;
      }

      private java.util.List<com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle> hardBattles_ =
        java.util.Collections.emptyList();
      private void ensureHardBattlesIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          hardBattles_ = new java.util.ArrayList<com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle>(hardBattles_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder> hardBattlesBuilder_;

      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public java.util.List<com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle> getHardBattlesList() {
        if (hardBattlesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hardBattles_);
        } else {
          return hardBattlesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public int getHardBattlesCount() {
        if (hardBattlesBuilder_ == null) {
          return hardBattles_.size();
        } else {
          return hardBattlesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle getHardBattles(int index) {
        if (hardBattlesBuilder_ == null) {
          return hardBattles_.get(index);
        } else {
          return hardBattlesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public Builder setHardBattles(
          int index, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle value) {
        if (hardBattlesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHardBattlesIsMutable();
          hardBattles_.set(index, value);
          onChanged();
        } else {
          hardBattlesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public Builder setHardBattles(
          int index, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder builderForValue) {
        if (hardBattlesBuilder_ == null) {
          ensureHardBattlesIsMutable();
          hardBattles_.set(index, builderForValue.build());
          onChanged();
        } else {
          hardBattlesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public Builder addHardBattles(com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle value) {
        if (hardBattlesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHardBattlesIsMutable();
          hardBattles_.add(value);
          onChanged();
        } else {
          hardBattlesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public Builder addHardBattles(
          int index, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle value) {
        if (hardBattlesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHardBattlesIsMutable();
          hardBattles_.add(index, value);
          onChanged();
        } else {
          hardBattlesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public Builder addHardBattles(
          com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder builderForValue) {
        if (hardBattlesBuilder_ == null) {
          ensureHardBattlesIsMutable();
          hardBattles_.add(builderForValue.build());
          onChanged();
        } else {
          hardBattlesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public Builder addHardBattles(
          int index, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder builderForValue) {
        if (hardBattlesBuilder_ == null) {
          ensureHardBattlesIsMutable();
          hardBattles_.add(index, builderForValue.build());
          onChanged();
        } else {
          hardBattlesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public Builder addAllHardBattles(
          java.lang.Iterable<? extends com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle> values) {
        if (hardBattlesBuilder_ == null) {
          ensureHardBattlesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, hardBattles_);
          onChanged();
        } else {
          hardBattlesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public Builder clearHardBattles() {
        if (hardBattlesBuilder_ == null) {
          hardBattles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          hardBattlesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public Builder removeHardBattles(int index) {
        if (hardBattlesBuilder_ == null) {
          ensureHardBattlesIsMutable();
          hardBattles_.remove(index);
          onChanged();
        } else {
          hardBattlesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder getHardBattlesBuilder(
          int index) {
        return getHardBattlesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder getHardBattlesOrBuilder(
          int index) {
        if (hardBattlesBuilder_ == null) {
          return hardBattles_.get(index);  } else {
          return hardBattlesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public java.util.List<? extends com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder> 
           getHardBattlesOrBuilderList() {
        if (hardBattlesBuilder_ != null) {
          return hardBattlesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hardBattles_);
        }
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder addHardBattlesBuilder() {
        return getHardBattlesFieldBuilder().addBuilder(
            com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.getDefaultInstance());
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder addHardBattlesBuilder(
          int index) {
        return getHardBattlesFieldBuilder().addBuilder(
            index, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.getDefaultInstance());
      }
      /**
       * <code>repeated .msggamedata.MsgStageBattle hard_battles = 13;</code>
       */
      public java.util.List<com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder> 
           getHardBattlesBuilderList() {
        return getHardBattlesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder> 
          getHardBattlesFieldBuilder() {
        if (hardBattlesBuilder_ == null) {
          hardBattlesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattle.Builder, com.felania.msldb.MsgStageBattleOuterClass.MsgStageBattleOrBuilder>(
                  hardBattles_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          hardBattles_ = null;
        }
        return hardBattlesBuilder_;
      }

      private java.util.List<java.lang.Integer> tipUids_ = java.util.Collections.emptyList();
      private void ensureTipUidsIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          tipUids_ = new java.util.ArrayList<java.lang.Integer>(tipUids_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated uint32 tip_uids = 14;</code>
       */
      public java.util.List<java.lang.Integer>
          getTipUidsList() {
        return java.util.Collections.unmodifiableList(tipUids_);
      }
      /**
       * <code>repeated uint32 tip_uids = 14;</code>
       */
      public int getTipUidsCount() {
        return tipUids_.size();
      }
      /**
       * <code>repeated uint32 tip_uids = 14;</code>
       */
      public int getTipUids(int index) {
        return tipUids_.get(index);
      }
      /**
       * <code>repeated uint32 tip_uids = 14;</code>
       */
      public Builder setTipUids(
          int index, int value) {
        ensureTipUidsIsMutable();
        tipUids_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tip_uids = 14;</code>
       */
      public Builder addTipUids(int value) {
        ensureTipUidsIsMutable();
        tipUids_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tip_uids = 14;</code>
       */
      public Builder addAllTipUids(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTipUidsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tipUids_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tip_uids = 14;</code>
       */
      public Builder clearTipUids() {
        tipUids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      private java.util.List<com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb> rewardProbs_ =
        java.util.Collections.emptyList();
      private void ensureRewardProbsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          rewardProbs_ = new java.util.ArrayList<com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb>(rewardProbs_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb, com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb.Builder, com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProbOrBuilder> rewardProbsBuilder_;

      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public java.util.List<com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb> getRewardProbsList() {
        if (rewardProbsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rewardProbs_);
        } else {
          return rewardProbsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public int getRewardProbsCount() {
        if (rewardProbsBuilder_ == null) {
          return rewardProbs_.size();
        } else {
          return rewardProbsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb getRewardProbs(int index) {
        if (rewardProbsBuilder_ == null) {
          return rewardProbs_.get(index);
        } else {
          return rewardProbsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public Builder setRewardProbs(
          int index, com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb value) {
        if (rewardProbsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardProbsIsMutable();
          rewardProbs_.set(index, value);
          onChanged();
        } else {
          rewardProbsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public Builder setRewardProbs(
          int index, com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb.Builder builderForValue) {
        if (rewardProbsBuilder_ == null) {
          ensureRewardProbsIsMutable();
          rewardProbs_.set(index, builderForValue.build());
          onChanged();
        } else {
          rewardProbsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public Builder addRewardProbs(com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb value) {
        if (rewardProbsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardProbsIsMutable();
          rewardProbs_.add(value);
          onChanged();
        } else {
          rewardProbsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public Builder addRewardProbs(
          int index, com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb value) {
        if (rewardProbsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardProbsIsMutable();
          rewardProbs_.add(index, value);
          onChanged();
        } else {
          rewardProbsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public Builder addRewardProbs(
          com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb.Builder builderForValue) {
        if (rewardProbsBuilder_ == null) {
          ensureRewardProbsIsMutable();
          rewardProbs_.add(builderForValue.build());
          onChanged();
        } else {
          rewardProbsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public Builder addRewardProbs(
          int index, com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb.Builder builderForValue) {
        if (rewardProbsBuilder_ == null) {
          ensureRewardProbsIsMutable();
          rewardProbs_.add(index, builderForValue.build());
          onChanged();
        } else {
          rewardProbsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public Builder addAllRewardProbs(
          java.lang.Iterable<? extends com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb> values) {
        if (rewardProbsBuilder_ == null) {
          ensureRewardProbsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rewardProbs_);
          onChanged();
        } else {
          rewardProbsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public Builder clearRewardProbs() {
        if (rewardProbsBuilder_ == null) {
          rewardProbs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          rewardProbsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public Builder removeRewardProbs(int index) {
        if (rewardProbsBuilder_ == null) {
          ensureRewardProbsIsMutable();
          rewardProbs_.remove(index);
          onChanged();
        } else {
          rewardProbsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb.Builder getRewardProbsBuilder(
          int index) {
        return getRewardProbsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProbOrBuilder getRewardProbsOrBuilder(
          int index) {
        if (rewardProbsBuilder_ == null) {
          return rewardProbs_.get(index);  } else {
          return rewardProbsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public java.util.List<? extends com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProbOrBuilder> 
           getRewardProbsOrBuilderList() {
        if (rewardProbsBuilder_ != null) {
          return rewardProbsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rewardProbs_);
        }
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb.Builder addRewardProbsBuilder() {
        return getRewardProbsFieldBuilder().addBuilder(
            com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb.getDefaultInstance());
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb.Builder addRewardProbsBuilder(
          int index) {
        return getRewardProbsFieldBuilder().addBuilder(
            index, com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb.getDefaultInstance());
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardProb reward_probs = 15;</code>
       */
      public java.util.List<com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb.Builder> 
           getRewardProbsBuilderList() {
        return getRewardProbsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb, com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb.Builder, com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProbOrBuilder> 
          getRewardProbsFieldBuilder() {
        if (rewardProbsBuilder_ == null) {
          rewardProbsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb, com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProb.Builder, com.felania.msldb.MsgSubStageRewardProbOuterClass.MsgSubStageRewardProbOrBuilder>(
                  rewardProbs_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          rewardProbs_ = null;
        }
        return rewardProbsBuilder_;
      }

      private java.util.List<com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty> rewardMusts_ =
        java.util.Collections.emptyList();
      private void ensureRewardMustsIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          rewardMusts_ = new java.util.ArrayList<com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty>(rewardMusts_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty, com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty.Builder, com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficultyOrBuilder> rewardMustsBuilder_;

      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public java.util.List<com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty> getRewardMustsList() {
        if (rewardMustsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rewardMusts_);
        } else {
          return rewardMustsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public int getRewardMustsCount() {
        if (rewardMustsBuilder_ == null) {
          return rewardMusts_.size();
        } else {
          return rewardMustsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty getRewardMusts(int index) {
        if (rewardMustsBuilder_ == null) {
          return rewardMusts_.get(index);
        } else {
          return rewardMustsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public Builder setRewardMusts(
          int index, com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty value) {
        if (rewardMustsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardMustsIsMutable();
          rewardMusts_.set(index, value);
          onChanged();
        } else {
          rewardMustsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public Builder setRewardMusts(
          int index, com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty.Builder builderForValue) {
        if (rewardMustsBuilder_ == null) {
          ensureRewardMustsIsMutable();
          rewardMusts_.set(index, builderForValue.build());
          onChanged();
        } else {
          rewardMustsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public Builder addRewardMusts(com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty value) {
        if (rewardMustsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardMustsIsMutable();
          rewardMusts_.add(value);
          onChanged();
        } else {
          rewardMustsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public Builder addRewardMusts(
          int index, com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty value) {
        if (rewardMustsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardMustsIsMutable();
          rewardMusts_.add(index, value);
          onChanged();
        } else {
          rewardMustsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public Builder addRewardMusts(
          com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty.Builder builderForValue) {
        if (rewardMustsBuilder_ == null) {
          ensureRewardMustsIsMutable();
          rewardMusts_.add(builderForValue.build());
          onChanged();
        } else {
          rewardMustsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public Builder addRewardMusts(
          int index, com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty.Builder builderForValue) {
        if (rewardMustsBuilder_ == null) {
          ensureRewardMustsIsMutable();
          rewardMusts_.add(index, builderForValue.build());
          onChanged();
        } else {
          rewardMustsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public Builder addAllRewardMusts(
          java.lang.Iterable<? extends com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty> values) {
        if (rewardMustsBuilder_ == null) {
          ensureRewardMustsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rewardMusts_);
          onChanged();
        } else {
          rewardMustsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public Builder clearRewardMusts() {
        if (rewardMustsBuilder_ == null) {
          rewardMusts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          rewardMustsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public Builder removeRewardMusts(int index) {
        if (rewardMustsBuilder_ == null) {
          ensureRewardMustsIsMutable();
          rewardMusts_.remove(index);
          onChanged();
        } else {
          rewardMustsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty.Builder getRewardMustsBuilder(
          int index) {
        return getRewardMustsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficultyOrBuilder getRewardMustsOrBuilder(
          int index) {
        if (rewardMustsBuilder_ == null) {
          return rewardMusts_.get(index);  } else {
          return rewardMustsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public java.util.List<? extends com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficultyOrBuilder> 
           getRewardMustsOrBuilderList() {
        if (rewardMustsBuilder_ != null) {
          return rewardMustsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rewardMusts_);
        }
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty.Builder addRewardMustsBuilder() {
        return getRewardMustsFieldBuilder().addBuilder(
            com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty.getDefaultInstance());
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty.Builder addRewardMustsBuilder(
          int index) {
        return getRewardMustsFieldBuilder().addBuilder(
            index, com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty.getDefaultInstance());
      }
      /**
       * <code>repeated .msggamedata.MsgSubStageRewardMustDifficulty reward_musts = 16;</code>
       */
      public java.util.List<com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty.Builder> 
           getRewardMustsBuilderList() {
        return getRewardMustsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty, com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty.Builder, com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficultyOrBuilder> 
          getRewardMustsFieldBuilder() {
        if (rewardMustsBuilder_ == null) {
          rewardMustsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty, com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficulty.Builder, com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.MsgSubStageRewardMustDifficultyOrBuilder>(
                  rewardMusts_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          rewardMusts_ = null;
        }
        return rewardMustsBuilder_;
      }

      private int rewardGeneral_ ;
      /**
       * <code>uint32 reward_general = 17;</code>
       */
      public int getRewardGeneral() {
        return rewardGeneral_;
      }
      /**
       * <code>uint32 reward_general = 17;</code>
       */
      public Builder setRewardGeneral(int value) {
        
        rewardGeneral_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 reward_general = 17;</code>
       */
      public Builder clearRewardGeneral() {
        
        rewardGeneral_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:msggamedata.MsgInfiniteSubStage)
    }

    // @@protoc_insertion_point(class_scope:msggamedata.MsgInfiniteSubStage)
    private static final com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage();
    }

    public static com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgInfiniteSubStage>
        PARSER = new com.google.protobuf.AbstractParser<MsgInfiniteSubStage>() {
      public MsgInfiniteSubStage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgInfiniteSubStage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgInfiniteSubStage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MsgInfiniteSubStage> getParserForType() {
      return PARSER;
    }

    public com.felania.msldb.MsgInfiniteSubStageOuterClass.MsgInfiniteSubStage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_msggamedata_MsgInfiniteSubStage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_msggamedata_MsgInfiniteSubStage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031MsgInfiniteSubStage.proto\022\013msggamedata" +
      "\032\024MsgStageBattle.proto\032\033MsgSubStageRewar" +
      "dProb.proto\032%MsgSubStageRewardMustDiffic" +
      "ulty.proto\"\371\003\n\023MsgInfiniteSubStage\022\013\n\003ui" +
      "d\030\001 \001(\r\022\021\n\tstage_uid\030\002 \001(\r\022\r\n\005floor\030\003 \001(" +
      "\007\022\022\n\nboss_stage\030\004 \001(\010\022\030\n\020boss_start_scen" +
      "e\030\005 \001(\t\022\014\n\004exps\030\006 \003(\r\022\024\n\014monster_exps\030\007 " +
      "\003(\r\022\031\n\021required_energies\030\t \003(\r\022\033\n\023normal" +
      "_display_mons\030\n \003(\007\022\031\n\021hard_display_mons" +
      "\030\013 \003(\007\0223\n\016normal_battles\030\014 \003(\0132\033.msggame" +
      "data.MsgStageBattle\0221\n\014hard_battles\030\r \003(" +
      "\0132\033.msggamedata.MsgStageBattle\022\020\n\010tip_ui" +
      "ds\030\016 \003(\r\0228\n\014reward_probs\030\017 \003(\0132\".msggame" +
      "data.MsgSubStageRewardProb\022B\n\014reward_mus" +
      "ts\030\020 \003(\0132,.msggamedata.MsgSubStageReward" +
      "MustDifficulty\022\026\n\016reward_general\030\021 \001(\rB\023" +
      "\n\021com.felania.msldbb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.felania.msldb.MsgStageBattleOuterClass.getDescriptor(),
          com.felania.msldb.MsgSubStageRewardProbOuterClass.getDescriptor(),
          com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.getDescriptor(),
        }, assigner);
    internal_static_msggamedata_MsgInfiniteSubStage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_msggamedata_MsgInfiniteSubStage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_msggamedata_MsgInfiniteSubStage_descriptor,
        new java.lang.String[] { "Uid", "StageUid", "Floor", "BossStage", "BossStartScene", "Exps", "MonsterExps", "RequiredEnergies", "NormalDisplayMons", "HardDisplayMons", "NormalBattles", "HardBattles", "TipUids", "RewardProbs", "RewardMusts", "RewardGeneral", });
    com.felania.msldb.MsgStageBattleOuterClass.getDescriptor();
    com.felania.msldb.MsgSubStageRewardProbOuterClass.getDescriptor();
    com.felania.msldb.MsgSubStageRewardMustDifficultyOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
