// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MonsterSlotIndex.proto

package com.felania.msldb;

public final class MonsterSlotIndexOuterClass {
  private MonsterSlotIndexOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code msggamedata.MonsterSlotIndex}
   */
  public enum MonsterSlotIndex
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MSI_Story = 0;</code>
     */
    MSI_Story(0),
    /**
     * <code>MSI_Dungeon = 1;</code>
     */
    MSI_Dungeon(1),
    /**
     * <code>MSI_DayBeyondStoneDungeonMon = 2;</code>
     */
    MSI_DayBeyondStoneDungeonMon(2),
    /**
     * <code>MSI_DayBeyondStoneDungeonTue = 3;</code>
     */
    MSI_DayBeyondStoneDungeonTue(3),
    /**
     * <code>MSI_DayBeyondStoneDungeonWed = 4;</code>
     */
    MSI_DayBeyondStoneDungeonWed(4),
    /**
     * <code>MSI_DayBeyondStoneDungeonThr = 5;</code>
     */
    MSI_DayBeyondStoneDungeonThr(5),
    /**
     * <code>MSI_DayBeyondStoneDungeonFri = 6;</code>
     */
    MSI_DayBeyondStoneDungeonFri(6),
    /**
     * <code>MSI_InfiniteDungeon = 7;</code>
     */
    MSI_InfiniteDungeon(7),
    /**
     * <code>MSI_ArenaAttack = 8;</code>
     */
    MSI_ArenaAttack(8),
    /**
     * <code>MSI_ArenaDefense = 9;</code>
     */
    MSI_ArenaDefense(9),
    /**
     * <code>MSI_DungeonAncientGolem = 10;</code>
     */
    MSI_DungeonAncientGolem(10),
    /**
     * <code>MSI_DungeonDragon = 11;</code>
     */
    MSI_DungeonDragon(11),
    /**
     * <code>MSI_Count = 12;</code>
     */
    MSI_Count(12),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MSI_Story = 0;</code>
     */
    public static final int MSI_Story_VALUE = 0;
    /**
     * <code>MSI_Dungeon = 1;</code>
     */
    public static final int MSI_Dungeon_VALUE = 1;
    /**
     * <code>MSI_DayBeyondStoneDungeonMon = 2;</code>
     */
    public static final int MSI_DayBeyondStoneDungeonMon_VALUE = 2;
    /**
     * <code>MSI_DayBeyondStoneDungeonTue = 3;</code>
     */
    public static final int MSI_DayBeyondStoneDungeonTue_VALUE = 3;
    /**
     * <code>MSI_DayBeyondStoneDungeonWed = 4;</code>
     */
    public static final int MSI_DayBeyondStoneDungeonWed_VALUE = 4;
    /**
     * <code>MSI_DayBeyondStoneDungeonThr = 5;</code>
     */
    public static final int MSI_DayBeyondStoneDungeonThr_VALUE = 5;
    /**
     * <code>MSI_DayBeyondStoneDungeonFri = 6;</code>
     */
    public static final int MSI_DayBeyondStoneDungeonFri_VALUE = 6;
    /**
     * <code>MSI_InfiniteDungeon = 7;</code>
     */
    public static final int MSI_InfiniteDungeon_VALUE = 7;
    /**
     * <code>MSI_ArenaAttack = 8;</code>
     */
    public static final int MSI_ArenaAttack_VALUE = 8;
    /**
     * <code>MSI_ArenaDefense = 9;</code>
     */
    public static final int MSI_ArenaDefense_VALUE = 9;
    /**
     * <code>MSI_DungeonAncientGolem = 10;</code>
     */
    public static final int MSI_DungeonAncientGolem_VALUE = 10;
    /**
     * <code>MSI_DungeonDragon = 11;</code>
     */
    public static final int MSI_DungeonDragon_VALUE = 11;
    /**
     * <code>MSI_Count = 12;</code>
     */
    public static final int MSI_Count_VALUE = 12;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MonsterSlotIndex valueOf(int value) {
      return forNumber(value);
    }

    public static MonsterSlotIndex forNumber(int value) {
      switch (value) {
        case 0: return MSI_Story;
        case 1: return MSI_Dungeon;
        case 2: return MSI_DayBeyondStoneDungeonMon;
        case 3: return MSI_DayBeyondStoneDungeonTue;
        case 4: return MSI_DayBeyondStoneDungeonWed;
        case 5: return MSI_DayBeyondStoneDungeonThr;
        case 6: return MSI_DayBeyondStoneDungeonFri;
        case 7: return MSI_InfiniteDungeon;
        case 8: return MSI_ArenaAttack;
        case 9: return MSI_ArenaDefense;
        case 10: return MSI_DungeonAncientGolem;
        case 11: return MSI_DungeonDragon;
        case 12: return MSI_Count;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MonsterSlotIndex>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MonsterSlotIndex> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MonsterSlotIndex>() {
            public MonsterSlotIndex findValueByNumber(int number) {
              return MonsterSlotIndex.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.felania.msldb.MonsterSlotIndexOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final MonsterSlotIndex[] VALUES = values();

    public static MonsterSlotIndex valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MonsterSlotIndex(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:msggamedata.MonsterSlotIndex)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026MonsterSlotIndex.proto\022\013msggamedata*\343\002" +
      "\n\020MonsterSlotIndex\022\r\n\tMSI_Story\020\000\022\017\n\013MSI" +
      "_Dungeon\020\001\022 \n\034MSI_DayBeyondStoneDungeonM" +
      "on\020\002\022 \n\034MSI_DayBeyondStoneDungeonTue\020\003\022 " +
      "\n\034MSI_DayBeyondStoneDungeonWed\020\004\022 \n\034MSI_" +
      "DayBeyondStoneDungeonThr\020\005\022 \n\034MSI_DayBey" +
      "ondStoneDungeonFri\020\006\022\027\n\023MSI_InfiniteDung" +
      "eon\020\007\022\023\n\017MSI_ArenaAttack\020\010\022\024\n\020MSI_ArenaD" +
      "efense\020\t\022\033\n\027MSI_DungeonAncientGolem\020\n\022\025\n" +
      "\021MSI_DungeonDragon\020\013\022\r\n\tMSI_Count\020\014B\023\n\021c",
      "om.felania.msldbb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
