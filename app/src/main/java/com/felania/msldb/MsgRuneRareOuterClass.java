// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgRuneRare.proto

package com.felania.msldb;

public final class MsgRuneRareOuterClass {
  private MsgRuneRareOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MsgRuneRareOrBuilder extends
      // @@protoc_insertion_point(interface_extends:msggamedata.MsgRuneRare)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>fixed32 uid = 1;</code>
     */
    int getUid();

    /**
     * <code>uint32 rare = 2;</code>
     */
    int getRare();

    /**
     * <code>fixed32 name = 3;</code>
     */
    int getName();

    /**
     * <code>fixed32 desc = 4;</code>
     */
    int getDesc();

    /**
     * <code>float value = 5;</code>
     */
    float getValue();

    /**
     * <code>float optional_value = 6;</code>
     */
    float getOptionalValue();

    /**
     * <code>uint32 prob = 7;</code>
     */
    int getProb();

    /**
     * <code>uint32 shop_gold_prob = 8;</code>
     */
    int getShopGoldProb();

    /**
     * <code>uint32 shop_gem_prob = 9;</code>
     */
    int getShopGemProb();

    /**
     * <code>uint32 shop_social_prob = 10;</code>
     */
    int getShopSocialProb();

    /**
     * <code>uint32 shop_reward_prob = 11;</code>
     */
    int getShopRewardProb();

    /**
     * <code>float unequip_mul = 12;</code>
     */
    float getUnequipMul();

    /**
     * <code>float sell_mul = 13;</code>
     */
    float getSellMul();

    /**
     * <code>uint32 add_hp = 14;</code>
     */
    int getAddHp();

    /**
     * <code>float add_hp_percent = 15;</code>
     */
    float getAddHpPercent();

    /**
     * <code>uint32 add_hp_maxupgrade = 16;</code>
     */
    int getAddHpMaxupgrade();

    /**
     * <code>float add_hp_percent_maxupgrade = 17;</code>
     */
    float getAddHpPercentMaxupgrade();

    /**
     * <code>uint32 add_attack = 18;</code>
     */
    int getAddAttack();

    /**
     * <code>float add_attack_percent = 19;</code>
     */
    float getAddAttackPercent();

    /**
     * <code>uint32 add_attack_maxupgrade = 20;</code>
     */
    int getAddAttackMaxupgrade();

    /**
     * <code>float add_attack_percent_maxupgrade = 21;</code>
     */
    float getAddAttackPercentMaxupgrade();

    /**
     * <code>uint32 add_defence = 22;</code>
     */
    int getAddDefence();

    /**
     * <code>float add_defence_percent = 23;</code>
     */
    float getAddDefencePercent();

    /**
     * <code>uint32 add_defence_maxupgrade = 24;</code>
     */
    int getAddDefenceMaxupgrade();

    /**
     * <code>float add_defence_percent_maxupgrade = 25;</code>
     */
    float getAddDefencePercentMaxupgrade();

    /**
     * <code>uint32 add_heal = 26;</code>
     */
    int getAddHeal();

    /**
     * <code>float add_heal_percent = 27;</code>
     */
    float getAddHealPercent();

    /**
     * <code>uint32 add_heal_maxupgrade = 28;</code>
     */
    int getAddHealMaxupgrade();

    /**
     * <code>float add_heal_percent_maxupgrade = 29;</code>
     */
    float getAddHealPercentMaxupgrade();

    /**
     * <code>float add_critical_damage_percent = 30;</code>
     */
    float getAddCriticalDamagePercent();

    /**
     * <code>float add_critical_prob_percent = 31;</code>
     */
    float getAddCriticalProbPercent();

    /**
     * <code>float add_status_effect_resistance_percent = 32;</code>
     */
    float getAddStatusEffectResistancePercent();

    /**
     * <code>float add_critical_damage_percent_maxupgrade = 33;</code>
     */
    float getAddCriticalDamagePercentMaxupgrade();

    /**
     * <code>float add_critical_prob_percent_maxupgrade = 34;</code>
     */
    float getAddCriticalProbPercentMaxupgrade();

    /**
     * <code>float add_status_effect_resistance_percent_maxupgrade = 35;</code>
     */
    float getAddStatusEffectResistancePercentMaxupgrade();

    /**
     * <code>float failure_correct_prob = 36;</code>
     */
    float getFailureCorrectProb();
  }
  /**
   * Protobuf type {@code msggamedata.MsgRuneRare}
   */
  public  static final class MsgRuneRare extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:msggamedata.MsgRuneRare)
      MsgRuneRareOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgRuneRare.newBuilder() to construct.
    private MsgRuneRare(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgRuneRare() {
      uid_ = 0;
      rare_ = 0;
      name_ = 0;
      desc_ = 0;
      value_ = 0F;
      optionalValue_ = 0F;
      prob_ = 0;
      shopGoldProb_ = 0;
      shopGemProb_ = 0;
      shopSocialProb_ = 0;
      shopRewardProb_ = 0;
      unequipMul_ = 0F;
      sellMul_ = 0F;
      addHp_ = 0;
      addHpPercent_ = 0F;
      addHpMaxupgrade_ = 0;
      addHpPercentMaxupgrade_ = 0F;
      addAttack_ = 0;
      addAttackPercent_ = 0F;
      addAttackMaxupgrade_ = 0;
      addAttackPercentMaxupgrade_ = 0F;
      addDefence_ = 0;
      addDefencePercent_ = 0F;
      addDefenceMaxupgrade_ = 0;
      addDefencePercentMaxupgrade_ = 0F;
      addHeal_ = 0;
      addHealPercent_ = 0F;
      addHealMaxupgrade_ = 0;
      addHealPercentMaxupgrade_ = 0F;
      addCriticalDamagePercent_ = 0F;
      addCriticalProbPercent_ = 0F;
      addStatusEffectResistancePercent_ = 0F;
      addCriticalDamagePercentMaxupgrade_ = 0F;
      addCriticalProbPercentMaxupgrade_ = 0F;
      addStatusEffectResistancePercentMaxupgrade_ = 0F;
      failureCorrectProb_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgRuneRare(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {

              uid_ = input.readFixed32();
              break;
            }
            case 16: {

              rare_ = input.readUInt32();
              break;
            }
            case 29: {

              name_ = input.readFixed32();
              break;
            }
            case 37: {

              desc_ = input.readFixed32();
              break;
            }
            case 45: {

              value_ = input.readFloat();
              break;
            }
            case 53: {

              optionalValue_ = input.readFloat();
              break;
            }
            case 56: {

              prob_ = input.readUInt32();
              break;
            }
            case 64: {

              shopGoldProb_ = input.readUInt32();
              break;
            }
            case 72: {

              shopGemProb_ = input.readUInt32();
              break;
            }
            case 80: {

              shopSocialProb_ = input.readUInt32();
              break;
            }
            case 88: {

              shopRewardProb_ = input.readUInt32();
              break;
            }
            case 101: {

              unequipMul_ = input.readFloat();
              break;
            }
            case 109: {

              sellMul_ = input.readFloat();
              break;
            }
            case 112: {

              addHp_ = input.readUInt32();
              break;
            }
            case 125: {

              addHpPercent_ = input.readFloat();
              break;
            }
            case 128: {

              addHpMaxupgrade_ = input.readUInt32();
              break;
            }
            case 141: {

              addHpPercentMaxupgrade_ = input.readFloat();
              break;
            }
            case 144: {

              addAttack_ = input.readUInt32();
              break;
            }
            case 157: {

              addAttackPercent_ = input.readFloat();
              break;
            }
            case 160: {

              addAttackMaxupgrade_ = input.readUInt32();
              break;
            }
            case 173: {

              addAttackPercentMaxupgrade_ = input.readFloat();
              break;
            }
            case 176: {

              addDefence_ = input.readUInt32();
              break;
            }
            case 189: {

              addDefencePercent_ = input.readFloat();
              break;
            }
            case 192: {

              addDefenceMaxupgrade_ = input.readUInt32();
              break;
            }
            case 205: {

              addDefencePercentMaxupgrade_ = input.readFloat();
              break;
            }
            case 208: {

              addHeal_ = input.readUInt32();
              break;
            }
            case 221: {

              addHealPercent_ = input.readFloat();
              break;
            }
            case 224: {

              addHealMaxupgrade_ = input.readUInt32();
              break;
            }
            case 237: {

              addHealPercentMaxupgrade_ = input.readFloat();
              break;
            }
            case 245: {

              addCriticalDamagePercent_ = input.readFloat();
              break;
            }
            case 253: {

              addCriticalProbPercent_ = input.readFloat();
              break;
            }
            case 261: {

              addStatusEffectResistancePercent_ = input.readFloat();
              break;
            }
            case 269: {

              addCriticalDamagePercentMaxupgrade_ = input.readFloat();
              break;
            }
            case 277: {

              addCriticalProbPercentMaxupgrade_ = input.readFloat();
              break;
            }
            case 285: {

              addStatusEffectResistancePercentMaxupgrade_ = input.readFloat();
              break;
            }
            case 293: {

              failureCorrectProb_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.felania.msldb.MsgRuneRareOuterClass.internal_static_msggamedata_MsgRuneRare_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.felania.msldb.MsgRuneRareOuterClass.internal_static_msggamedata_MsgRuneRare_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare.class, com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare.Builder.class);
    }

    public static final int UID_FIELD_NUMBER = 1;
    private int uid_;
    /**
     * <code>fixed32 uid = 1;</code>
     */
    public int getUid() {
      return uid_;
    }

    public static final int RARE_FIELD_NUMBER = 2;
    private int rare_;
    /**
     * <code>uint32 rare = 2;</code>
     */
    public int getRare() {
      return rare_;
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private int name_;
    /**
     * <code>fixed32 name = 3;</code>
     */
    public int getName() {
      return name_;
    }

    public static final int DESC_FIELD_NUMBER = 4;
    private int desc_;
    /**
     * <code>fixed32 desc = 4;</code>
     */
    public int getDesc() {
      return desc_;
    }

    public static final int VALUE_FIELD_NUMBER = 5;
    private float value_;
    /**
     * <code>float value = 5;</code>
     */
    public float getValue() {
      return value_;
    }

    public static final int OPTIONAL_VALUE_FIELD_NUMBER = 6;
    private float optionalValue_;
    /**
     * <code>float optional_value = 6;</code>
     */
    public float getOptionalValue() {
      return optionalValue_;
    }

    public static final int PROB_FIELD_NUMBER = 7;
    private int prob_;
    /**
     * <code>uint32 prob = 7;</code>
     */
    public int getProb() {
      return prob_;
    }

    public static final int SHOP_GOLD_PROB_FIELD_NUMBER = 8;
    private int shopGoldProb_;
    /**
     * <code>uint32 shop_gold_prob = 8;</code>
     */
    public int getShopGoldProb() {
      return shopGoldProb_;
    }

    public static final int SHOP_GEM_PROB_FIELD_NUMBER = 9;
    private int shopGemProb_;
    /**
     * <code>uint32 shop_gem_prob = 9;</code>
     */
    public int getShopGemProb() {
      return shopGemProb_;
    }

    public static final int SHOP_SOCIAL_PROB_FIELD_NUMBER = 10;
    private int shopSocialProb_;
    /**
     * <code>uint32 shop_social_prob = 10;</code>
     */
    public int getShopSocialProb() {
      return shopSocialProb_;
    }

    public static final int SHOP_REWARD_PROB_FIELD_NUMBER = 11;
    private int shopRewardProb_;
    /**
     * <code>uint32 shop_reward_prob = 11;</code>
     */
    public int getShopRewardProb() {
      return shopRewardProb_;
    }

    public static final int UNEQUIP_MUL_FIELD_NUMBER = 12;
    private float unequipMul_;
    /**
     * <code>float unequip_mul = 12;</code>
     */
    public float getUnequipMul() {
      return unequipMul_;
    }

    public static final int SELL_MUL_FIELD_NUMBER = 13;
    private float sellMul_;
    /**
     * <code>float sell_mul = 13;</code>
     */
    public float getSellMul() {
      return sellMul_;
    }

    public static final int ADD_HP_FIELD_NUMBER = 14;
    private int addHp_;
    /**
     * <code>uint32 add_hp = 14;</code>
     */
    public int getAddHp() {
      return addHp_;
    }

    public static final int ADD_HP_PERCENT_FIELD_NUMBER = 15;
    private float addHpPercent_;
    /**
     * <code>float add_hp_percent = 15;</code>
     */
    public float getAddHpPercent() {
      return addHpPercent_;
    }

    public static final int ADD_HP_MAXUPGRADE_FIELD_NUMBER = 16;
    private int addHpMaxupgrade_;
    /**
     * <code>uint32 add_hp_maxupgrade = 16;</code>
     */
    public int getAddHpMaxupgrade() {
      return addHpMaxupgrade_;
    }

    public static final int ADD_HP_PERCENT_MAXUPGRADE_FIELD_NUMBER = 17;
    private float addHpPercentMaxupgrade_;
    /**
     * <code>float add_hp_percent_maxupgrade = 17;</code>
     */
    public float getAddHpPercentMaxupgrade() {
      return addHpPercentMaxupgrade_;
    }

    public static final int ADD_ATTACK_FIELD_NUMBER = 18;
    private int addAttack_;
    /**
     * <code>uint32 add_attack = 18;</code>
     */
    public int getAddAttack() {
      return addAttack_;
    }

    public static final int ADD_ATTACK_PERCENT_FIELD_NUMBER = 19;
    private float addAttackPercent_;
    /**
     * <code>float add_attack_percent = 19;</code>
     */
    public float getAddAttackPercent() {
      return addAttackPercent_;
    }

    public static final int ADD_ATTACK_MAXUPGRADE_FIELD_NUMBER = 20;
    private int addAttackMaxupgrade_;
    /**
     * <code>uint32 add_attack_maxupgrade = 20;</code>
     */
    public int getAddAttackMaxupgrade() {
      return addAttackMaxupgrade_;
    }

    public static final int ADD_ATTACK_PERCENT_MAXUPGRADE_FIELD_NUMBER = 21;
    private float addAttackPercentMaxupgrade_;
    /**
     * <code>float add_attack_percent_maxupgrade = 21;</code>
     */
    public float getAddAttackPercentMaxupgrade() {
      return addAttackPercentMaxupgrade_;
    }

    public static final int ADD_DEFENCE_FIELD_NUMBER = 22;
    private int addDefence_;
    /**
     * <code>uint32 add_defence = 22;</code>
     */
    public int getAddDefence() {
      return addDefence_;
    }

    public static final int ADD_DEFENCE_PERCENT_FIELD_NUMBER = 23;
    private float addDefencePercent_;
    /**
     * <code>float add_defence_percent = 23;</code>
     */
    public float getAddDefencePercent() {
      return addDefencePercent_;
    }

    public static final int ADD_DEFENCE_MAXUPGRADE_FIELD_NUMBER = 24;
    private int addDefenceMaxupgrade_;
    /**
     * <code>uint32 add_defence_maxupgrade = 24;</code>
     */
    public int getAddDefenceMaxupgrade() {
      return addDefenceMaxupgrade_;
    }

    public static final int ADD_DEFENCE_PERCENT_MAXUPGRADE_FIELD_NUMBER = 25;
    private float addDefencePercentMaxupgrade_;
    /**
     * <code>float add_defence_percent_maxupgrade = 25;</code>
     */
    public float getAddDefencePercentMaxupgrade() {
      return addDefencePercentMaxupgrade_;
    }

    public static final int ADD_HEAL_FIELD_NUMBER = 26;
    private int addHeal_;
    /**
     * <code>uint32 add_heal = 26;</code>
     */
    public int getAddHeal() {
      return addHeal_;
    }

    public static final int ADD_HEAL_PERCENT_FIELD_NUMBER = 27;
    private float addHealPercent_;
    /**
     * <code>float add_heal_percent = 27;</code>
     */
    public float getAddHealPercent() {
      return addHealPercent_;
    }

    public static final int ADD_HEAL_MAXUPGRADE_FIELD_NUMBER = 28;
    private int addHealMaxupgrade_;
    /**
     * <code>uint32 add_heal_maxupgrade = 28;</code>
     */
    public int getAddHealMaxupgrade() {
      return addHealMaxupgrade_;
    }

    public static final int ADD_HEAL_PERCENT_MAXUPGRADE_FIELD_NUMBER = 29;
    private float addHealPercentMaxupgrade_;
    /**
     * <code>float add_heal_percent_maxupgrade = 29;</code>
     */
    public float getAddHealPercentMaxupgrade() {
      return addHealPercentMaxupgrade_;
    }

    public static final int ADD_CRITICAL_DAMAGE_PERCENT_FIELD_NUMBER = 30;
    private float addCriticalDamagePercent_;
    /**
     * <code>float add_critical_damage_percent = 30;</code>
     */
    public float getAddCriticalDamagePercent() {
      return addCriticalDamagePercent_;
    }

    public static final int ADD_CRITICAL_PROB_PERCENT_FIELD_NUMBER = 31;
    private float addCriticalProbPercent_;
    /**
     * <code>float add_critical_prob_percent = 31;</code>
     */
    public float getAddCriticalProbPercent() {
      return addCriticalProbPercent_;
    }

    public static final int ADD_STATUS_EFFECT_RESISTANCE_PERCENT_FIELD_NUMBER = 32;
    private float addStatusEffectResistancePercent_;
    /**
     * <code>float add_status_effect_resistance_percent = 32;</code>
     */
    public float getAddStatusEffectResistancePercent() {
      return addStatusEffectResistancePercent_;
    }

    public static final int ADD_CRITICAL_DAMAGE_PERCENT_MAXUPGRADE_FIELD_NUMBER = 33;
    private float addCriticalDamagePercentMaxupgrade_;
    /**
     * <code>float add_critical_damage_percent_maxupgrade = 33;</code>
     */
    public float getAddCriticalDamagePercentMaxupgrade() {
      return addCriticalDamagePercentMaxupgrade_;
    }

    public static final int ADD_CRITICAL_PROB_PERCENT_MAXUPGRADE_FIELD_NUMBER = 34;
    private float addCriticalProbPercentMaxupgrade_;
    /**
     * <code>float add_critical_prob_percent_maxupgrade = 34;</code>
     */
    public float getAddCriticalProbPercentMaxupgrade() {
      return addCriticalProbPercentMaxupgrade_;
    }

    public static final int ADD_STATUS_EFFECT_RESISTANCE_PERCENT_MAXUPGRADE_FIELD_NUMBER = 35;
    private float addStatusEffectResistancePercentMaxupgrade_;
    /**
     * <code>float add_status_effect_resistance_percent_maxupgrade = 35;</code>
     */
    public float getAddStatusEffectResistancePercentMaxupgrade() {
      return addStatusEffectResistancePercentMaxupgrade_;
    }

    public static final int FAILURE_CORRECT_PROB_FIELD_NUMBER = 36;
    private float failureCorrectProb_;
    /**
     * <code>float failure_correct_prob = 36;</code>
     */
    public float getFailureCorrectProb() {
      return failureCorrectProb_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (uid_ != 0) {
        output.writeFixed32(1, uid_);
      }
      if (rare_ != 0) {
        output.writeUInt32(2, rare_);
      }
      if (name_ != 0) {
        output.writeFixed32(3, name_);
      }
      if (desc_ != 0) {
        output.writeFixed32(4, desc_);
      }
      if (value_ != 0F) {
        output.writeFloat(5, value_);
      }
      if (optionalValue_ != 0F) {
        output.writeFloat(6, optionalValue_);
      }
      if (prob_ != 0) {
        output.writeUInt32(7, prob_);
      }
      if (shopGoldProb_ != 0) {
        output.writeUInt32(8, shopGoldProb_);
      }
      if (shopGemProb_ != 0) {
        output.writeUInt32(9, shopGemProb_);
      }
      if (shopSocialProb_ != 0) {
        output.writeUInt32(10, shopSocialProb_);
      }
      if (shopRewardProb_ != 0) {
        output.writeUInt32(11, shopRewardProb_);
      }
      if (unequipMul_ != 0F) {
        output.writeFloat(12, unequipMul_);
      }
      if (sellMul_ != 0F) {
        output.writeFloat(13, sellMul_);
      }
      if (addHp_ != 0) {
        output.writeUInt32(14, addHp_);
      }
      if (addHpPercent_ != 0F) {
        output.writeFloat(15, addHpPercent_);
      }
      if (addHpMaxupgrade_ != 0) {
        output.writeUInt32(16, addHpMaxupgrade_);
      }
      if (addHpPercentMaxupgrade_ != 0F) {
        output.writeFloat(17, addHpPercentMaxupgrade_);
      }
      if (addAttack_ != 0) {
        output.writeUInt32(18, addAttack_);
      }
      if (addAttackPercent_ != 0F) {
        output.writeFloat(19, addAttackPercent_);
      }
      if (addAttackMaxupgrade_ != 0) {
        output.writeUInt32(20, addAttackMaxupgrade_);
      }
      if (addAttackPercentMaxupgrade_ != 0F) {
        output.writeFloat(21, addAttackPercentMaxupgrade_);
      }
      if (addDefence_ != 0) {
        output.writeUInt32(22, addDefence_);
      }
      if (addDefencePercent_ != 0F) {
        output.writeFloat(23, addDefencePercent_);
      }
      if (addDefenceMaxupgrade_ != 0) {
        output.writeUInt32(24, addDefenceMaxupgrade_);
      }
      if (addDefencePercentMaxupgrade_ != 0F) {
        output.writeFloat(25, addDefencePercentMaxupgrade_);
      }
      if (addHeal_ != 0) {
        output.writeUInt32(26, addHeal_);
      }
      if (addHealPercent_ != 0F) {
        output.writeFloat(27, addHealPercent_);
      }
      if (addHealMaxupgrade_ != 0) {
        output.writeUInt32(28, addHealMaxupgrade_);
      }
      if (addHealPercentMaxupgrade_ != 0F) {
        output.writeFloat(29, addHealPercentMaxupgrade_);
      }
      if (addCriticalDamagePercent_ != 0F) {
        output.writeFloat(30, addCriticalDamagePercent_);
      }
      if (addCriticalProbPercent_ != 0F) {
        output.writeFloat(31, addCriticalProbPercent_);
      }
      if (addStatusEffectResistancePercent_ != 0F) {
        output.writeFloat(32, addStatusEffectResistancePercent_);
      }
      if (addCriticalDamagePercentMaxupgrade_ != 0F) {
        output.writeFloat(33, addCriticalDamagePercentMaxupgrade_);
      }
      if (addCriticalProbPercentMaxupgrade_ != 0F) {
        output.writeFloat(34, addCriticalProbPercentMaxupgrade_);
      }
      if (addStatusEffectResistancePercentMaxupgrade_ != 0F) {
        output.writeFloat(35, addStatusEffectResistancePercentMaxupgrade_);
      }
      if (failureCorrectProb_ != 0F) {
        output.writeFloat(36, failureCorrectProb_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (uid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, uid_);
      }
      if (rare_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, rare_);
      }
      if (name_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, name_);
      }
      if (desc_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(4, desc_);
      }
      if (value_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, value_);
      }
      if (optionalValue_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, optionalValue_);
      }
      if (prob_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, prob_);
      }
      if (shopGoldProb_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, shopGoldProb_);
      }
      if (shopGemProb_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, shopGemProb_);
      }
      if (shopSocialProb_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, shopSocialProb_);
      }
      if (shopRewardProb_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, shopRewardProb_);
      }
      if (unequipMul_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, unequipMul_);
      }
      if (sellMul_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, sellMul_);
      }
      if (addHp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, addHp_);
      }
      if (addHpPercent_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, addHpPercent_);
      }
      if (addHpMaxupgrade_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, addHpMaxupgrade_);
      }
      if (addHpPercentMaxupgrade_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(17, addHpPercentMaxupgrade_);
      }
      if (addAttack_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, addAttack_);
      }
      if (addAttackPercent_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(19, addAttackPercent_);
      }
      if (addAttackMaxupgrade_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, addAttackMaxupgrade_);
      }
      if (addAttackPercentMaxupgrade_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(21, addAttackPercentMaxupgrade_);
      }
      if (addDefence_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(22, addDefence_);
      }
      if (addDefencePercent_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(23, addDefencePercent_);
      }
      if (addDefenceMaxupgrade_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(24, addDefenceMaxupgrade_);
      }
      if (addDefencePercentMaxupgrade_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(25, addDefencePercentMaxupgrade_);
      }
      if (addHeal_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(26, addHeal_);
      }
      if (addHealPercent_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(27, addHealPercent_);
      }
      if (addHealMaxupgrade_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(28, addHealMaxupgrade_);
      }
      if (addHealPercentMaxupgrade_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(29, addHealPercentMaxupgrade_);
      }
      if (addCriticalDamagePercent_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(30, addCriticalDamagePercent_);
      }
      if (addCriticalProbPercent_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(31, addCriticalProbPercent_);
      }
      if (addStatusEffectResistancePercent_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(32, addStatusEffectResistancePercent_);
      }
      if (addCriticalDamagePercentMaxupgrade_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(33, addCriticalDamagePercentMaxupgrade_);
      }
      if (addCriticalProbPercentMaxupgrade_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(34, addCriticalProbPercentMaxupgrade_);
      }
      if (addStatusEffectResistancePercentMaxupgrade_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(35, addStatusEffectResistancePercentMaxupgrade_);
      }
      if (failureCorrectProb_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(36, failureCorrectProb_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare)) {
        return super.equals(obj);
      }
      com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare other = (com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare) obj;

      boolean result = true;
      result = result && (getUid()
          == other.getUid());
      result = result && (getRare()
          == other.getRare());
      result = result && (getName()
          == other.getName());
      result = result && (getDesc()
          == other.getDesc());
      result = result && (
          java.lang.Float.floatToIntBits(getValue())
          == java.lang.Float.floatToIntBits(
              other.getValue()));
      result = result && (
          java.lang.Float.floatToIntBits(getOptionalValue())
          == java.lang.Float.floatToIntBits(
              other.getOptionalValue()));
      result = result && (getProb()
          == other.getProb());
      result = result && (getShopGoldProb()
          == other.getShopGoldProb());
      result = result && (getShopGemProb()
          == other.getShopGemProb());
      result = result && (getShopSocialProb()
          == other.getShopSocialProb());
      result = result && (getShopRewardProb()
          == other.getShopRewardProb());
      result = result && (
          java.lang.Float.floatToIntBits(getUnequipMul())
          == java.lang.Float.floatToIntBits(
              other.getUnequipMul()));
      result = result && (
          java.lang.Float.floatToIntBits(getSellMul())
          == java.lang.Float.floatToIntBits(
              other.getSellMul()));
      result = result && (getAddHp()
          == other.getAddHp());
      result = result && (
          java.lang.Float.floatToIntBits(getAddHpPercent())
          == java.lang.Float.floatToIntBits(
              other.getAddHpPercent()));
      result = result && (getAddHpMaxupgrade()
          == other.getAddHpMaxupgrade());
      result = result && (
          java.lang.Float.floatToIntBits(getAddHpPercentMaxupgrade())
          == java.lang.Float.floatToIntBits(
              other.getAddHpPercentMaxupgrade()));
      result = result && (getAddAttack()
          == other.getAddAttack());
      result = result && (
          java.lang.Float.floatToIntBits(getAddAttackPercent())
          == java.lang.Float.floatToIntBits(
              other.getAddAttackPercent()));
      result = result && (getAddAttackMaxupgrade()
          == other.getAddAttackMaxupgrade());
      result = result && (
          java.lang.Float.floatToIntBits(getAddAttackPercentMaxupgrade())
          == java.lang.Float.floatToIntBits(
              other.getAddAttackPercentMaxupgrade()));
      result = result && (getAddDefence()
          == other.getAddDefence());
      result = result && (
          java.lang.Float.floatToIntBits(getAddDefencePercent())
          == java.lang.Float.floatToIntBits(
              other.getAddDefencePercent()));
      result = result && (getAddDefenceMaxupgrade()
          == other.getAddDefenceMaxupgrade());
      result = result && (
          java.lang.Float.floatToIntBits(getAddDefencePercentMaxupgrade())
          == java.lang.Float.floatToIntBits(
              other.getAddDefencePercentMaxupgrade()));
      result = result && (getAddHeal()
          == other.getAddHeal());
      result = result && (
          java.lang.Float.floatToIntBits(getAddHealPercent())
          == java.lang.Float.floatToIntBits(
              other.getAddHealPercent()));
      result = result && (getAddHealMaxupgrade()
          == other.getAddHealMaxupgrade());
      result = result && (
          java.lang.Float.floatToIntBits(getAddHealPercentMaxupgrade())
          == java.lang.Float.floatToIntBits(
              other.getAddHealPercentMaxupgrade()));
      result = result && (
          java.lang.Float.floatToIntBits(getAddCriticalDamagePercent())
          == java.lang.Float.floatToIntBits(
              other.getAddCriticalDamagePercent()));
      result = result && (
          java.lang.Float.floatToIntBits(getAddCriticalProbPercent())
          == java.lang.Float.floatToIntBits(
              other.getAddCriticalProbPercent()));
      result = result && (
          java.lang.Float.floatToIntBits(getAddStatusEffectResistancePercent())
          == java.lang.Float.floatToIntBits(
              other.getAddStatusEffectResistancePercent()));
      result = result && (
          java.lang.Float.floatToIntBits(getAddCriticalDamagePercentMaxupgrade())
          == java.lang.Float.floatToIntBits(
              other.getAddCriticalDamagePercentMaxupgrade()));
      result = result && (
          java.lang.Float.floatToIntBits(getAddCriticalProbPercentMaxupgrade())
          == java.lang.Float.floatToIntBits(
              other.getAddCriticalProbPercentMaxupgrade()));
      result = result && (
          java.lang.Float.floatToIntBits(getAddStatusEffectResistancePercentMaxupgrade())
          == java.lang.Float.floatToIntBits(
              other.getAddStatusEffectResistancePercentMaxupgrade()));
      result = result && (
          java.lang.Float.floatToIntBits(getFailureCorrectProb())
          == java.lang.Float.floatToIntBits(
              other.getFailureCorrectProb()));
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + UID_FIELD_NUMBER;
      hash = (53 * hash) + getUid();
      hash = (37 * hash) + RARE_FIELD_NUMBER;
      hash = (53 * hash) + getRare();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName();
      hash = (37 * hash) + DESC_FIELD_NUMBER;
      hash = (53 * hash) + getDesc();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getValue());
      hash = (37 * hash) + OPTIONAL_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getOptionalValue());
      hash = (37 * hash) + PROB_FIELD_NUMBER;
      hash = (53 * hash) + getProb();
      hash = (37 * hash) + SHOP_GOLD_PROB_FIELD_NUMBER;
      hash = (53 * hash) + getShopGoldProb();
      hash = (37 * hash) + SHOP_GEM_PROB_FIELD_NUMBER;
      hash = (53 * hash) + getShopGemProb();
      hash = (37 * hash) + SHOP_SOCIAL_PROB_FIELD_NUMBER;
      hash = (53 * hash) + getShopSocialProb();
      hash = (37 * hash) + SHOP_REWARD_PROB_FIELD_NUMBER;
      hash = (53 * hash) + getShopRewardProb();
      hash = (37 * hash) + UNEQUIP_MUL_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getUnequipMul());
      hash = (37 * hash) + SELL_MUL_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getSellMul());
      hash = (37 * hash) + ADD_HP_FIELD_NUMBER;
      hash = (53 * hash) + getAddHp();
      hash = (37 * hash) + ADD_HP_PERCENT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAddHpPercent());
      hash = (37 * hash) + ADD_HP_MAXUPGRADE_FIELD_NUMBER;
      hash = (53 * hash) + getAddHpMaxupgrade();
      hash = (37 * hash) + ADD_HP_PERCENT_MAXUPGRADE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAddHpPercentMaxupgrade());
      hash = (37 * hash) + ADD_ATTACK_FIELD_NUMBER;
      hash = (53 * hash) + getAddAttack();
      hash = (37 * hash) + ADD_ATTACK_PERCENT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAddAttackPercent());
      hash = (37 * hash) + ADD_ATTACK_MAXUPGRADE_FIELD_NUMBER;
      hash = (53 * hash) + getAddAttackMaxupgrade();
      hash = (37 * hash) + ADD_ATTACK_PERCENT_MAXUPGRADE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAddAttackPercentMaxupgrade());
      hash = (37 * hash) + ADD_DEFENCE_FIELD_NUMBER;
      hash = (53 * hash) + getAddDefence();
      hash = (37 * hash) + ADD_DEFENCE_PERCENT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAddDefencePercent());
      hash = (37 * hash) + ADD_DEFENCE_MAXUPGRADE_FIELD_NUMBER;
      hash = (53 * hash) + getAddDefenceMaxupgrade();
      hash = (37 * hash) + ADD_DEFENCE_PERCENT_MAXUPGRADE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAddDefencePercentMaxupgrade());
      hash = (37 * hash) + ADD_HEAL_FIELD_NUMBER;
      hash = (53 * hash) + getAddHeal();
      hash = (37 * hash) + ADD_HEAL_PERCENT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAddHealPercent());
      hash = (37 * hash) + ADD_HEAL_MAXUPGRADE_FIELD_NUMBER;
      hash = (53 * hash) + getAddHealMaxupgrade();
      hash = (37 * hash) + ADD_HEAL_PERCENT_MAXUPGRADE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAddHealPercentMaxupgrade());
      hash = (37 * hash) + ADD_CRITICAL_DAMAGE_PERCENT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAddCriticalDamagePercent());
      hash = (37 * hash) + ADD_CRITICAL_PROB_PERCENT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAddCriticalProbPercent());
      hash = (37 * hash) + ADD_STATUS_EFFECT_RESISTANCE_PERCENT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAddStatusEffectResistancePercent());
      hash = (37 * hash) + ADD_CRITICAL_DAMAGE_PERCENT_MAXUPGRADE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAddCriticalDamagePercentMaxupgrade());
      hash = (37 * hash) + ADD_CRITICAL_PROB_PERCENT_MAXUPGRADE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAddCriticalProbPercentMaxupgrade());
      hash = (37 * hash) + ADD_STATUS_EFFECT_RESISTANCE_PERCENT_MAXUPGRADE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAddStatusEffectResistancePercentMaxupgrade());
      hash = (37 * hash) + FAILURE_CORRECT_PROB_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFailureCorrectProb());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code msggamedata.MsgRuneRare}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:msggamedata.MsgRuneRare)
        com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRareOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.felania.msldb.MsgRuneRareOuterClass.internal_static_msggamedata_MsgRuneRare_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.felania.msldb.MsgRuneRareOuterClass.internal_static_msggamedata_MsgRuneRare_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare.class, com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare.Builder.class);
      }

      // Construct using com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        uid_ = 0;

        rare_ = 0;

        name_ = 0;

        desc_ = 0;

        value_ = 0F;

        optionalValue_ = 0F;

        prob_ = 0;

        shopGoldProb_ = 0;

        shopGemProb_ = 0;

        shopSocialProb_ = 0;

        shopRewardProb_ = 0;

        unequipMul_ = 0F;

        sellMul_ = 0F;

        addHp_ = 0;

        addHpPercent_ = 0F;

        addHpMaxupgrade_ = 0;

        addHpPercentMaxupgrade_ = 0F;

        addAttack_ = 0;

        addAttackPercent_ = 0F;

        addAttackMaxupgrade_ = 0;

        addAttackPercentMaxupgrade_ = 0F;

        addDefence_ = 0;

        addDefencePercent_ = 0F;

        addDefenceMaxupgrade_ = 0;

        addDefencePercentMaxupgrade_ = 0F;

        addHeal_ = 0;

        addHealPercent_ = 0F;

        addHealMaxupgrade_ = 0;

        addHealPercentMaxupgrade_ = 0F;

        addCriticalDamagePercent_ = 0F;

        addCriticalProbPercent_ = 0F;

        addStatusEffectResistancePercent_ = 0F;

        addCriticalDamagePercentMaxupgrade_ = 0F;

        addCriticalProbPercentMaxupgrade_ = 0F;

        addStatusEffectResistancePercentMaxupgrade_ = 0F;

        failureCorrectProb_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.felania.msldb.MsgRuneRareOuterClass.internal_static_msggamedata_MsgRuneRare_descriptor;
      }

      public com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare getDefaultInstanceForType() {
        return com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare.getDefaultInstance();
      }

      public com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare build() {
        com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare buildPartial() {
        com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare result = new com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare(this);
        result.uid_ = uid_;
        result.rare_ = rare_;
        result.name_ = name_;
        result.desc_ = desc_;
        result.value_ = value_;
        result.optionalValue_ = optionalValue_;
        result.prob_ = prob_;
        result.shopGoldProb_ = shopGoldProb_;
        result.shopGemProb_ = shopGemProb_;
        result.shopSocialProb_ = shopSocialProb_;
        result.shopRewardProb_ = shopRewardProb_;
        result.unequipMul_ = unequipMul_;
        result.sellMul_ = sellMul_;
        result.addHp_ = addHp_;
        result.addHpPercent_ = addHpPercent_;
        result.addHpMaxupgrade_ = addHpMaxupgrade_;
        result.addHpPercentMaxupgrade_ = addHpPercentMaxupgrade_;
        result.addAttack_ = addAttack_;
        result.addAttackPercent_ = addAttackPercent_;
        result.addAttackMaxupgrade_ = addAttackMaxupgrade_;
        result.addAttackPercentMaxupgrade_ = addAttackPercentMaxupgrade_;
        result.addDefence_ = addDefence_;
        result.addDefencePercent_ = addDefencePercent_;
        result.addDefenceMaxupgrade_ = addDefenceMaxupgrade_;
        result.addDefencePercentMaxupgrade_ = addDefencePercentMaxupgrade_;
        result.addHeal_ = addHeal_;
        result.addHealPercent_ = addHealPercent_;
        result.addHealMaxupgrade_ = addHealMaxupgrade_;
        result.addHealPercentMaxupgrade_ = addHealPercentMaxupgrade_;
        result.addCriticalDamagePercent_ = addCriticalDamagePercent_;
        result.addCriticalProbPercent_ = addCriticalProbPercent_;
        result.addStatusEffectResistancePercent_ = addStatusEffectResistancePercent_;
        result.addCriticalDamagePercentMaxupgrade_ = addCriticalDamagePercentMaxupgrade_;
        result.addCriticalProbPercentMaxupgrade_ = addCriticalProbPercentMaxupgrade_;
        result.addStatusEffectResistancePercentMaxupgrade_ = addStatusEffectResistancePercentMaxupgrade_;
        result.failureCorrectProb_ = failureCorrectProb_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare) {
          return mergeFrom((com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare other) {
        if (other == com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare.getDefaultInstance()) return this;
        if (other.getUid() != 0) {
          setUid(other.getUid());
        }
        if (other.getRare() != 0) {
          setRare(other.getRare());
        }
        if (other.getName() != 0) {
          setName(other.getName());
        }
        if (other.getDesc() != 0) {
          setDesc(other.getDesc());
        }
        if (other.getValue() != 0F) {
          setValue(other.getValue());
        }
        if (other.getOptionalValue() != 0F) {
          setOptionalValue(other.getOptionalValue());
        }
        if (other.getProb() != 0) {
          setProb(other.getProb());
        }
        if (other.getShopGoldProb() != 0) {
          setShopGoldProb(other.getShopGoldProb());
        }
        if (other.getShopGemProb() != 0) {
          setShopGemProb(other.getShopGemProb());
        }
        if (other.getShopSocialProb() != 0) {
          setShopSocialProb(other.getShopSocialProb());
        }
        if (other.getShopRewardProb() != 0) {
          setShopRewardProb(other.getShopRewardProb());
        }
        if (other.getUnequipMul() != 0F) {
          setUnequipMul(other.getUnequipMul());
        }
        if (other.getSellMul() != 0F) {
          setSellMul(other.getSellMul());
        }
        if (other.getAddHp() != 0) {
          setAddHp(other.getAddHp());
        }
        if (other.getAddHpPercent() != 0F) {
          setAddHpPercent(other.getAddHpPercent());
        }
        if (other.getAddHpMaxupgrade() != 0) {
          setAddHpMaxupgrade(other.getAddHpMaxupgrade());
        }
        if (other.getAddHpPercentMaxupgrade() != 0F) {
          setAddHpPercentMaxupgrade(other.getAddHpPercentMaxupgrade());
        }
        if (other.getAddAttack() != 0) {
          setAddAttack(other.getAddAttack());
        }
        if (other.getAddAttackPercent() != 0F) {
          setAddAttackPercent(other.getAddAttackPercent());
        }
        if (other.getAddAttackMaxupgrade() != 0) {
          setAddAttackMaxupgrade(other.getAddAttackMaxupgrade());
        }
        if (other.getAddAttackPercentMaxupgrade() != 0F) {
          setAddAttackPercentMaxupgrade(other.getAddAttackPercentMaxupgrade());
        }
        if (other.getAddDefence() != 0) {
          setAddDefence(other.getAddDefence());
        }
        if (other.getAddDefencePercent() != 0F) {
          setAddDefencePercent(other.getAddDefencePercent());
        }
        if (other.getAddDefenceMaxupgrade() != 0) {
          setAddDefenceMaxupgrade(other.getAddDefenceMaxupgrade());
        }
        if (other.getAddDefencePercentMaxupgrade() != 0F) {
          setAddDefencePercentMaxupgrade(other.getAddDefencePercentMaxupgrade());
        }
        if (other.getAddHeal() != 0) {
          setAddHeal(other.getAddHeal());
        }
        if (other.getAddHealPercent() != 0F) {
          setAddHealPercent(other.getAddHealPercent());
        }
        if (other.getAddHealMaxupgrade() != 0) {
          setAddHealMaxupgrade(other.getAddHealMaxupgrade());
        }
        if (other.getAddHealPercentMaxupgrade() != 0F) {
          setAddHealPercentMaxupgrade(other.getAddHealPercentMaxupgrade());
        }
        if (other.getAddCriticalDamagePercent() != 0F) {
          setAddCriticalDamagePercent(other.getAddCriticalDamagePercent());
        }
        if (other.getAddCriticalProbPercent() != 0F) {
          setAddCriticalProbPercent(other.getAddCriticalProbPercent());
        }
        if (other.getAddStatusEffectResistancePercent() != 0F) {
          setAddStatusEffectResistancePercent(other.getAddStatusEffectResistancePercent());
        }
        if (other.getAddCriticalDamagePercentMaxupgrade() != 0F) {
          setAddCriticalDamagePercentMaxupgrade(other.getAddCriticalDamagePercentMaxupgrade());
        }
        if (other.getAddCriticalProbPercentMaxupgrade() != 0F) {
          setAddCriticalProbPercentMaxupgrade(other.getAddCriticalProbPercentMaxupgrade());
        }
        if (other.getAddStatusEffectResistancePercentMaxupgrade() != 0F) {
          setAddStatusEffectResistancePercentMaxupgrade(other.getAddStatusEffectResistancePercentMaxupgrade());
        }
        if (other.getFailureCorrectProb() != 0F) {
          setFailureCorrectProb(other.getFailureCorrectProb());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int uid_ ;
      /**
       * <code>fixed32 uid = 1;</code>
       */
      public int getUid() {
        return uid_;
      }
      /**
       * <code>fixed32 uid = 1;</code>
       */
      public Builder setUid(int value) {
        
        uid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed32 uid = 1;</code>
       */
      public Builder clearUid() {
        
        uid_ = 0;
        onChanged();
        return this;
      }

      private int rare_ ;
      /**
       * <code>uint32 rare = 2;</code>
       */
      public int getRare() {
        return rare_;
      }
      /**
       * <code>uint32 rare = 2;</code>
       */
      public Builder setRare(int value) {
        
        rare_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 rare = 2;</code>
       */
      public Builder clearRare() {
        
        rare_ = 0;
        onChanged();
        return this;
      }

      private int name_ ;
      /**
       * <code>fixed32 name = 3;</code>
       */
      public int getName() {
        return name_;
      }
      /**
       * <code>fixed32 name = 3;</code>
       */
      public Builder setName(int value) {
        
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed32 name = 3;</code>
       */
      public Builder clearName() {
        
        name_ = 0;
        onChanged();
        return this;
      }

      private int desc_ ;
      /**
       * <code>fixed32 desc = 4;</code>
       */
      public int getDesc() {
        return desc_;
      }
      /**
       * <code>fixed32 desc = 4;</code>
       */
      public Builder setDesc(int value) {
        
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed32 desc = 4;</code>
       */
      public Builder clearDesc() {
        
        desc_ = 0;
        onChanged();
        return this;
      }

      private float value_ ;
      /**
       * <code>float value = 5;</code>
       */
      public float getValue() {
        return value_;
      }
      /**
       * <code>float value = 5;</code>
       */
      public Builder setValue(float value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float value = 5;</code>
       */
      public Builder clearValue() {
        
        value_ = 0F;
        onChanged();
        return this;
      }

      private float optionalValue_ ;
      /**
       * <code>float optional_value = 6;</code>
       */
      public float getOptionalValue() {
        return optionalValue_;
      }
      /**
       * <code>float optional_value = 6;</code>
       */
      public Builder setOptionalValue(float value) {
        
        optionalValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float optional_value = 6;</code>
       */
      public Builder clearOptionalValue() {
        
        optionalValue_ = 0F;
        onChanged();
        return this;
      }

      private int prob_ ;
      /**
       * <code>uint32 prob = 7;</code>
       */
      public int getProb() {
        return prob_;
      }
      /**
       * <code>uint32 prob = 7;</code>
       */
      public Builder setProb(int value) {
        
        prob_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 prob = 7;</code>
       */
      public Builder clearProb() {
        
        prob_ = 0;
        onChanged();
        return this;
      }

      private int shopGoldProb_ ;
      /**
       * <code>uint32 shop_gold_prob = 8;</code>
       */
      public int getShopGoldProb() {
        return shopGoldProb_;
      }
      /**
       * <code>uint32 shop_gold_prob = 8;</code>
       */
      public Builder setShopGoldProb(int value) {
        
        shopGoldProb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 shop_gold_prob = 8;</code>
       */
      public Builder clearShopGoldProb() {
        
        shopGoldProb_ = 0;
        onChanged();
        return this;
      }

      private int shopGemProb_ ;
      /**
       * <code>uint32 shop_gem_prob = 9;</code>
       */
      public int getShopGemProb() {
        return shopGemProb_;
      }
      /**
       * <code>uint32 shop_gem_prob = 9;</code>
       */
      public Builder setShopGemProb(int value) {
        
        shopGemProb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 shop_gem_prob = 9;</code>
       */
      public Builder clearShopGemProb() {
        
        shopGemProb_ = 0;
        onChanged();
        return this;
      }

      private int shopSocialProb_ ;
      /**
       * <code>uint32 shop_social_prob = 10;</code>
       */
      public int getShopSocialProb() {
        return shopSocialProb_;
      }
      /**
       * <code>uint32 shop_social_prob = 10;</code>
       */
      public Builder setShopSocialProb(int value) {
        
        shopSocialProb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 shop_social_prob = 10;</code>
       */
      public Builder clearShopSocialProb() {
        
        shopSocialProb_ = 0;
        onChanged();
        return this;
      }

      private int shopRewardProb_ ;
      /**
       * <code>uint32 shop_reward_prob = 11;</code>
       */
      public int getShopRewardProb() {
        return shopRewardProb_;
      }
      /**
       * <code>uint32 shop_reward_prob = 11;</code>
       */
      public Builder setShopRewardProb(int value) {
        
        shopRewardProb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 shop_reward_prob = 11;</code>
       */
      public Builder clearShopRewardProb() {
        
        shopRewardProb_ = 0;
        onChanged();
        return this;
      }

      private float unequipMul_ ;
      /**
       * <code>float unequip_mul = 12;</code>
       */
      public float getUnequipMul() {
        return unequipMul_;
      }
      /**
       * <code>float unequip_mul = 12;</code>
       */
      public Builder setUnequipMul(float value) {
        
        unequipMul_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float unequip_mul = 12;</code>
       */
      public Builder clearUnequipMul() {
        
        unequipMul_ = 0F;
        onChanged();
        return this;
      }

      private float sellMul_ ;
      /**
       * <code>float sell_mul = 13;</code>
       */
      public float getSellMul() {
        return sellMul_;
      }
      /**
       * <code>float sell_mul = 13;</code>
       */
      public Builder setSellMul(float value) {
        
        sellMul_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float sell_mul = 13;</code>
       */
      public Builder clearSellMul() {
        
        sellMul_ = 0F;
        onChanged();
        return this;
      }

      private int addHp_ ;
      /**
       * <code>uint32 add_hp = 14;</code>
       */
      public int getAddHp() {
        return addHp_;
      }
      /**
       * <code>uint32 add_hp = 14;</code>
       */
      public Builder setAddHp(int value) {
        
        addHp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 add_hp = 14;</code>
       */
      public Builder clearAddHp() {
        
        addHp_ = 0;
        onChanged();
        return this;
      }

      private float addHpPercent_ ;
      /**
       * <code>float add_hp_percent = 15;</code>
       */
      public float getAddHpPercent() {
        return addHpPercent_;
      }
      /**
       * <code>float add_hp_percent = 15;</code>
       */
      public Builder setAddHpPercent(float value) {
        
        addHpPercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float add_hp_percent = 15;</code>
       */
      public Builder clearAddHpPercent() {
        
        addHpPercent_ = 0F;
        onChanged();
        return this;
      }

      private int addHpMaxupgrade_ ;
      /**
       * <code>uint32 add_hp_maxupgrade = 16;</code>
       */
      public int getAddHpMaxupgrade() {
        return addHpMaxupgrade_;
      }
      /**
       * <code>uint32 add_hp_maxupgrade = 16;</code>
       */
      public Builder setAddHpMaxupgrade(int value) {
        
        addHpMaxupgrade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 add_hp_maxupgrade = 16;</code>
       */
      public Builder clearAddHpMaxupgrade() {
        
        addHpMaxupgrade_ = 0;
        onChanged();
        return this;
      }

      private float addHpPercentMaxupgrade_ ;
      /**
       * <code>float add_hp_percent_maxupgrade = 17;</code>
       */
      public float getAddHpPercentMaxupgrade() {
        return addHpPercentMaxupgrade_;
      }
      /**
       * <code>float add_hp_percent_maxupgrade = 17;</code>
       */
      public Builder setAddHpPercentMaxupgrade(float value) {
        
        addHpPercentMaxupgrade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float add_hp_percent_maxupgrade = 17;</code>
       */
      public Builder clearAddHpPercentMaxupgrade() {
        
        addHpPercentMaxupgrade_ = 0F;
        onChanged();
        return this;
      }

      private int addAttack_ ;
      /**
       * <code>uint32 add_attack = 18;</code>
       */
      public int getAddAttack() {
        return addAttack_;
      }
      /**
       * <code>uint32 add_attack = 18;</code>
       */
      public Builder setAddAttack(int value) {
        
        addAttack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 add_attack = 18;</code>
       */
      public Builder clearAddAttack() {
        
        addAttack_ = 0;
        onChanged();
        return this;
      }

      private float addAttackPercent_ ;
      /**
       * <code>float add_attack_percent = 19;</code>
       */
      public float getAddAttackPercent() {
        return addAttackPercent_;
      }
      /**
       * <code>float add_attack_percent = 19;</code>
       */
      public Builder setAddAttackPercent(float value) {
        
        addAttackPercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float add_attack_percent = 19;</code>
       */
      public Builder clearAddAttackPercent() {
        
        addAttackPercent_ = 0F;
        onChanged();
        return this;
      }

      private int addAttackMaxupgrade_ ;
      /**
       * <code>uint32 add_attack_maxupgrade = 20;</code>
       */
      public int getAddAttackMaxupgrade() {
        return addAttackMaxupgrade_;
      }
      /**
       * <code>uint32 add_attack_maxupgrade = 20;</code>
       */
      public Builder setAddAttackMaxupgrade(int value) {
        
        addAttackMaxupgrade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 add_attack_maxupgrade = 20;</code>
       */
      public Builder clearAddAttackMaxupgrade() {
        
        addAttackMaxupgrade_ = 0;
        onChanged();
        return this;
      }

      private float addAttackPercentMaxupgrade_ ;
      /**
       * <code>float add_attack_percent_maxupgrade = 21;</code>
       */
      public float getAddAttackPercentMaxupgrade() {
        return addAttackPercentMaxupgrade_;
      }
      /**
       * <code>float add_attack_percent_maxupgrade = 21;</code>
       */
      public Builder setAddAttackPercentMaxupgrade(float value) {
        
        addAttackPercentMaxupgrade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float add_attack_percent_maxupgrade = 21;</code>
       */
      public Builder clearAddAttackPercentMaxupgrade() {
        
        addAttackPercentMaxupgrade_ = 0F;
        onChanged();
        return this;
      }

      private int addDefence_ ;
      /**
       * <code>uint32 add_defence = 22;</code>
       */
      public int getAddDefence() {
        return addDefence_;
      }
      /**
       * <code>uint32 add_defence = 22;</code>
       */
      public Builder setAddDefence(int value) {
        
        addDefence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 add_defence = 22;</code>
       */
      public Builder clearAddDefence() {
        
        addDefence_ = 0;
        onChanged();
        return this;
      }

      private float addDefencePercent_ ;
      /**
       * <code>float add_defence_percent = 23;</code>
       */
      public float getAddDefencePercent() {
        return addDefencePercent_;
      }
      /**
       * <code>float add_defence_percent = 23;</code>
       */
      public Builder setAddDefencePercent(float value) {
        
        addDefencePercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float add_defence_percent = 23;</code>
       */
      public Builder clearAddDefencePercent() {
        
        addDefencePercent_ = 0F;
        onChanged();
        return this;
      }

      private int addDefenceMaxupgrade_ ;
      /**
       * <code>uint32 add_defence_maxupgrade = 24;</code>
       */
      public int getAddDefenceMaxupgrade() {
        return addDefenceMaxupgrade_;
      }
      /**
       * <code>uint32 add_defence_maxupgrade = 24;</code>
       */
      public Builder setAddDefenceMaxupgrade(int value) {
        
        addDefenceMaxupgrade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 add_defence_maxupgrade = 24;</code>
       */
      public Builder clearAddDefenceMaxupgrade() {
        
        addDefenceMaxupgrade_ = 0;
        onChanged();
        return this;
      }

      private float addDefencePercentMaxupgrade_ ;
      /**
       * <code>float add_defence_percent_maxupgrade = 25;</code>
       */
      public float getAddDefencePercentMaxupgrade() {
        return addDefencePercentMaxupgrade_;
      }
      /**
       * <code>float add_defence_percent_maxupgrade = 25;</code>
       */
      public Builder setAddDefencePercentMaxupgrade(float value) {
        
        addDefencePercentMaxupgrade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float add_defence_percent_maxupgrade = 25;</code>
       */
      public Builder clearAddDefencePercentMaxupgrade() {
        
        addDefencePercentMaxupgrade_ = 0F;
        onChanged();
        return this;
      }

      private int addHeal_ ;
      /**
       * <code>uint32 add_heal = 26;</code>
       */
      public int getAddHeal() {
        return addHeal_;
      }
      /**
       * <code>uint32 add_heal = 26;</code>
       */
      public Builder setAddHeal(int value) {
        
        addHeal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 add_heal = 26;</code>
       */
      public Builder clearAddHeal() {
        
        addHeal_ = 0;
        onChanged();
        return this;
      }

      private float addHealPercent_ ;
      /**
       * <code>float add_heal_percent = 27;</code>
       */
      public float getAddHealPercent() {
        return addHealPercent_;
      }
      /**
       * <code>float add_heal_percent = 27;</code>
       */
      public Builder setAddHealPercent(float value) {
        
        addHealPercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float add_heal_percent = 27;</code>
       */
      public Builder clearAddHealPercent() {
        
        addHealPercent_ = 0F;
        onChanged();
        return this;
      }

      private int addHealMaxupgrade_ ;
      /**
       * <code>uint32 add_heal_maxupgrade = 28;</code>
       */
      public int getAddHealMaxupgrade() {
        return addHealMaxupgrade_;
      }
      /**
       * <code>uint32 add_heal_maxupgrade = 28;</code>
       */
      public Builder setAddHealMaxupgrade(int value) {
        
        addHealMaxupgrade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 add_heal_maxupgrade = 28;</code>
       */
      public Builder clearAddHealMaxupgrade() {
        
        addHealMaxupgrade_ = 0;
        onChanged();
        return this;
      }

      private float addHealPercentMaxupgrade_ ;
      /**
       * <code>float add_heal_percent_maxupgrade = 29;</code>
       */
      public float getAddHealPercentMaxupgrade() {
        return addHealPercentMaxupgrade_;
      }
      /**
       * <code>float add_heal_percent_maxupgrade = 29;</code>
       */
      public Builder setAddHealPercentMaxupgrade(float value) {
        
        addHealPercentMaxupgrade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float add_heal_percent_maxupgrade = 29;</code>
       */
      public Builder clearAddHealPercentMaxupgrade() {
        
        addHealPercentMaxupgrade_ = 0F;
        onChanged();
        return this;
      }

      private float addCriticalDamagePercent_ ;
      /**
       * <code>float add_critical_damage_percent = 30;</code>
       */
      public float getAddCriticalDamagePercent() {
        return addCriticalDamagePercent_;
      }
      /**
       * <code>float add_critical_damage_percent = 30;</code>
       */
      public Builder setAddCriticalDamagePercent(float value) {
        
        addCriticalDamagePercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float add_critical_damage_percent = 30;</code>
       */
      public Builder clearAddCriticalDamagePercent() {
        
        addCriticalDamagePercent_ = 0F;
        onChanged();
        return this;
      }

      private float addCriticalProbPercent_ ;
      /**
       * <code>float add_critical_prob_percent = 31;</code>
       */
      public float getAddCriticalProbPercent() {
        return addCriticalProbPercent_;
      }
      /**
       * <code>float add_critical_prob_percent = 31;</code>
       */
      public Builder setAddCriticalProbPercent(float value) {
        
        addCriticalProbPercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float add_critical_prob_percent = 31;</code>
       */
      public Builder clearAddCriticalProbPercent() {
        
        addCriticalProbPercent_ = 0F;
        onChanged();
        return this;
      }

      private float addStatusEffectResistancePercent_ ;
      /**
       * <code>float add_status_effect_resistance_percent = 32;</code>
       */
      public float getAddStatusEffectResistancePercent() {
        return addStatusEffectResistancePercent_;
      }
      /**
       * <code>float add_status_effect_resistance_percent = 32;</code>
       */
      public Builder setAddStatusEffectResistancePercent(float value) {
        
        addStatusEffectResistancePercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float add_status_effect_resistance_percent = 32;</code>
       */
      public Builder clearAddStatusEffectResistancePercent() {
        
        addStatusEffectResistancePercent_ = 0F;
        onChanged();
        return this;
      }

      private float addCriticalDamagePercentMaxupgrade_ ;
      /**
       * <code>float add_critical_damage_percent_maxupgrade = 33;</code>
       */
      public float getAddCriticalDamagePercentMaxupgrade() {
        return addCriticalDamagePercentMaxupgrade_;
      }
      /**
       * <code>float add_critical_damage_percent_maxupgrade = 33;</code>
       */
      public Builder setAddCriticalDamagePercentMaxupgrade(float value) {
        
        addCriticalDamagePercentMaxupgrade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float add_critical_damage_percent_maxupgrade = 33;</code>
       */
      public Builder clearAddCriticalDamagePercentMaxupgrade() {
        
        addCriticalDamagePercentMaxupgrade_ = 0F;
        onChanged();
        return this;
      }

      private float addCriticalProbPercentMaxupgrade_ ;
      /**
       * <code>float add_critical_prob_percent_maxupgrade = 34;</code>
       */
      public float getAddCriticalProbPercentMaxupgrade() {
        return addCriticalProbPercentMaxupgrade_;
      }
      /**
       * <code>float add_critical_prob_percent_maxupgrade = 34;</code>
       */
      public Builder setAddCriticalProbPercentMaxupgrade(float value) {
        
        addCriticalProbPercentMaxupgrade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float add_critical_prob_percent_maxupgrade = 34;</code>
       */
      public Builder clearAddCriticalProbPercentMaxupgrade() {
        
        addCriticalProbPercentMaxupgrade_ = 0F;
        onChanged();
        return this;
      }

      private float addStatusEffectResistancePercentMaxupgrade_ ;
      /**
       * <code>float add_status_effect_resistance_percent_maxupgrade = 35;</code>
       */
      public float getAddStatusEffectResistancePercentMaxupgrade() {
        return addStatusEffectResistancePercentMaxupgrade_;
      }
      /**
       * <code>float add_status_effect_resistance_percent_maxupgrade = 35;</code>
       */
      public Builder setAddStatusEffectResistancePercentMaxupgrade(float value) {
        
        addStatusEffectResistancePercentMaxupgrade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float add_status_effect_resistance_percent_maxupgrade = 35;</code>
       */
      public Builder clearAddStatusEffectResistancePercentMaxupgrade() {
        
        addStatusEffectResistancePercentMaxupgrade_ = 0F;
        onChanged();
        return this;
      }

      private float failureCorrectProb_ ;
      /**
       * <code>float failure_correct_prob = 36;</code>
       */
      public float getFailureCorrectProb() {
        return failureCorrectProb_;
      }
      /**
       * <code>float failure_correct_prob = 36;</code>
       */
      public Builder setFailureCorrectProb(float value) {
        
        failureCorrectProb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float failure_correct_prob = 36;</code>
       */
      public Builder clearFailureCorrectProb() {
        
        failureCorrectProb_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:msggamedata.MsgRuneRare)
    }

    // @@protoc_insertion_point(class_scope:msggamedata.MsgRuneRare)
    private static final com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare();
    }

    public static com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgRuneRare>
        PARSER = new com.google.protobuf.AbstractParser<MsgRuneRare>() {
      public MsgRuneRare parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgRuneRare(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgRuneRare> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MsgRuneRare> getParserForType() {
      return PARSER;
    }

    public com.felania.msldb.MsgRuneRareOuterClass.MsgRuneRare getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_msggamedata_MsgRuneRare_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_msggamedata_MsgRuneRare_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021MsgRuneRare.proto\022\013msggamedata\"\362\007\n\013Msg" +
      "RuneRare\022\013\n\003uid\030\001 \001(\007\022\014\n\004rare\030\002 \001(\r\022\014\n\004n" +
      "ame\030\003 \001(\007\022\014\n\004desc\030\004 \001(\007\022\r\n\005value\030\005 \001(\002\022\026" +
      "\n\016optional_value\030\006 \001(\002\022\014\n\004prob\030\007 \001(\r\022\026\n\016" +
      "shop_gold_prob\030\010 \001(\r\022\025\n\rshop_gem_prob\030\t " +
      "\001(\r\022\030\n\020shop_social_prob\030\n \001(\r\022\030\n\020shop_re" +
      "ward_prob\030\013 \001(\r\022\023\n\013unequip_mul\030\014 \001(\002\022\020\n\010" +
      "sell_mul\030\r \001(\002\022\016\n\006add_hp\030\016 \001(\r\022\026\n\016add_hp" +
      "_percent\030\017 \001(\002\022\031\n\021add_hp_maxupgrade\030\020 \001(" +
      "\r\022!\n\031add_hp_percent_maxupgrade\030\021 \001(\002\022\022\n\n" +
      "add_attack\030\022 \001(\r\022\032\n\022add_attack_percent\030\023" +
      " \001(\002\022\035\n\025add_attack_maxupgrade\030\024 \001(\r\022%\n\035a" +
      "dd_attack_percent_maxupgrade\030\025 \001(\002\022\023\n\013ad" +
      "d_defence\030\026 \001(\r\022\033\n\023add_defence_percent\030\027" +
      " \001(\002\022\036\n\026add_defence_maxupgrade\030\030 \001(\r\022&\n\036" +
      "add_defence_percent_maxupgrade\030\031 \001(\002\022\020\n\010" +
      "add_heal\030\032 \001(\r\022\030\n\020add_heal_percent\030\033 \001(\002" +
      "\022\033\n\023add_heal_maxupgrade\030\034 \001(\r\022#\n\033add_hea" +
      "l_percent_maxupgrade\030\035 \001(\002\022#\n\033add_critic" +
      "al_damage_percent\030\036 \001(\002\022!\n\031add_critical_" +
      "prob_percent\030\037 \001(\002\022,\n$add_status_effect_" +
      "resistance_percent\030  \001(\002\022.\n&add_critical" +
      "_damage_percent_maxupgrade\030! \001(\002\022,\n$add_" +
      "critical_prob_percent_maxupgrade\030\" \001(\002\0227" +
      "\n/add_status_effect_resistance_percent_m" +
      "axupgrade\030# \001(\002\022\034\n\024failure_correct_prob\030" +
      "$ \001(\002B\023\n\021com.felania.msldbb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_msggamedata_MsgRuneRare_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_msggamedata_MsgRuneRare_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_msggamedata_MsgRuneRare_descriptor,
        new java.lang.String[] { "Uid", "Rare", "Name", "Desc", "Value", "OptionalValue", "Prob", "ShopGoldProb", "ShopGemProb", "ShopSocialProb", "ShopRewardProb", "UnequipMul", "SellMul", "AddHp", "AddHpPercent", "AddHpMaxupgrade", "AddHpPercentMaxupgrade", "AddAttack", "AddAttackPercent", "AddAttackMaxupgrade", "AddAttackPercentMaxupgrade", "AddDefence", "AddDefencePercent", "AddDefenceMaxupgrade", "AddDefencePercentMaxupgrade", "AddHeal", "AddHealPercent", "AddHealMaxupgrade", "AddHealPercentMaxupgrade", "AddCriticalDamagePercent", "AddCriticalProbPercent", "AddStatusEffectResistancePercent", "AddCriticalDamagePercentMaxupgrade", "AddCriticalProbPercentMaxupgrade", "AddStatusEffectResistancePercentMaxupgrade", "FailureCorrectProb", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
