// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RuneSetEffectType.proto

package com.felania.msldb;

public final class RuneSetEffectTypeOuterClass {
  private RuneSetEffectTypeOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code msggamedata.RuneSetEffectType}
   */
  public enum RuneSetEffectType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RSET_None = 0;</code>
     */
    RSET_None(0),
    /**
     * <code>RSET_AddAttackPercent = 1;</code>
     */
    RSET_AddAttackPercent(1),
    /**
     * <code>RSET_AddDefencePercent = 2;</code>
     */
    RSET_AddDefencePercent(2),
    /**
     * <code>RSET_AddHealPercent = 3;</code>
     */
    RSET_AddHealPercent(3),
    /**
     * <code>RSET_AddHpPercent = 4;</code>
     */
    RSET_AddHpPercent(4),
    /**
     * <code>RSET_AddCriticalDamagePercent = 5;</code>
     */
    RSET_AddCriticalDamagePercent(5),
    /**
     * <code>RSET_AddCriticalProbPercent = 6;</code>
     */
    RSET_AddCriticalProbPercent(6),
    /**
     * <code>RSET_AddStatusEffectResistancePercent = 7;</code>
     */
    RSET_AddStatusEffectResistancePercent(7),
    /**
     * <code>RSET_AddAttack = 8;</code>
     */
    RSET_AddAttack(8),
    /**
     * <code>RSET_AddDefence = 9;</code>
     */
    RSET_AddDefence(9),
    /**
     * <code>RSET_AddHeal = 10;</code>
     */
    RSET_AddHeal(10),
    /**
     * <code>RSET_AddHp = 11;</code>
     */
    RSET_AddHp(11),
    /**
     * <code>RSET_HealMyHp = 12;</code>
     */
    RSET_HealMyHp(12),
    /**
     * <code>RSET_HealMyMp = 13;</code>
     */
    RSET_HealMyMp(13),
    /**
     * <code>RSET_IncHp = 14;</code>
     */
    RSET_IncHp(14),
    /**
     * <code>RSET_IncMp = 15;</code>
     */
    RSET_IncMp(15),
    /**
     * <code>RSET_Shield = 16;</code>
     */
    RSET_Shield(16),
    /**
     * <code>RSET_Stun = 17;</code>
     */
    RSET_Stun(17),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>RSET_None = 0;</code>
     */
    public static final int RSET_None_VALUE = 0;
    /**
     * <code>RSET_AddAttackPercent = 1;</code>
     */
    public static final int RSET_AddAttackPercent_VALUE = 1;
    /**
     * <code>RSET_AddDefencePercent = 2;</code>
     */
    public static final int RSET_AddDefencePercent_VALUE = 2;
    /**
     * <code>RSET_AddHealPercent = 3;</code>
     */
    public static final int RSET_AddHealPercent_VALUE = 3;
    /**
     * <code>RSET_AddHpPercent = 4;</code>
     */
    public static final int RSET_AddHpPercent_VALUE = 4;
    /**
     * <code>RSET_AddCriticalDamagePercent = 5;</code>
     */
    public static final int RSET_AddCriticalDamagePercent_VALUE = 5;
    /**
     * <code>RSET_AddCriticalProbPercent = 6;</code>
     */
    public static final int RSET_AddCriticalProbPercent_VALUE = 6;
    /**
     * <code>RSET_AddStatusEffectResistancePercent = 7;</code>
     */
    public static final int RSET_AddStatusEffectResistancePercent_VALUE = 7;
    /**
     * <code>RSET_AddAttack = 8;</code>
     */
    public static final int RSET_AddAttack_VALUE = 8;
    /**
     * <code>RSET_AddDefence = 9;</code>
     */
    public static final int RSET_AddDefence_VALUE = 9;
    /**
     * <code>RSET_AddHeal = 10;</code>
     */
    public static final int RSET_AddHeal_VALUE = 10;
    /**
     * <code>RSET_AddHp = 11;</code>
     */
    public static final int RSET_AddHp_VALUE = 11;
    /**
     * <code>RSET_HealMyHp = 12;</code>
     */
    public static final int RSET_HealMyHp_VALUE = 12;
    /**
     * <code>RSET_HealMyMp = 13;</code>
     */
    public static final int RSET_HealMyMp_VALUE = 13;
    /**
     * <code>RSET_IncHp = 14;</code>
     */
    public static final int RSET_IncHp_VALUE = 14;
    /**
     * <code>RSET_IncMp = 15;</code>
     */
    public static final int RSET_IncMp_VALUE = 15;
    /**
     * <code>RSET_Shield = 16;</code>
     */
    public static final int RSET_Shield_VALUE = 16;
    /**
     * <code>RSET_Stun = 17;</code>
     */
    public static final int RSET_Stun_VALUE = 17;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RuneSetEffectType valueOf(int value) {
      return forNumber(value);
    }

    public static RuneSetEffectType forNumber(int value) {
      switch (value) {
        case 0: return RSET_None;
        case 1: return RSET_AddAttackPercent;
        case 2: return RSET_AddDefencePercent;
        case 3: return RSET_AddHealPercent;
        case 4: return RSET_AddHpPercent;
        case 5: return RSET_AddCriticalDamagePercent;
        case 6: return RSET_AddCriticalProbPercent;
        case 7: return RSET_AddStatusEffectResistancePercent;
        case 8: return RSET_AddAttack;
        case 9: return RSET_AddDefence;
        case 10: return RSET_AddHeal;
        case 11: return RSET_AddHp;
        case 12: return RSET_HealMyHp;
        case 13: return RSET_HealMyMp;
        case 14: return RSET_IncHp;
        case 15: return RSET_IncMp;
        case 16: return RSET_Shield;
        case 17: return RSET_Stun;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RuneSetEffectType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RuneSetEffectType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RuneSetEffectType>() {
            public RuneSetEffectType findValueByNumber(int number) {
              return RuneSetEffectType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.felania.msldb.RuneSetEffectTypeOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final RuneSetEffectType[] VALUES = values();

    public static RuneSetEffectType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RuneSetEffectType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:msggamedata.RuneSetEffectType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027RuneSetEffectType.proto\022\013msggamedata*\251" +
      "\003\n\021RuneSetEffectType\022\r\n\tRSET_None\020\000\022\031\n\025R" +
      "SET_AddAttackPercent\020\001\022\032\n\026RSET_AddDefenc" +
      "ePercent\020\002\022\027\n\023RSET_AddHealPercent\020\003\022\025\n\021R" +
      "SET_AddHpPercent\020\004\022!\n\035RSET_AddCriticalDa" +
      "magePercent\020\005\022\037\n\033RSET_AddCriticalProbPer" +
      "cent\020\006\022)\n%RSET_AddStatusEffectResistance" +
      "Percent\020\007\022\022\n\016RSET_AddAttack\020\010\022\023\n\017RSET_Ad" +
      "dDefence\020\t\022\020\n\014RSET_AddHeal\020\n\022\016\n\nRSET_Add" +
      "Hp\020\013\022\021\n\rRSET_HealMyHp\020\014\022\021\n\rRSET_HealMyMp",
      "\020\r\022\016\n\nRSET_IncHp\020\016\022\016\n\nRSET_IncMp\020\017\022\017\n\013RS" +
      "ET_Shield\020\020\022\r\n\tRSET_Stun\020\021B\023\n\021com.felani" +
      "a.msldbb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
