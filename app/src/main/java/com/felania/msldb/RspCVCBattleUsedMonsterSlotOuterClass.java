// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RspCVCBattleUsedMonsterSlot.proto

package com.felania.msldb;

public final class RspCVCBattleUsedMonsterSlotOuterClass {
  private RspCVCBattleUsedMonsterSlotOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RspCVCBattleUsedMonsterSlotOrBuilder extends
      // @@protoc_insertion_point(interface_extends:msggamedata.RspCVCBattleUsedMonsterSlot)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 battle_id = 1;</code>
     */
    int getBattleId();

    /**
     * <code>.msggamedata.CVCBattleUsedMonsterSlotData attacker_monster_slot = 2;</code>
     */
    boolean hasAttackerMonsterSlot();
    /**
     * <code>.msggamedata.CVCBattleUsedMonsterSlotData attacker_monster_slot = 2;</code>
     */
    com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData getAttackerMonsterSlot();
    /**
     * <code>.msggamedata.CVCBattleUsedMonsterSlotData attacker_monster_slot = 2;</code>
     */
    com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotDataOrBuilder getAttackerMonsterSlotOrBuilder();

    /**
     * <code>.msggamedata.CVCBattleUsedMonsterSlotData defender_monster_slot = 3;</code>
     */
    boolean hasDefenderMonsterSlot();
    /**
     * <code>.msggamedata.CVCBattleUsedMonsterSlotData defender_monster_slot = 3;</code>
     */
    com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData getDefenderMonsterSlot();
    /**
     * <code>.msggamedata.CVCBattleUsedMonsterSlotData defender_monster_slot = 3;</code>
     */
    com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotDataOrBuilder getDefenderMonsterSlotOrBuilder();
  }
  /**
   * Protobuf type {@code msggamedata.RspCVCBattleUsedMonsterSlot}
   */
  public  static final class RspCVCBattleUsedMonsterSlot extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:msggamedata.RspCVCBattleUsedMonsterSlot)
      RspCVCBattleUsedMonsterSlotOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RspCVCBattleUsedMonsterSlot.newBuilder() to construct.
    private RspCVCBattleUsedMonsterSlot(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RspCVCBattleUsedMonsterSlot() {
      battleId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RspCVCBattleUsedMonsterSlot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              battleId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.Builder subBuilder = null;
              if (attackerMonsterSlot_ != null) {
                subBuilder = attackerMonsterSlot_.toBuilder();
              }
              attackerMonsterSlot_ = input.readMessage(com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(attackerMonsterSlot_);
                attackerMonsterSlot_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.Builder subBuilder = null;
              if (defenderMonsterSlot_ != null) {
                subBuilder = defenderMonsterSlot_.toBuilder();
              }
              defenderMonsterSlot_ = input.readMessage(com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(defenderMonsterSlot_);
                defenderMonsterSlot_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.internal_static_msggamedata_RspCVCBattleUsedMonsterSlot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.internal_static_msggamedata_RspCVCBattleUsedMonsterSlot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot.class, com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot.Builder.class);
    }

    public static final int BATTLE_ID_FIELD_NUMBER = 1;
    private int battleId_;
    /**
     * <code>uint32 battle_id = 1;</code>
     */
    public int getBattleId() {
      return battleId_;
    }

    public static final int ATTACKER_MONSTER_SLOT_FIELD_NUMBER = 2;
    private com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData attackerMonsterSlot_;
    /**
     * <code>.msggamedata.CVCBattleUsedMonsterSlotData attacker_monster_slot = 2;</code>
     */
    public boolean hasAttackerMonsterSlot() {
      return attackerMonsterSlot_ != null;
    }
    /**
     * <code>.msggamedata.CVCBattleUsedMonsterSlotData attacker_monster_slot = 2;</code>
     */
    public com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData getAttackerMonsterSlot() {
      return attackerMonsterSlot_ == null ? com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.getDefaultInstance() : attackerMonsterSlot_;
    }
    /**
     * <code>.msggamedata.CVCBattleUsedMonsterSlotData attacker_monster_slot = 2;</code>
     */
    public com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotDataOrBuilder getAttackerMonsterSlotOrBuilder() {
      return getAttackerMonsterSlot();
    }

    public static final int DEFENDER_MONSTER_SLOT_FIELD_NUMBER = 3;
    private com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData defenderMonsterSlot_;
    /**
     * <code>.msggamedata.CVCBattleUsedMonsterSlotData defender_monster_slot = 3;</code>
     */
    public boolean hasDefenderMonsterSlot() {
      return defenderMonsterSlot_ != null;
    }
    /**
     * <code>.msggamedata.CVCBattleUsedMonsterSlotData defender_monster_slot = 3;</code>
     */
    public com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData getDefenderMonsterSlot() {
      return defenderMonsterSlot_ == null ? com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.getDefaultInstance() : defenderMonsterSlot_;
    }
    /**
     * <code>.msggamedata.CVCBattleUsedMonsterSlotData defender_monster_slot = 3;</code>
     */
    public com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotDataOrBuilder getDefenderMonsterSlotOrBuilder() {
      return getDefenderMonsterSlot();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (battleId_ != 0) {
        output.writeUInt32(1, battleId_);
      }
      if (attackerMonsterSlot_ != null) {
        output.writeMessage(2, getAttackerMonsterSlot());
      }
      if (defenderMonsterSlot_ != null) {
        output.writeMessage(3, getDefenderMonsterSlot());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (battleId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, battleId_);
      }
      if (attackerMonsterSlot_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAttackerMonsterSlot());
      }
      if (defenderMonsterSlot_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDefenderMonsterSlot());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot)) {
        return super.equals(obj);
      }
      com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot other = (com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot) obj;

      boolean result = true;
      result = result && (getBattleId()
          == other.getBattleId());
      result = result && (hasAttackerMonsterSlot() == other.hasAttackerMonsterSlot());
      if (hasAttackerMonsterSlot()) {
        result = result && getAttackerMonsterSlot()
            .equals(other.getAttackerMonsterSlot());
      }
      result = result && (hasDefenderMonsterSlot() == other.hasDefenderMonsterSlot());
      if (hasDefenderMonsterSlot()) {
        result = result && getDefenderMonsterSlot()
            .equals(other.getDefenderMonsterSlot());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BATTLE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getBattleId();
      if (hasAttackerMonsterSlot()) {
        hash = (37 * hash) + ATTACKER_MONSTER_SLOT_FIELD_NUMBER;
        hash = (53 * hash) + getAttackerMonsterSlot().hashCode();
      }
      if (hasDefenderMonsterSlot()) {
        hash = (37 * hash) + DEFENDER_MONSTER_SLOT_FIELD_NUMBER;
        hash = (53 * hash) + getDefenderMonsterSlot().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code msggamedata.RspCVCBattleUsedMonsterSlot}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:msggamedata.RspCVCBattleUsedMonsterSlot)
        com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.internal_static_msggamedata_RspCVCBattleUsedMonsterSlot_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.internal_static_msggamedata_RspCVCBattleUsedMonsterSlot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot.class, com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot.Builder.class);
      }

      // Construct using com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        battleId_ = 0;

        if (attackerMonsterSlotBuilder_ == null) {
          attackerMonsterSlot_ = null;
        } else {
          attackerMonsterSlot_ = null;
          attackerMonsterSlotBuilder_ = null;
        }
        if (defenderMonsterSlotBuilder_ == null) {
          defenderMonsterSlot_ = null;
        } else {
          defenderMonsterSlot_ = null;
          defenderMonsterSlotBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.internal_static_msggamedata_RspCVCBattleUsedMonsterSlot_descriptor;
      }

      public com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot getDefaultInstanceForType() {
        return com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot.getDefaultInstance();
      }

      public com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot build() {
        com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot buildPartial() {
        com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot result = new com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot(this);
        result.battleId_ = battleId_;
        if (attackerMonsterSlotBuilder_ == null) {
          result.attackerMonsterSlot_ = attackerMonsterSlot_;
        } else {
          result.attackerMonsterSlot_ = attackerMonsterSlotBuilder_.build();
        }
        if (defenderMonsterSlotBuilder_ == null) {
          result.defenderMonsterSlot_ = defenderMonsterSlot_;
        } else {
          result.defenderMonsterSlot_ = defenderMonsterSlotBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot) {
          return mergeFrom((com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot other) {
        if (other == com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot.getDefaultInstance()) return this;
        if (other.getBattleId() != 0) {
          setBattleId(other.getBattleId());
        }
        if (other.hasAttackerMonsterSlot()) {
          mergeAttackerMonsterSlot(other.getAttackerMonsterSlot());
        }
        if (other.hasDefenderMonsterSlot()) {
          mergeDefenderMonsterSlot(other.getDefenderMonsterSlot());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int battleId_ ;
      /**
       * <code>uint32 battle_id = 1;</code>
       */
      public int getBattleId() {
        return battleId_;
      }
      /**
       * <code>uint32 battle_id = 1;</code>
       */
      public Builder setBattleId(int value) {
        
        battleId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 battle_id = 1;</code>
       */
      public Builder clearBattleId() {
        
        battleId_ = 0;
        onChanged();
        return this;
      }

      private com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData attackerMonsterSlot_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData, com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.Builder, com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotDataOrBuilder> attackerMonsterSlotBuilder_;
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData attacker_monster_slot = 2;</code>
       */
      public boolean hasAttackerMonsterSlot() {
        return attackerMonsterSlotBuilder_ != null || attackerMonsterSlot_ != null;
      }
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData attacker_monster_slot = 2;</code>
       */
      public com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData getAttackerMonsterSlot() {
        if (attackerMonsterSlotBuilder_ == null) {
          return attackerMonsterSlot_ == null ? com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.getDefaultInstance() : attackerMonsterSlot_;
        } else {
          return attackerMonsterSlotBuilder_.getMessage();
        }
      }
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData attacker_monster_slot = 2;</code>
       */
      public Builder setAttackerMonsterSlot(com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData value) {
        if (attackerMonsterSlotBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          attackerMonsterSlot_ = value;
          onChanged();
        } else {
          attackerMonsterSlotBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData attacker_monster_slot = 2;</code>
       */
      public Builder setAttackerMonsterSlot(
          com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.Builder builderForValue) {
        if (attackerMonsterSlotBuilder_ == null) {
          attackerMonsterSlot_ = builderForValue.build();
          onChanged();
        } else {
          attackerMonsterSlotBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData attacker_monster_slot = 2;</code>
       */
      public Builder mergeAttackerMonsterSlot(com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData value) {
        if (attackerMonsterSlotBuilder_ == null) {
          if (attackerMonsterSlot_ != null) {
            attackerMonsterSlot_ =
              com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.newBuilder(attackerMonsterSlot_).mergeFrom(value).buildPartial();
          } else {
            attackerMonsterSlot_ = value;
          }
          onChanged();
        } else {
          attackerMonsterSlotBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData attacker_monster_slot = 2;</code>
       */
      public Builder clearAttackerMonsterSlot() {
        if (attackerMonsterSlotBuilder_ == null) {
          attackerMonsterSlot_ = null;
          onChanged();
        } else {
          attackerMonsterSlot_ = null;
          attackerMonsterSlotBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData attacker_monster_slot = 2;</code>
       */
      public com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.Builder getAttackerMonsterSlotBuilder() {
        
        onChanged();
        return getAttackerMonsterSlotFieldBuilder().getBuilder();
      }
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData attacker_monster_slot = 2;</code>
       */
      public com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotDataOrBuilder getAttackerMonsterSlotOrBuilder() {
        if (attackerMonsterSlotBuilder_ != null) {
          return attackerMonsterSlotBuilder_.getMessageOrBuilder();
        } else {
          return attackerMonsterSlot_ == null ?
              com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.getDefaultInstance() : attackerMonsterSlot_;
        }
      }
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData attacker_monster_slot = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData, com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.Builder, com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotDataOrBuilder> 
          getAttackerMonsterSlotFieldBuilder() {
        if (attackerMonsterSlotBuilder_ == null) {
          attackerMonsterSlotBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData, com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.Builder, com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotDataOrBuilder>(
                  getAttackerMonsterSlot(),
                  getParentForChildren(),
                  isClean());
          attackerMonsterSlot_ = null;
        }
        return attackerMonsterSlotBuilder_;
      }

      private com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData defenderMonsterSlot_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData, com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.Builder, com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotDataOrBuilder> defenderMonsterSlotBuilder_;
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData defender_monster_slot = 3;</code>
       */
      public boolean hasDefenderMonsterSlot() {
        return defenderMonsterSlotBuilder_ != null || defenderMonsterSlot_ != null;
      }
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData defender_monster_slot = 3;</code>
       */
      public com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData getDefenderMonsterSlot() {
        if (defenderMonsterSlotBuilder_ == null) {
          return defenderMonsterSlot_ == null ? com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.getDefaultInstance() : defenderMonsterSlot_;
        } else {
          return defenderMonsterSlotBuilder_.getMessage();
        }
      }
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData defender_monster_slot = 3;</code>
       */
      public Builder setDefenderMonsterSlot(com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData value) {
        if (defenderMonsterSlotBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defenderMonsterSlot_ = value;
          onChanged();
        } else {
          defenderMonsterSlotBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData defender_monster_slot = 3;</code>
       */
      public Builder setDefenderMonsterSlot(
          com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.Builder builderForValue) {
        if (defenderMonsterSlotBuilder_ == null) {
          defenderMonsterSlot_ = builderForValue.build();
          onChanged();
        } else {
          defenderMonsterSlotBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData defender_monster_slot = 3;</code>
       */
      public Builder mergeDefenderMonsterSlot(com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData value) {
        if (defenderMonsterSlotBuilder_ == null) {
          if (defenderMonsterSlot_ != null) {
            defenderMonsterSlot_ =
              com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.newBuilder(defenderMonsterSlot_).mergeFrom(value).buildPartial();
          } else {
            defenderMonsterSlot_ = value;
          }
          onChanged();
        } else {
          defenderMonsterSlotBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData defender_monster_slot = 3;</code>
       */
      public Builder clearDefenderMonsterSlot() {
        if (defenderMonsterSlotBuilder_ == null) {
          defenderMonsterSlot_ = null;
          onChanged();
        } else {
          defenderMonsterSlot_ = null;
          defenderMonsterSlotBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData defender_monster_slot = 3;</code>
       */
      public com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.Builder getDefenderMonsterSlotBuilder() {
        
        onChanged();
        return getDefenderMonsterSlotFieldBuilder().getBuilder();
      }
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData defender_monster_slot = 3;</code>
       */
      public com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotDataOrBuilder getDefenderMonsterSlotOrBuilder() {
        if (defenderMonsterSlotBuilder_ != null) {
          return defenderMonsterSlotBuilder_.getMessageOrBuilder();
        } else {
          return defenderMonsterSlot_ == null ?
              com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.getDefaultInstance() : defenderMonsterSlot_;
        }
      }
      /**
       * <code>.msggamedata.CVCBattleUsedMonsterSlotData defender_monster_slot = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData, com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.Builder, com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotDataOrBuilder> 
          getDefenderMonsterSlotFieldBuilder() {
        if (defenderMonsterSlotBuilder_ == null) {
          defenderMonsterSlotBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData, com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotData.Builder, com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.CVCBattleUsedMonsterSlotDataOrBuilder>(
                  getDefenderMonsterSlot(),
                  getParentForChildren(),
                  isClean());
          defenderMonsterSlot_ = null;
        }
        return defenderMonsterSlotBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:msggamedata.RspCVCBattleUsedMonsterSlot)
    }

    // @@protoc_insertion_point(class_scope:msggamedata.RspCVCBattleUsedMonsterSlot)
    private static final com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot();
    }

    public static com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RspCVCBattleUsedMonsterSlot>
        PARSER = new com.google.protobuf.AbstractParser<RspCVCBattleUsedMonsterSlot>() {
      public RspCVCBattleUsedMonsterSlot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RspCVCBattleUsedMonsterSlot(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RspCVCBattleUsedMonsterSlot> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RspCVCBattleUsedMonsterSlot> getParserForType() {
      return PARSER;
    }

    public com.felania.msldb.RspCVCBattleUsedMonsterSlotOuterClass.RspCVCBattleUsedMonsterSlot getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_msggamedata_RspCVCBattleUsedMonsterSlot_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_msggamedata_RspCVCBattleUsedMonsterSlot_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!RspCVCBattleUsedMonsterSlot.proto\022\013msg" +
      "gamedata\032\"CVCBattleUsedMonsterSlotData.p" +
      "roto\"\304\001\n\033RspCVCBattleUsedMonsterSlot\022\021\n\t" +
      "battle_id\030\001 \001(\r\022H\n\025attacker_monster_slot" +
      "\030\002 \001(\0132).msggamedata.CVCBattleUsedMonste" +
      "rSlotData\022H\n\025defender_monster_slot\030\003 \001(\013" +
      "2).msggamedata.CVCBattleUsedMonsterSlotD" +
      "ataB\023\n\021com.felania.msldbb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.getDescriptor(),
        }, assigner);
    internal_static_msggamedata_RspCVCBattleUsedMonsterSlot_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_msggamedata_RspCVCBattleUsedMonsterSlot_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_msggamedata_RspCVCBattleUsedMonsterSlot_descriptor,
        new java.lang.String[] { "BattleId", "AttackerMonsterSlot", "DefenderMonsterSlot", });
    com.felania.msldb.CVCBattleUsedMonsterSlotDataOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
