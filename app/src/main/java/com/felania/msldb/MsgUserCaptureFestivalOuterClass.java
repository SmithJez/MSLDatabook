// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgUserCaptureFestival.proto

package com.felania.msldb;

public final class MsgUserCaptureFestivalOuterClass {
  private MsgUserCaptureFestivalOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MsgUserCaptureFestivalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:msggamedata.MsgUserCaptureFestival)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 capture_festival_id = 1;</code>
     */
    long getCaptureFestivalId();

    /**
     * <code>uint32 lucky_ticket = 2;</code>
     */
    int getLuckyTicket();

    /**
     * <code>uint32 season_capture_score = 3;</code>
     */
    int getSeasonCaptureScore();

    /**
     * <code>uint32 season_share_count = 4;</code>
     */
    int getSeasonShareCount();

    /**
     * <code>uint32 season_event_message_count = 5;</code>
     */
    int getSeasonEventMessageCount();

    /**
     * <code>uint64 last_bonus_ticket_date = 6;</code>
     */
    long getLastBonusTicketDate();
  }
  /**
   * Protobuf type {@code msggamedata.MsgUserCaptureFestival}
   */
  public  static final class MsgUserCaptureFestival extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:msggamedata.MsgUserCaptureFestival)
      MsgUserCaptureFestivalOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgUserCaptureFestival.newBuilder() to construct.
    private MsgUserCaptureFestival(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgUserCaptureFestival() {
      captureFestivalId_ = 0L;
      luckyTicket_ = 0;
      seasonCaptureScore_ = 0;
      seasonShareCount_ = 0;
      seasonEventMessageCount_ = 0;
      lastBonusTicketDate_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgUserCaptureFestival(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              captureFestivalId_ = input.readUInt64();
              break;
            }
            case 16: {

              luckyTicket_ = input.readUInt32();
              break;
            }
            case 24: {

              seasonCaptureScore_ = input.readUInt32();
              break;
            }
            case 32: {

              seasonShareCount_ = input.readUInt32();
              break;
            }
            case 40: {

              seasonEventMessageCount_ = input.readUInt32();
              break;
            }
            case 48: {

              lastBonusTicketDate_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.felania.msldb.MsgUserCaptureFestivalOuterClass.internal_static_msggamedata_MsgUserCaptureFestival_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.felania.msldb.MsgUserCaptureFestivalOuterClass.internal_static_msggamedata_MsgUserCaptureFestival_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival.class, com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival.Builder.class);
    }

    public static final int CAPTURE_FESTIVAL_ID_FIELD_NUMBER = 1;
    private long captureFestivalId_;
    /**
     * <code>uint64 capture_festival_id = 1;</code>
     */
    public long getCaptureFestivalId() {
      return captureFestivalId_;
    }

    public static final int LUCKY_TICKET_FIELD_NUMBER = 2;
    private int luckyTicket_;
    /**
     * <code>uint32 lucky_ticket = 2;</code>
     */
    public int getLuckyTicket() {
      return luckyTicket_;
    }

    public static final int SEASON_CAPTURE_SCORE_FIELD_NUMBER = 3;
    private int seasonCaptureScore_;
    /**
     * <code>uint32 season_capture_score = 3;</code>
     */
    public int getSeasonCaptureScore() {
      return seasonCaptureScore_;
    }

    public static final int SEASON_SHARE_COUNT_FIELD_NUMBER = 4;
    private int seasonShareCount_;
    /**
     * <code>uint32 season_share_count = 4;</code>
     */
    public int getSeasonShareCount() {
      return seasonShareCount_;
    }

    public static final int SEASON_EVENT_MESSAGE_COUNT_FIELD_NUMBER = 5;
    private int seasonEventMessageCount_;
    /**
     * <code>uint32 season_event_message_count = 5;</code>
     */
    public int getSeasonEventMessageCount() {
      return seasonEventMessageCount_;
    }

    public static final int LAST_BONUS_TICKET_DATE_FIELD_NUMBER = 6;
    private long lastBonusTicketDate_;
    /**
     * <code>uint64 last_bonus_ticket_date = 6;</code>
     */
    public long getLastBonusTicketDate() {
      return lastBonusTicketDate_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (captureFestivalId_ != 0L) {
        output.writeUInt64(1, captureFestivalId_);
      }
      if (luckyTicket_ != 0) {
        output.writeUInt32(2, luckyTicket_);
      }
      if (seasonCaptureScore_ != 0) {
        output.writeUInt32(3, seasonCaptureScore_);
      }
      if (seasonShareCount_ != 0) {
        output.writeUInt32(4, seasonShareCount_);
      }
      if (seasonEventMessageCount_ != 0) {
        output.writeUInt32(5, seasonEventMessageCount_);
      }
      if (lastBonusTicketDate_ != 0L) {
        output.writeUInt64(6, lastBonusTicketDate_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (captureFestivalId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, captureFestivalId_);
      }
      if (luckyTicket_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, luckyTicket_);
      }
      if (seasonCaptureScore_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, seasonCaptureScore_);
      }
      if (seasonShareCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, seasonShareCount_);
      }
      if (seasonEventMessageCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, seasonEventMessageCount_);
      }
      if (lastBonusTicketDate_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, lastBonusTicketDate_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival)) {
        return super.equals(obj);
      }
      com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival other = (com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival) obj;

      boolean result = true;
      result = result && (getCaptureFestivalId()
          == other.getCaptureFestivalId());
      result = result && (getLuckyTicket()
          == other.getLuckyTicket());
      result = result && (getSeasonCaptureScore()
          == other.getSeasonCaptureScore());
      result = result && (getSeasonShareCount()
          == other.getSeasonShareCount());
      result = result && (getSeasonEventMessageCount()
          == other.getSeasonEventMessageCount());
      result = result && (getLastBonusTicketDate()
          == other.getLastBonusTicketDate());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CAPTURE_FESTIVAL_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCaptureFestivalId());
      hash = (37 * hash) + LUCKY_TICKET_FIELD_NUMBER;
      hash = (53 * hash) + getLuckyTicket();
      hash = (37 * hash) + SEASON_CAPTURE_SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getSeasonCaptureScore();
      hash = (37 * hash) + SEASON_SHARE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getSeasonShareCount();
      hash = (37 * hash) + SEASON_EVENT_MESSAGE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getSeasonEventMessageCount();
      hash = (37 * hash) + LAST_BONUS_TICKET_DATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLastBonusTicketDate());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code msggamedata.MsgUserCaptureFestival}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:msggamedata.MsgUserCaptureFestival)
        com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestivalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.felania.msldb.MsgUserCaptureFestivalOuterClass.internal_static_msggamedata_MsgUserCaptureFestival_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.felania.msldb.MsgUserCaptureFestivalOuterClass.internal_static_msggamedata_MsgUserCaptureFestival_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival.class, com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival.Builder.class);
      }

      // Construct using com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        captureFestivalId_ = 0L;

        luckyTicket_ = 0;

        seasonCaptureScore_ = 0;

        seasonShareCount_ = 0;

        seasonEventMessageCount_ = 0;

        lastBonusTicketDate_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.felania.msldb.MsgUserCaptureFestivalOuterClass.internal_static_msggamedata_MsgUserCaptureFestival_descriptor;
      }

      public com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival getDefaultInstanceForType() {
        return com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival.getDefaultInstance();
      }

      public com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival build() {
        com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival buildPartial() {
        com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival result = new com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival(this);
        result.captureFestivalId_ = captureFestivalId_;
        result.luckyTicket_ = luckyTicket_;
        result.seasonCaptureScore_ = seasonCaptureScore_;
        result.seasonShareCount_ = seasonShareCount_;
        result.seasonEventMessageCount_ = seasonEventMessageCount_;
        result.lastBonusTicketDate_ = lastBonusTicketDate_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival) {
          return mergeFrom((com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival other) {
        if (other == com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival.getDefaultInstance()) return this;
        if (other.getCaptureFestivalId() != 0L) {
          setCaptureFestivalId(other.getCaptureFestivalId());
        }
        if (other.getLuckyTicket() != 0) {
          setLuckyTicket(other.getLuckyTicket());
        }
        if (other.getSeasonCaptureScore() != 0) {
          setSeasonCaptureScore(other.getSeasonCaptureScore());
        }
        if (other.getSeasonShareCount() != 0) {
          setSeasonShareCount(other.getSeasonShareCount());
        }
        if (other.getSeasonEventMessageCount() != 0) {
          setSeasonEventMessageCount(other.getSeasonEventMessageCount());
        }
        if (other.getLastBonusTicketDate() != 0L) {
          setLastBonusTicketDate(other.getLastBonusTicketDate());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long captureFestivalId_ ;
      /**
       * <code>uint64 capture_festival_id = 1;</code>
       */
      public long getCaptureFestivalId() {
        return captureFestivalId_;
      }
      /**
       * <code>uint64 capture_festival_id = 1;</code>
       */
      public Builder setCaptureFestivalId(long value) {
        
        captureFestivalId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 capture_festival_id = 1;</code>
       */
      public Builder clearCaptureFestivalId() {
        
        captureFestivalId_ = 0L;
        onChanged();
        return this;
      }

      private int luckyTicket_ ;
      /**
       * <code>uint32 lucky_ticket = 2;</code>
       */
      public int getLuckyTicket() {
        return luckyTicket_;
      }
      /**
       * <code>uint32 lucky_ticket = 2;</code>
       */
      public Builder setLuckyTicket(int value) {
        
        luckyTicket_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 lucky_ticket = 2;</code>
       */
      public Builder clearLuckyTicket() {
        
        luckyTicket_ = 0;
        onChanged();
        return this;
      }

      private int seasonCaptureScore_ ;
      /**
       * <code>uint32 season_capture_score = 3;</code>
       */
      public int getSeasonCaptureScore() {
        return seasonCaptureScore_;
      }
      /**
       * <code>uint32 season_capture_score = 3;</code>
       */
      public Builder setSeasonCaptureScore(int value) {
        
        seasonCaptureScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 season_capture_score = 3;</code>
       */
      public Builder clearSeasonCaptureScore() {
        
        seasonCaptureScore_ = 0;
        onChanged();
        return this;
      }

      private int seasonShareCount_ ;
      /**
       * <code>uint32 season_share_count = 4;</code>
       */
      public int getSeasonShareCount() {
        return seasonShareCount_;
      }
      /**
       * <code>uint32 season_share_count = 4;</code>
       */
      public Builder setSeasonShareCount(int value) {
        
        seasonShareCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 season_share_count = 4;</code>
       */
      public Builder clearSeasonShareCount() {
        
        seasonShareCount_ = 0;
        onChanged();
        return this;
      }

      private int seasonEventMessageCount_ ;
      /**
       * <code>uint32 season_event_message_count = 5;</code>
       */
      public int getSeasonEventMessageCount() {
        return seasonEventMessageCount_;
      }
      /**
       * <code>uint32 season_event_message_count = 5;</code>
       */
      public Builder setSeasonEventMessageCount(int value) {
        
        seasonEventMessageCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 season_event_message_count = 5;</code>
       */
      public Builder clearSeasonEventMessageCount() {
        
        seasonEventMessageCount_ = 0;
        onChanged();
        return this;
      }

      private long lastBonusTicketDate_ ;
      /**
       * <code>uint64 last_bonus_ticket_date = 6;</code>
       */
      public long getLastBonusTicketDate() {
        return lastBonusTicketDate_;
      }
      /**
       * <code>uint64 last_bonus_ticket_date = 6;</code>
       */
      public Builder setLastBonusTicketDate(long value) {
        
        lastBonusTicketDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 last_bonus_ticket_date = 6;</code>
       */
      public Builder clearLastBonusTicketDate() {
        
        lastBonusTicketDate_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:msggamedata.MsgUserCaptureFestival)
    }

    // @@protoc_insertion_point(class_scope:msggamedata.MsgUserCaptureFestival)
    private static final com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival();
    }

    public static com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgUserCaptureFestival>
        PARSER = new com.google.protobuf.AbstractParser<MsgUserCaptureFestival>() {
      public MsgUserCaptureFestival parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgUserCaptureFestival(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgUserCaptureFestival> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MsgUserCaptureFestival> getParserForType() {
      return PARSER;
    }

    public com.felania.msldb.MsgUserCaptureFestivalOuterClass.MsgUserCaptureFestival getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_msggamedata_MsgUserCaptureFestival_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_msggamedata_MsgUserCaptureFestival_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034MsgUserCaptureFestival.proto\022\013msggamed" +
      "ata\"\311\001\n\026MsgUserCaptureFestival\022\033\n\023captur" +
      "e_festival_id\030\001 \001(\004\022\024\n\014lucky_ticket\030\002 \001(" +
      "\r\022\034\n\024season_capture_score\030\003 \001(\r\022\032\n\022seaso" +
      "n_share_count\030\004 \001(\r\022\"\n\032season_event_mess" +
      "age_count\030\005 \001(\r\022\036\n\026last_bonus_ticket_dat" +
      "e\030\006 \001(\004B\023\n\021com.felania.msldbb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_msggamedata_MsgUserCaptureFestival_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_msggamedata_MsgUserCaptureFestival_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_msggamedata_MsgUserCaptureFestival_descriptor,
        new java.lang.String[] { "CaptureFestivalId", "LuckyTicket", "SeasonCaptureScore", "SeasonShareCount", "SeasonEventMessageCount", "LastBonusTicketDate", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
